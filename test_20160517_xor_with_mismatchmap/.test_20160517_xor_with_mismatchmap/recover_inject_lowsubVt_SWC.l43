GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	.include "chip_para_debug.asm"
   1               	.set RI_MEAS_ON, 0 /* 0:skip measurenet 1:measure @ Recover injection */
   2               	.set RIL_MEAS_ON, 0 /* 0:skip measurenet 1:measure @ Recover injection */
   3               	.set CP_MEAS_ON, 0 /* 0:skip measurenet 1:measure @ Coarse Program */
   4               	.set CPL_MEAS_ON, 0 /* 0:skip measurenet 1:measure @ Coarse Program */
   5               	.set FP_MEAS_ON, 0 /* 0:skip measurenet 1:measure @ Fine Program */
   6               	.set FPL_MEAS_ON, 0 /* 0:skip measurenet 1:measure @ Fine Program */
   3               	.include "chip_para_RI.asm"
   1               	/* RI (Recover Injection Above & Sub threshold) parameters */
   2               	.set RI_GATE_S_SWC, 0x0040 /* Gate(SWC) = gnd */
   3               	.set RI_VC1_SWC, 3116 /* Ivfg @Vgm=0V -> 1nA@Vgm=0.6V */
   4               	.set RI_VC2_SWC, 3040 /* Ivfg*2/5 @Vgm=0V */
   5               	.set RI_VC3_SWC, 2813 /* Ivfg*1/10 @Vgm=0V */
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 6


   6               	.set RI_VC4_SWC, 2360 /* Ivfg=1nA @Vgm=0V */
   7               	.set RI_VD1_SWC, 0xea0e /* Vd @ final stage */
   8               	.set RI_VD2_SWC, 0xfe0e /* Vd @ pre-final stage */
   9               	.set RI_INJ_T_SWC, 1 /* Injection time unit (*10us) */
  10               	.set RI_NUM_SWC, 300 /* # of Recover Injection */
  11               	
  12               	.set RI_GATE_S_OTA, 0x3300 /* Gate(OTA) = 2.5V */
  13               	.set RI_VC1_OTA, 3567 /* Ivfg @Vgm=0V -> 1nA@Vgm=0.6V */
  14               	.set RI_VC2_OTA, 3447 /* Ivfg*2/5 @Vgm=0V */
  15               	.set RI_VC3_OTA, 3084 /* Ivfg*1/10 @Vgm=0V */
  16               	.set RI_VC4_OTA, 2360 /* Ivfg=1nA @Vgm=0V */
  17               	.set RI_VD1_OTA, 0xea0e /* Vd @ final stage */
  18               	.set RI_VD2_OTA, 0xfe0e /* Vd @ pre-final stage */
  19               	.set RI_INJ_T_OTA, 1 /* Injection time unit (*10us) */
  20               	.set RI_NUM_OTA, 300 /* # of Recover Injection */
  21               	
  22               	.set RI_GATE_S_OTAREF, 0x0040 /* Gate(OTAREF) = gnd */
  23               	.set RI_VC1_OTAREF, 3201 /* Ivfg @Vgm=0V -> 1nA@Vgm=0.6V */
  24               	.set RI_VC2_OTAREF, 3117 /* Ivfg*2/5 @Vgm=0V */
  25               	.set RI_VC3_OTAREF, 2864 /* Ivfg*1/10 @Vgm=0V */
  26               	.set RI_VC4_OTAREF, 2360 /* Ivfg=1nA @Vgm=0V */
  27               	.set RI_VD1_OTAREF, 0xea0e /* Vd @ final stage */
  28               	.set RI_VD2_OTAREF, 0xfe0e /* Vd @ pre-final stage */
  29               	.set RI_INJ_T_OTAREF, 1 /* Injection time unit (*10us) */
  30               	.set RI_NUM_OTAREF, 300 /* # of Recover Injection */
  31               	
  32               	.set RI_GATE_S_MITE, 0x2900 /* Gate(MITE) = 2.0V */
  33               	.set RI_VC1_MITE, 3736 /* Ivfg @Vgm=0V -> 1nA@Vgm=0.6V */
  34               	.set RI_VC2_MITE, 3599 /* Ivfg*2/5 @Vgm=0V */
  35               	.set RI_VC3_MITE, 3186 /* Ivfg*1/10 @Vgm=0V */
  36               	.set RI_VC4_MITE, 2360 /* Ivfg=1nA @Vgm=0V */
  37               	.set RI_VD1_MITE, 0xea0e /* Vd @ final stage */
  38               	.set RI_VD2_MITE, 0xfe0e /* Vd @ pre-final stage */
  39               	.set RI_INJ_T_MITE, 1 /* Injection time unit (*10us) */
  40               	.set RI_NUM_MITE, 300 /* # of Recover Injection */
  41               	
  42               	.set RI_GATE_S_DIRSWC, 0x0100 /* Gate(DIRSWC) = 1.4V */
  43               	.set RI_VC1_DIRSWC, 3132 /* Ivfg @Vgm=0V -> 1nA@Vgm=0.6V */
  44               	.set RI_VC2_DIRSWC, 3055 /* Ivfg*2/5 @Vgm=0V */
  45               	.set RI_VC3_DIRSWC, 2823 /* Ivfg*1/10 @Vgm=0V */
  46               	.set RI_VC4_DIRSWC, 2360 /* Ivfg=1nA @Vgm=0V */
  47               	.set RI_VD1_DIRSWC, 0xea0e /* Vd @ final stage */
  48               	.set RI_VD2_DIRSWC, 0xfe0e /* Vd @ pre-final stage */
  49               	.set RI_INJ_T_DIRSWC, 1 /* Injection time unit (*10us) */
  50               	.set RI_NUM_DIRSWC, 300 /* # of Recover Injection */
  51               	
  52               	/* RIL (Recover Injection low sub threshold) parameters */
  53               	.set RIL_GATE_S_SWC, 0x0040 /* Gate(SWC) = gnd */
  54               	.set RIL_VC1_SWC, 2360 /* Ivfg=1n A@Vgm=0V */
  55               	.set RIL_VC2_SWC, 2298 /* Ivfg=lowest current @Vgm=0V */
  56               	.set RIL_VD1_SWC, 0xea0e /* Vd @ final stage */
  57               	.set RIL_INJ_T_SWC, 1 /* Injection time unit (*10us) */
  58               	.set RIL_NUM_SWC, 300 /* # of Recover Injection */
  59               	
  60               	.set RIL_GATE_S_OTA, 0x3300 /* Gate(OTA) = 2.5V */
  61               	.set RIL_VC1_OTA, 2360 /* Ivfg=1n A@Vgm=0V */
  62               	.set RIL_VC2_OTA, 2296 /* Ivfg=lowest current @Vgm=0V */
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 7


  63               	.set RIL_VD1_OTA, 0xea0e /* Vd @ final stage */
  64               	.set RIL_INJ_T_OTA, 1 /* Injection time unit (*10us) */
  65               	.set RIL_NUM_OTA, 300 /* # of Recover Injection */
  66               	
  67               	.set RIL_GATE_S_OTAREF, 0x0040 /* Gate(OTAREF) = gnd */
  68               	.set RIL_VC1_OTAREF, 2360 /* Ivfg=1n A@Vgm=0V */
  69               	.set RIL_VC2_OTAREF, 2297 /* Ivfg=lowest current @Vgm=0V */
  70               	.set RIL_VD1_OTAREF, 0xea0e /* Vd @ final stage */
  71               	.set RIL_INJ_T_OTAREF, 1 /* Injection time unit (*10us) */
  72               	.set RIL_NUM_OTAREF, 300 /* # of Recover Injection */
  73               	
  74               	.set RIL_GATE_S_MITE, 0x2900 /* Gate(MITE) = 2.0V */
  75               	.set RIL_VC1_MITE, 2360 /* Ivfg=1n A@Vgm=0V */
  76               	.set RIL_VC2_MITE, 2295 /* Ivfg=lowest current @Vgm=0V */
  77               	.set RIL_VD1_MITE, 0xea0e /* Vd @ final stage */
  78               	.set RIL_INJ_T_MITE, 1 /* Injection time unit (*10us) */
  79               	.set RIL_NUM_MITE, 300 /* # of Recover Injection */
  80               	
  81               	.set RIL_GATE_S_DIRSWC, 0x0100 /* Gate(DIRSWC) = 1.4V */
  82               	.set RIL_VC1_DIRSWC, 2360 /* Ivfg=1n A@Vgm=0V */
  83               	.set RIL_VC2_DIRSWC, 2303 /* Ivfg=lowest current @Vgm=0V */
  84               	.set RIL_VD1_DIRSWC, 0xea0e /* Vd @ final stage */
  85               	.set RIL_INJ_T_DIRSWC, 1 /* Injection time unit (*10us) */
  86               	.set RIL_NUM_DIRSWC, 300 /* # of Recover Injection */
  87               	
   4               	
   5               	.global main
   6               	
   7               	main:
   8 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
   9 0004 3740 0050 		mov	#0x5000, r7
  10 0008 0A43      		mov	#0, r10			; Initialize time
  11 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  12               	init_wait:
  13 000e 1583      	        dec.w   r5 
  14 0010 FE23      	        jnz     init_wait
  15 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  15      5800 
  16 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  16      2001 
  17 001e 32C2      		dint
  18 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  19 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  19      6401 
  20 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  20      000B 
  21 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  21      6001 
  22 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  22      0C0B 
  23 003c 8243 080B 		mov     #0,    &ROW_SEL
  24 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  25 0044 874A 0000 		mov	r10, @r7
  26 0048 2753      		incd	r7
  27 004a 874A 0000 		mov	r10, @r7
  28 004e 2753      		incd	r7
  29 0050 3D40 4000 		mov	#0x0040, r13		;gate_s = gnd
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 8


  30 0054 B012 0000 		call	#block_measure
  31               	
  32 0058 3F40 2C01 		mov	#RIL_NUM_SWC, r15
  33               	coarse_loop_s:
  34 005c 3D40 4000 		mov	#0x0040, r13		;gate_s = gnd
  35 0060 B012 0000 		call	#measure_verify
  36 0064 B012 0000 	        call	#coarse_inject
  37 0068 0843      	        mov     #RIL_MEAS_ON, r8         ; 0:skip measurenet 1:measure
  38 006a 0893      		cmp	#0x0000, r8
  39 006c 0924      		jeq	skip_measurement
  40 006e B740 3333 	        mov     #0x3333, @r7	        ; Record Injection 0x3333 
  40      0000 
  41 0074 2753      		incd	r7
  42 0076 874A 0000 		mov     r10, @r7	        ; Record time 
  43 007a 2753      		incd	r7
  44 007c B012 0000 		call	#block_measure
  45               	skip_measurement:
  46 0080 1F83      	        dec.w   r15
  47 0082 0124      	        jz      coarse_loop_e
  48 0084 EB3F      		jmp	coarse_loop_s
  49               	coarse_loop_e:
  50               	
  51 0086 B740 3333 	        mov     #0x3333, @r7	        ; Record Injection 0x3333 
  51      0000 
  52 008c 2753      		incd	r7
  53 008e 874A 0000 		mov     r10, @r7	        ; Record time 
  54 0092 2753      		incd	r7
  55 0094 3D40 4000 		mov	#0x0040, r13		;gate_s = gnd
  56 0098 B012 0000 		call	#block_measure
  57               	
  58 009c B743 0000 		mov	#0xFFFF, @r7		; Data End
  59 00a0 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
  60 00a4 043D      		jmp     end_of_test
  61               	
  62               	coarse_inject:
  63 00a6 3B40 0070 		mov	#0x7000, r11
  64 00aa 2C4B      		mov	@r11, r12		; No. of FGs 
  65 00ac B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  65      0C0B 
  66 00b2 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  66      6401 
  67 00b8 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  67      6001 
  68 00be B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  69               	coarse_inject_set_s:
  70 00c2 2B53      		incd	r11
  71 00c4 A24B 080B 		mov     @r11,    &ROW_SEL
  72 00c8 2B53      		incd	r11
  73 00ca A24B 0A0B 	        mov     @r11,    &COL_SEL
  74 00ce 2B53      		incd	r11
  75 00d0 2B53      		incd	r11
  76 00d2 2B53      		incd	r11
  77 00d4 284B      	        mov     @r11,    r8		; Read # of pulses
  78 00d6 0893      		cmp	#0x0000, r8
  79 00d8 2524      		jeq	coarse_inject_skip
  80 00da B240 4000 		mov	#RIL_GATE_S_SWC, &GATE_S	; gate_s
  80      020B 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 9


  81 00e0 B240 6000 		mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
  81      100B 
  82 00e6 B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
  82      120B 
  83 00ec B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  83      000B 
  84 00f2 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
  84      6001 
  85 00f8 2543      		mov     #2, r5             	; Number of ms
  86 00fa B012 0000 		call    #wait_ms                ; Call the waiting function
  87 00fe B240 0EEA 		mov 	#RIL_VD1_SWC, &DRAIN_CTRL	; Vd  ~ 0.6V
  87      000B 
  88 0104 3890 CCCC 		cmp	#0xcccc, r8
  89 0108 0324      		jeq	injection_pulse
  90               	;	mov 	#0xfe0e, &DRAIN_CTRL	; Vd = 0.415V
  91               	;	cmp	#0xdddd, r8
  92               	;	jeq	injection_pulse
  93 010a B240 2600 		mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e: 
  93      000B 
  94               	injection_pulse:
  95 0110 1543      	       	mov     #RIL_INJ_T_SWC, r5 	; Number of 10us to inject
  96 0112 B012 0000 		call    #wait_10us             	; Call the waiting function
  97 0116 1A53      		add     #RIL_INJ_T_SWC, r10	; Calculate time
  98               	;	cmp	#0xffff, r8
  99               	;	jne	pulse_width_10us
 100               	;     	mov     #1, r5         		; Number of 10us to inject
 101               	;	call    #wait_10us             	; Call the waiting function
 102               	;	add     #1, r10	        	; Calculate time
 103               	;pulse_width_10us:
 104 0118 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 104      000B 
 105 011e 1543      		mov     #1, r5             	; Number of ms
 106 0120 B012 0000 		call    #wait_ms                ; Call the waiting function
 107               	coarse_inject_skip:
 108 0124 1C83      	       	dec.w   r12
 109 0126 0124      	        jz      coarse_inject_e
 110 0128 CC3F      	 	jmp	coarse_inject_set_s
 111               	coarse_inject_e:
 112 012a A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
 113 012e 2543      		mov     #2, r5             	; Number of ms
 114 0130 B012 0000 		call    #wait_ms                ; Call the waiting function
 115 0134 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 115      6001 
 116 013a 1543      		mov     #1, r5             	; Number of ms
 117 013c B012 0000 		call    #wait_ms                ; Call the waiting function
 118 0140 A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 119 0144 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 119      100B 
 120 014a B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 120      120B 
 121 0150 1543      		mov     #1, r5             	; Number of ms
 122 0152 B012 0000 		call    #wait_ms                ; Call the waiting function
 123 0156 3041      		ret
 124               	
 125               	measure_verify:
 126 0158 3B40 0070 		mov	#0x7000, r11
 127 015c 2C4B      		mov	@r11, r12		; No. of FGs 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 10


 128 015e B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 128      0C0B 
 129 0164 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 129      6401 
 130 016a B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 130      6001 
 131 0170 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 132               	measure_verify_s:
 133 0174 2B53      		incd	r11
 134 0176 A24B 080B 		mov     @r11,    &ROW_SEL
 135 017a 2B53      		incd	r11
 136 017c A24B 0A0B 	        mov     @r11,    &COL_SEL
 137 0180 2B53      		incd	r11
 138               	;	mov	@r11, r8
 139 0182 2B53      		incd	r11
 140 0184 2B53      		incd	r11
 141 0186 294B      		mov	@r11, r9		; Read # of pulses
 142 0188 0993      		cmp	#0x0000, r9
 143 018a 2F24      		jeq	measure_verify_skip
 144 018c 824D 020B 		mov 	r13, &GATE_S
 145 0190 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 145      100B 
 146 0196 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 146      120B 
 147 019c B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 147      000B 
 148 01a2 2543      	        mov     #2, r5             	; Number of ms
 149 01a4 B012 0000 		call    #wait_ms                ; Call the waiting function
 150 01a8 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 150      000B 
 151 01ae 3540 0A00 	        mov     #10, r5             	; Number of ms
 152 01b2 B012 0000 	        call    #wait_ms                ; Call the waiting function
 153 01b6 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 153      0C0B 
 154 01bc 3540 0500 	        mov     #5, r5             	; Number of ms
 155 01c0 B012 0000 		call    #wait_ms                ; Call the waiting function
 156 01c4 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 157 01c8 1942 040B 		mov     &ADC, r9	        ; Get value in counter
 158 01cc B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 158      0C0B 
 159               	;	cmp	r8, r9
 160 01d2 3990 3809 	        cmp	#RIL_VC1_SWC, r9	; 1nA @ Vgm=0V
 161               	;	jn	measure_verify_skip	
 162 01d6 0330      		jn	status_1
 163 01d8 8B43 0000 		mov	#0x0000, @r11		; Injection over
 164 01dc 063C      		jmp	measure_verify_skip	
 165               	status_1:
 166 01de 3990 FA08 		cmp	#RIL_VC2_SWC, r9	; hundreds pA below 1nA 
 167               	;	jn	status_2
 168 01e2 0330      		jn	measure_verify_skip	
 169 01e4 BB40 CCCC 		mov	#0xcccc, @r11		; Vd =0.6V, time resolution = 10us
 169      0000 
 170               	;	jmp	measure_verify_skip	
 171               	;status_2:
 172               	;	;cmp	#0x158f, r9		; 10nA @ Vgm=0V
 173               	;	cmp	#0x145c, r9		; 5nA @ Vgm=0V
 174               	;	jn	status_3
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 11


 175               	;	mov	#0xdddd, @r11		; Vd =0.4V, time resolution = 10us
 176               	;	jmp	measure_verify_skip	
 177               	;status_3:
 178               	;	cmp	#0x1190, r9		; 1nA @ Vgm=0V
 179               	;	jn	measure_verify_skip
 180               	;	mov	#0xeeee, @r11		; time resolution = 10us
 181               	measure_verify_skip:
 182 01ea 1C83      	        dec.w   r12
 183 01ec 0124      	        jz      measure_verify_e
 184 01ee C23F      		jmp	measure_verify_s
 185               	measure_verify_e:
 186 01f0 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 186      000B 
 187 01f6 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 187      6001 
 188 01fc 3041      		ret
 189               	
 190               	block_measure:
 191 01fe 3B40 0070 		mov	#0x7000, r11
 192 0202 2C4B      		mov	@r11, r12		; No. of FGs 
 193 0204 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 193      0C0B 
 194 020a B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 194      6401 
 195 0210 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 195      6001 
 196 0216 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 197               	block_measure_s:
 198 021a 2B53      		incd	r11
 199 021c A24B 080B 		mov     @r11,    &ROW_SEL
 200 0220 2B53      		incd	r11
 201 0222 A24B 0A0B 	        mov     @r11,    &COL_SEL
 202 0226 2B53      		incd	r11
 203 0228 2B53      		incd	r11
 204 022a 2B53      		incd	r11
 205 022c 824D 020B 		mov 	r13, &GATE_S
 206 0230 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 206      100B 
 207 0236 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 207      120B 
 208 023c B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 208      000B 
 209 0242 2543      	        mov     #2, r5             	; Number of ms
 210 0244 B012 0000 		call    #wait_ms                ; Call the waiting function
 211 0248 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 211      000B 
 212 024e 3540 0A00 	        mov     #10, r5             	; Number of ms
 213 0252 B012 0000 	        call    #wait_ms                ; Call the waiting function
 214 0256 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 214      0C0B 
 215 025c 3540 0500 	        mov     #5, r5             	; Number of ms
 216 0260 B012 0000 		call    #wait_ms                ; Call the waiting function
 217 0264 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 218 0268 9742 040B 		mov     &ADC, @r7		; Get value in counter
 218      0000 
 219 026e 2753      		incd	r7
 220 0270 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 12


 220      0C0B 
 221 0276 1C83      	        dec.w   r12
 222 0278 0124      	        jz      block_measure_e
 223 027a CF3F      		jmp	block_measure_s
 224               	block_measure_e:
 225 027c B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 225      000B 
 226 0282 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 226      6001 
 227 0288 3041      		ret
 228               	
 229               	wait_ms:
 230 028a 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 231 028e 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 232               	wait_ms_loop:
 233 0290 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 234 0292 FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 235 0294 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 236 0296 1583      	        dec.w   r5                      ; Decrement number of ms total
 237 0298 FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
 238 029a 3041      	        ret    
 239               	 
 240               	wait_10us:
 241 029c 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
 242 02a0 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 243               	wait_10us_loop:
 244 02a2 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 245 02a4 FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 246 02a6 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 247 02a8 1583      	        dec.w   r5                      ; Decrement number of ms total
 248 02aa FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 249 02ac 3041      	        ret   
 250               	
 251               	end_of_test:
 252 02ae 8243 5800 		mov	#0x0000, &BCSCTL2
 253 02b2 0343      		nop
 254 02b4 3043      		br #0xffff
 255               	
 256               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 257               	.section .vectors, "a"
 258 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 259 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 260 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 261 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 262 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 263 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 264 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 265 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 266 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
 267 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 268 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 269 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 270 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 271 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
 272 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
 273 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 13


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 14


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 15


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 16


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
 chip_para_debug.asm:1      *ABS*:00000000 RI_MEAS_ON
 chip_para_debug.asm:2      *ABS*:00000000 RIL_MEAS_ON
 chip_para_debug.asm:3      *ABS*:00000000 CP_MEAS_ON
 chip_para_debug.asm:4      *ABS*:00000000 CPL_MEAS_ON
 chip_para_debug.asm:5      *ABS*:00000000 FP_MEAS_ON
 chip_para_debug.asm:6      *ABS*:00000000 FPL_MEAS_ON
    chip_para_RI.asm:2      *ABS*:00000040 RI_GATE_S_SWC
    chip_para_RI.asm:3      *ABS*:00000c2c RI_VC1_SWC
    chip_para_RI.asm:4      *ABS*:00000be0 RI_VC2_SWC
    chip_para_RI.asm:5      *ABS*:00000afd RI_VC3_SWC
    chip_para_RI.asm:6      *ABS*:00000938 RI_VC4_SWC
    chip_para_RI.asm:7      *ABS*:0000ea0e RI_VD1_SWC
    chip_para_RI.asm:8      *ABS*:0000fe0e RI_VD2_SWC
    chip_para_RI.asm:9      *ABS*:00000001 RI_INJ_T_SWC
    chip_para_RI.asm:10     *ABS*:0000012c RI_NUM_SWC
    chip_para_RI.asm:12     *ABS*:00003300 RI_GATE_S_OTA
    chip_para_RI.asm:13     *ABS*:00000def RI_VC1_OTA
    chip_para_RI.asm:14     *ABS*:00000d77 RI_VC2_OTA
    chip_para_RI.asm:15     *ABS*:00000c0c RI_VC3_OTA
    chip_para_RI.asm:16     *ABS*:00000938 RI_VC4_OTA
    chip_para_RI.asm:17     *ABS*:0000ea0e RI_VD1_OTA
    chip_para_RI.asm:18     *ABS*:0000fe0e RI_VD2_OTA
    chip_para_RI.asm:19     *ABS*:00000001 RI_INJ_T_OTA
    chip_para_RI.asm:20     *ABS*:0000012c RI_NUM_OTA
    chip_para_RI.asm:22     *ABS*:00000040 RI_GATE_S_OTAREF
    chip_para_RI.asm:23     *ABS*:00000c81 RI_VC1_OTAREF
    chip_para_RI.asm:24     *ABS*:00000c2d RI_VC2_OTAREF
    chip_para_RI.asm:25     *ABS*:00000b30 RI_VC3_OTAREF
    chip_para_RI.asm:26     *ABS*:00000938 RI_VC4_OTAREF
    chip_para_RI.asm:27     *ABS*:0000ea0e RI_VD1_OTAREF
    chip_para_RI.asm:28     *ABS*:0000fe0e RI_VD2_OTAREF
    chip_para_RI.asm:29     *ABS*:00000001 RI_INJ_T_OTAREF
    chip_para_RI.asm:30     *ABS*:0000012c RI_NUM_OTAREF
    chip_para_RI.asm:32     *ABS*:00002900 RI_GATE_S_MITE
    chip_para_RI.asm:33     *ABS*:00000e98 RI_VC1_MITE
    chip_para_RI.asm:34     *ABS*:00000e0f RI_VC2_MITE
    chip_para_RI.asm:35     *ABS*:00000c72 RI_VC3_MITE
    chip_para_RI.asm:36     *ABS*:00000938 RI_VC4_MITE
    chip_para_RI.asm:37     *ABS*:0000ea0e RI_VD1_MITE
    chip_para_RI.asm:38     *ABS*:0000fe0e RI_VD2_MITE
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 17


    chip_para_RI.asm:39     *ABS*:00000001 RI_INJ_T_MITE
    chip_para_RI.asm:40     *ABS*:0000012c RI_NUM_MITE
    chip_para_RI.asm:42     *ABS*:00000100 RI_GATE_S_DIRSWC
    chip_para_RI.asm:43     *ABS*:00000c3c RI_VC1_DIRSWC
    chip_para_RI.asm:44     *ABS*:00000bef RI_VC2_DIRSWC
    chip_para_RI.asm:45     *ABS*:00000b07 RI_VC3_DIRSWC
    chip_para_RI.asm:46     *ABS*:00000938 RI_VC4_DIRSWC
    chip_para_RI.asm:47     *ABS*:0000ea0e RI_VD1_DIRSWC
    chip_para_RI.asm:48     *ABS*:0000fe0e RI_VD2_DIRSWC
    chip_para_RI.asm:49     *ABS*:00000001 RI_INJ_T_DIRSWC
    chip_para_RI.asm:50     *ABS*:0000012c RI_NUM_DIRSWC
    chip_para_RI.asm:53     *ABS*:00000040 RIL_GATE_S_SWC
    chip_para_RI.asm:54     *ABS*:00000938 RIL_VC1_SWC
    chip_para_RI.asm:55     *ABS*:000008fa RIL_VC2_SWC
    chip_para_RI.asm:56     *ABS*:0000ea0e RIL_VD1_SWC
    chip_para_RI.asm:57     *ABS*:00000001 RIL_INJ_T_SWC
    chip_para_RI.asm:58     *ABS*:0000012c RIL_NUM_SWC
    chip_para_RI.asm:60     *ABS*:00003300 RIL_GATE_S_OTA
    chip_para_RI.asm:61     *ABS*:00000938 RIL_VC1_OTA
    chip_para_RI.asm:62     *ABS*:000008f8 RIL_VC2_OTA
    chip_para_RI.asm:63     *ABS*:0000ea0e RIL_VD1_OTA
    chip_para_RI.asm:64     *ABS*:00000001 RIL_INJ_T_OTA
    chip_para_RI.asm:65     *ABS*:0000012c RIL_NUM_OTA
    chip_para_RI.asm:67     *ABS*:00000040 RIL_GATE_S_OTAREF
    chip_para_RI.asm:68     *ABS*:00000938 RIL_VC1_OTAREF
    chip_para_RI.asm:69     *ABS*:000008f9 RIL_VC2_OTAREF
    chip_para_RI.asm:70     *ABS*:0000ea0e RIL_VD1_OTAREF
    chip_para_RI.asm:71     *ABS*:00000001 RIL_INJ_T_OTAREF
    chip_para_RI.asm:72     *ABS*:0000012c RIL_NUM_OTAREF
    chip_para_RI.asm:74     *ABS*:00002900 RIL_GATE_S_MITE
    chip_para_RI.asm:75     *ABS*:00000938 RIL_VC1_MITE
    chip_para_RI.asm:76     *ABS*:000008f7 RIL_VC2_MITE
    chip_para_RI.asm:77     *ABS*:0000ea0e RIL_VD1_MITE
    chip_para_RI.asm:78     *ABS*:00000001 RIL_INJ_T_MITE
    chip_para_RI.asm:79     *ABS*:0000012c RIL_NUM_MITE
    chip_para_RI.asm:81     *ABS*:00000100 RIL_GATE_S_DIRSWC
    chip_para_RI.asm:82     *ABS*:00000938 RIL_VC1_DIRSWC
    chip_para_RI.asm:83     *ABS*:000008ff RIL_VC2_DIRSWC
    chip_para_RI.asm:84     *ABS*:0000ea0e RIL_VD1_DIRSWC
    chip_para_RI.asm:85     *ABS*:00000001 RIL_INJ_T_DIRSWC
    chip_para_RI.asm:86     *ABS*:0000012c RIL_NUM_DIRSWC
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:7      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:12     .text:0000000e init_wait
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:190    .text:000001fe block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:33     .text:0000005c coarse_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:125    .text:00000158 measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:62     .text:000000a6 coarse_inject
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:45     .text:00000080 skip_measurement
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:49     .text:00000086 coarse_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:251    .text:000002ae end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:69     .text:000000c2 coarse_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:107    .text:00000124 coarse_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:229    .text:0000028a wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:94     .text:00000110 injection_pulse
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:240    .text:0000029c wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:111    .text:0000012a coarse_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:132    .text:00000174 measure_verify_s
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43 			page 18


/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:181    .text:000001ea measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:165    .text:000001de status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:185    .text:000001f0 measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:197    .text:0000021a block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:224    .text:0000027c block_measure_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:232    .text:00000290 wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_SWC.s43:243    .text:000002a2 wait_10us_loop

NO UNDEFINED SYMBOLS

recover_inject_lowsubVt_SWC.o:     file format elf32-msp430
recover_inject_lowsubVt_SWC.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000002b6  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  000002ea  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  000002ea  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  000002ea  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
00000000 l       *ABS*	00000000 RI_MEAS_ON
00000000 l       *ABS*	00000000 RIL_MEAS_ON
00000000 l       *ABS*	00000000 CP_MEAS_ON
00000000 l       *ABS*	00000000 CPL_MEAS_ON
00000000 l       *ABS*	00000000 FP_MEAS_ON
00000000 l       *ABS*	00000000 FPL_MEAS_ON
00000040 l       *ABS*	00000000 RI_GATE_S_SWC
00000c2c l       *ABS*	00000000 RI_VC1_SWC
00000be0 l       *ABS*	00000000 RI_VC2_SWC
00000afd l       *ABS*	00000000 RI_VC3_SWC
00000938 l       *ABS*	00000000 RI_VC4_SWC
0000ea0e l       *ABS*	00000000 RI_VD1_SWC
0000fe0e l       *ABS*	00000000 RI_VD2_SWC
00000001 l       *ABS*	00000000 RI_INJ_T_SWC
0000012c l       *ABS*	00000000 RI_NUM_SWC
00003300 l       *ABS*	00000000 RI_GATE_S_OTA
00000def l       *ABS*	00000000 RI_VC1_OTA
00000d77 l       *ABS*	00000000 RI_VC2_OTA
00000c0c l       *ABS*	00000000 RI_VC3_OTA
00000938 l       *ABS*	00000000 RI_VC4_OTA
0000ea0e l       *ABS*	00000000 RI_VD1_OTA
0000fe0e l       *ABS*	00000000 RI_VD2_OTA
00000001 l       *ABS*	00000000 RI_INJ_T_OTA
0000012c l       *ABS*	00000000 RI_NUM_OTA
00000040 l       *ABS*	00000000 RI_GATE_S_OTAREF
00000c81 l       *ABS*	00000000 RI_VC1_OTAREF
00000c2d l       *ABS*	00000000 RI_VC2_OTAREF
00000b30 l       *ABS*	00000000 RI_VC3_OTAREF
00000938 l       *ABS*	00000000 RI_VC4_OTAREF
0000ea0e l       *ABS*	00000000 RI_VD1_OTAREF
0000fe0e l       *ABS*	00000000 RI_VD2_OTAREF
00000001 l       *ABS*	00000000 RI_INJ_T_OTAREF
0000012c l       *ABS*	00000000 RI_NUM_OTAREF
00002900 l       *ABS*	00000000 RI_GATE_S_MITE
00000e98 l       *ABS*	00000000 RI_VC1_MITE
00000e0f l       *ABS*	00000000 RI_VC2_MITE
00000c72 l       *ABS*	00000000 RI_VC3_MITE
00000938 l       *ABS*	00000000 RI_VC4_MITE
0000ea0e l       *ABS*	00000000 RI_VD1_MITE
0000fe0e l       *ABS*	00000000 RI_VD2_MITE
00000001 l       *ABS*	00000000 RI_INJ_T_MITE
0000012c l       *ABS*	00000000 RI_NUM_MITE
00000100 l       *ABS*	00000000 RI_GATE_S_DIRSWC
00000c3c l       *ABS*	00000000 RI_VC1_DIRSWC
00000bef l       *ABS*	00000000 RI_VC2_DIRSWC
00000b07 l       *ABS*	00000000 RI_VC3_DIRSWC
00000938 l       *ABS*	00000000 RI_VC4_DIRSWC
0000ea0e l       *ABS*	00000000 RI_VD1_DIRSWC
0000fe0e l       *ABS*	00000000 RI_VD2_DIRSWC
00000001 l       *ABS*	00000000 RI_INJ_T_DIRSWC
0000012c l       *ABS*	00000000 RI_NUM_DIRSWC
00000040 l       *ABS*	00000000 RIL_GATE_S_SWC
00000938 l       *ABS*	00000000 RIL_VC1_SWC
000008fa l       *ABS*	00000000 RIL_VC2_SWC
0000ea0e l       *ABS*	00000000 RIL_VD1_SWC
00000001 l       *ABS*	00000000 RIL_INJ_T_SWC
0000012c l       *ABS*	00000000 RIL_NUM_SWC
00003300 l       *ABS*	00000000 RIL_GATE_S_OTA
00000938 l       *ABS*	00000000 RIL_VC1_OTA
000008f8 l       *ABS*	00000000 RIL_VC2_OTA
0000ea0e l       *ABS*	00000000 RIL_VD1_OTA
00000001 l       *ABS*	00000000 RIL_INJ_T_OTA
0000012c l       *ABS*	00000000 RIL_NUM_OTA
00000040 l       *ABS*	00000000 RIL_GATE_S_OTAREF
00000938 l       *ABS*	00000000 RIL_VC1_OTAREF
000008f9 l       *ABS*	00000000 RIL_VC2_OTAREF
0000ea0e l       *ABS*	00000000 RIL_VD1_OTAREF
00000001 l       *ABS*	00000000 RIL_INJ_T_OTAREF
0000012c l       *ABS*	00000000 RIL_NUM_OTAREF
00002900 l       *ABS*	00000000 RIL_GATE_S_MITE
00000938 l       *ABS*	00000000 RIL_VC1_MITE
000008f7 l       *ABS*	00000000 RIL_VC2_MITE
0000ea0e l       *ABS*	00000000 RIL_VD1_MITE
00000001 l       *ABS*	00000000 RIL_INJ_T_MITE
0000012c l       *ABS*	00000000 RIL_NUM_MITE
00000100 l       *ABS*	00000000 RIL_GATE_S_DIRSWC
00000938 l       *ABS*	00000000 RIL_VC1_DIRSWC
000008ff l       *ABS*	00000000 RIL_VC2_DIRSWC
0000ea0e l       *ABS*	00000000 RIL_VD1_DIRSWC
00000001 l       *ABS*	00000000 RIL_INJ_T_DIRSWC
0000012c l       *ABS*	00000000 RIL_NUM_DIRSWC
0000000e l       .text	00000000 init_wait
000001fe l       .text	00000000 block_measure
0000005c l       .text	00000000 coarse_loop_s
00000158 l       .text	00000000 measure_verify
000000a6 l       .text	00000000 coarse_inject
00000080 l       .text	00000000 skip_measurement
00000086 l       .text	00000000 coarse_loop_e
000002ae l       .text	00000000 end_of_test
000000c2 l       .text	00000000 coarse_inject_set_s
00000124 l       .text	00000000 coarse_inject_skip
0000028a l       .text	00000000 wait_ms
00000110 l       .text	00000000 injection_pulse
0000029c l       .text	00000000 wait_10us
0000012a l       .text	00000000 coarse_inject_e
00000174 l       .text	00000000 measure_verify_s
000001ea l       .text	00000000 measure_verify_skip
000001de l       .text	00000000 status_1
000001f0 l       .text	00000000 measure_verify_e
0000021a l       .text	00000000 block_measure_s
0000027c l       .text	00000000 block_measure_e
00000290 l       .text	00000000 wait_ms_loop
000002a2 l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 3d404000 b0120000 3f402c01 3d404000  =@@.....?@,.=@@.
 0060 b0120000 b0120000 08430893 0924b740  .........C...$.@
 0070 33330000 2753874a 00002753 b0120000  33..'S.J..'S....
 0080 1f830124 eb3fb740 33330000 2753874a  ...$.?.@33..'S.J
 0090 00002753 3d404000 b0120000 b7430000  ..'S=@@......C..
 00a0 82435800 043d3b40 00702c4b b2400080  .CX..=;@.p,K.@..
 00b0 0c0bb240 04be6401 b2402400 6001b243  ...@..d..@$.`..C
 00c0 0e0b2b53 a24b080b 2b53a24b 0a0b2b53  ..+S.K..+S.K..+S
 00d0 2b532b53 284b0893 2524b240 4000020b  +S+S(K..%$.@@...
 00e0 b2406000 100bb240 6000120b b2406600  .@`....@`....@f.
 00f0 000bb240 14006001 2543b012 0000b240  ...@..`.%C.....@
 0100 0eea000b 3890cccc 0324b240 2600000b  ....8....$.@&...
 0110 1543b012 00001a53 b2406600 000b1543  .C.....S.@f....C
 0120 b0120000 1c830124 cc3fa242 60012543  .......$.?.B`.%C
 0130 b0120000 b2402400 60011543 b0120000  .....@$.`..C....
 0140 a2430e0b b2404000 100bb240 4000120b  .C...@@....@@...
 0150 1543b012 00003041 3b400070 2c4bb240  .C....0A;@.p,K.@
 0160 00800c0b b24004be 6401b240 24006001  .....@..d..@$.`.
 0170 a2430e0b 2b53a24b 080b2b53 a24b0a0b  .C..+S.K..+S.K..
 0180 2b532b53 2b53294b 09932f24 824d020b  +S+S+S)K../$.M..
 0190 b2404000 100bb240 4000120b b2406600  .@@....@@....@f.
 01a0 000b2543 b0120000 b240a400 000b3540  ..%C.....@....5@
 01b0 0a00b012 0000b240 00b00c0b 35400500  .......@....5@..
 01c0 b0120000 8243040b 1942040b b2400080  .....C...B...@..
 01d0 0c0b3990 38090330 8b430000 063c3990  ..9.8..0.C...<9.
 01e0 fa080330 bb40cccc 00001c83 0124c23f  ...0.@.......$.?
 01f0 b2406600 000bb240 24006001 30413b40  .@f....@$.`.0A;@
 0200 00702c4b b2400080 0c0bb240 04be6401  .p,K.@.....@..d.
 0210 b2402400 6001a243 0e0b2b53 a24b080b  .@$.`..C..+S.K..
 0220 2b53a24b 0a0b2b53 2b532b53 824d020b  +S.K..+S+S+S.M..
 0230 b2404000 100bb240 4000120b b2406600  .@@....@@....@f.
 0240 000b2543 b0120000 b240a400 000b3540  ..%C.....@....5@
 0250 0a00b012 0000b240 00b00c0b 35400500  .......@....5@..
 0260 b0120000 8243040b 9742040b 00002753  .....C...B....'S
 0270 b2400080 0c0b1c83 0124cf3f b2406600  .@.......$.?.@f.
 0280 000bb240 24006001 30413440 fc0c0644  ...@$.`.0A4@...D
 0290 1683fe23 06441583 fb233041 34402200  ...#.D...#0A4@".
 02a0 06441683 fe230644 1583fb23 30418243  .D...#.D...#0A.C
 02b0 58000343 3043                        X..C0C          
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	3d 40 40 00 	mov	#64,	r13	;#0x0040
  54:	b0 12 00 00 	call	#0x0000	
			56: R_MSP430_16_BYTE	.text+0x1fe
  58:	3f 40 2c 01 	mov	#300,	r15	;#0x012c

0000005c <coarse_loop_s>:
  5c:	3d 40 40 00 	mov	#64,	r13	;#0x0040
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x158
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0xa6
  68:	08 43       	clr	r8		
  6a:	08 93       	tst	r8		
  6c:	09 24       	jz	$+20     	;abs 0x80
  6e:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  72:	00 00 
  74:	27 53       	incd	r7		
  76:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  7a:	27 53       	incd	r7		
  7c:	b0 12 00 00 	call	#0x0000	
			7e: R_MSP430_16_BYTE	.text+0x1fe

00000080 <skip_measurement>:
  80:	1f 83       	dec	r15		
  82:	01 24       	jz	$+4      	;abs 0x86
  84:	eb 3f       	jmp	$-40     	;abs 0x5c

00000086 <coarse_loop_e>:
  86:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  8a:	00 00 
  8c:	27 53       	incd	r7		
  8e:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  92:	27 53       	incd	r7		
  94:	3d 40 40 00 	mov	#64,	r13	;#0x0040
  98:	b0 12 00 00 	call	#0x0000	
			9a: R_MSP430_16_BYTE	.text+0x1fe
  9c:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  a0:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  a4:	04 3d       	jmp	$+522    	;abs 0x2ae

000000a6 <coarse_inject>:
  a6:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  aa:	2c 4b       	mov	@r11,	r12	
  ac:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  b0:	0c 0b 
  b2:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  b6:	64 01 
  b8:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  bc:	60 01 
  be:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000c2 <coarse_inject_set_s>:
  c2:	2b 53       	incd	r11		
  c4:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  c8:	2b 53       	incd	r11		
  ca:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  ce:	2b 53       	incd	r11		
  d0:	2b 53       	incd	r11		
  d2:	2b 53       	incd	r11		
  d4:	28 4b       	mov	@r11,	r8	
  d6:	08 93       	tst	r8		
  d8:	25 24       	jz	$+76     	;abs 0x124
  da:	b2 40 40 00 	mov	#64,	&0x0b02	;#0x0040
  de:	02 0b 
  e0:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  e4:	10 0b 
  e6:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  ea:	12 0b 
  ec:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  f0:	00 0b 
  f2:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  f6:	60 01 
  f8:	25 43       	mov	#2,	r5	;r3 As==10
  fa:	b0 12 00 00 	call	#0x0000	
			fc: R_MSP430_16_BYTE	.text+0x28a
  fe:	b2 40 0e ea 	mov	#-5618,	&0x0b00	;#0xea0e
 102:	00 0b 
 104:	38 90 cc cc 	cmp	#-13108,r8	;#0xcccc
 108:	03 24       	jz	$+8      	;abs 0x110
 10a:	b2 40 26 00 	mov	#38,	&0x0b00	;#0x0026
 10e:	00 0b 

00000110 <injection_pulse>:
 110:	15 43       	mov	#1,	r5	;r3 As==01
 112:	b0 12 00 00 	call	#0x0000	
			114: R_MSP430_16_BYTE	.text+0x29c
 116:	1a 53       	inc	r10		
 118:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 11c:	00 0b 
 11e:	15 43       	mov	#1,	r5	;r3 As==01
 120:	b0 12 00 00 	call	#0x0000	
			122: R_MSP430_16_BYTE	.text+0x28a

00000124 <coarse_inject_skip>:
 124:	1c 83       	dec	r12		
 126:	01 24       	jz	$+4      	;abs 0x12a
 128:	cc 3f       	jmp	$-102    	;abs 0xc2

0000012a <coarse_inject_e>:
 12a:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 12e:	25 43       	mov	#2,	r5	;r3 As==10
 130:	b0 12 00 00 	call	#0x0000	
			132: R_MSP430_16_BYTE	.text+0x28a
 134:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 138:	60 01 
 13a:	15 43       	mov	#1,	r5	;r3 As==01
 13c:	b0 12 00 00 	call	#0x0000	
			13e: R_MSP430_16_BYTE	.text+0x28a
 140:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 144:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 148:	10 0b 
 14a:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 14e:	12 0b 
 150:	15 43       	mov	#1,	r5	;r3 As==01
 152:	b0 12 00 00 	call	#0x0000	
			154: R_MSP430_16_BYTE	.text+0x28a
 156:	30 41       	ret			

00000158 <measure_verify>:
 158:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 15c:	2c 4b       	mov	@r11,	r12	
 15e:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 162:	0c 0b 
 164:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 168:	64 01 
 16a:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 16e:	60 01 
 170:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

00000174 <measure_verify_s>:
 174:	2b 53       	incd	r11		
 176:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 17a:	2b 53       	incd	r11		
 17c:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 180:	2b 53       	incd	r11		
 182:	2b 53       	incd	r11		
 184:	2b 53       	incd	r11		
 186:	29 4b       	mov	@r11,	r9	
 188:	09 93       	tst	r9		
 18a:	2f 24       	jz	$+96     	;abs 0x1ea
 18c:	82 4d 02 0b 	mov	r13,	&0x0b02	
 190:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 194:	10 0b 
 196:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 19a:	12 0b 
 19c:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1a0:	00 0b 
 1a2:	25 43       	mov	#2,	r5	;r3 As==10
 1a4:	b0 12 00 00 	call	#0x0000	
			1a6: R_MSP430_16_BYTE	.text+0x28a
 1a8:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 1ac:	00 0b 
 1ae:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1b2:	b0 12 00 00 	call	#0x0000	
			1b4: R_MSP430_16_BYTE	.text+0x28a
 1b6:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 1ba:	0c 0b 
 1bc:	35 40 05 00 	mov	#5,	r5	;#0x0005
 1c0:	b0 12 00 00 	call	#0x0000	
			1c2: R_MSP430_16_BYTE	.text+0x28a
 1c4:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1c8:	19 42 04 0b 	mov	&0x0b04,r9	
 1cc:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1d0:	0c 0b 
 1d2:	39 90 38 09 	cmp	#2360,	r9	;#0x0938
 1d6:	03 30       	jn	$+8      	;abs 0x1de
 1d8:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1dc:	06 3c       	jmp	$+14     	;abs 0x1ea

000001de <status_1>:
 1de:	39 90 fa 08 	cmp	#2298,	r9	;#0x08fa
 1e2:	03 30       	jn	$+8      	;abs 0x1ea
 1e4:	bb 40 cc cc 	mov	#-13108,0(r11)	;#0xcccc, 0x0000(r11)
 1e8:	00 00 

000001ea <measure_verify_skip>:
 1ea:	1c 83       	dec	r12		
 1ec:	01 24       	jz	$+4      	;abs 0x1f0
 1ee:	c2 3f       	jmp	$-122    	;abs 0x174

000001f0 <measure_verify_e>:
 1f0:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1f4:	00 0b 
 1f6:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 1fa:	60 01 
 1fc:	30 41       	ret			

000001fe <block_measure>:
 1fe:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 202:	2c 4b       	mov	@r11,	r12	
 204:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 208:	0c 0b 
 20a:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 20e:	64 01 
 210:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 214:	60 01 
 216:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000021a <block_measure_s>:
 21a:	2b 53       	incd	r11		
 21c:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 220:	2b 53       	incd	r11		
 222:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 226:	2b 53       	incd	r11		
 228:	2b 53       	incd	r11		
 22a:	2b 53       	incd	r11		
 22c:	82 4d 02 0b 	mov	r13,	&0x0b02	
 230:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 234:	10 0b 
 236:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 23a:	12 0b 
 23c:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 240:	00 0b 
 242:	25 43       	mov	#2,	r5	;r3 As==10
 244:	b0 12 00 00 	call	#0x0000	
			246: R_MSP430_16_BYTE	.text+0x28a
 248:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 24c:	00 0b 
 24e:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 252:	b0 12 00 00 	call	#0x0000	
			254: R_MSP430_16_BYTE	.text+0x28a
 256:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 25a:	0c 0b 
 25c:	35 40 05 00 	mov	#5,	r5	;#0x0005
 260:	b0 12 00 00 	call	#0x0000	
			262: R_MSP430_16_BYTE	.text+0x28a
 264:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 268:	97 42 04 0b 	mov	&0x0b04,0(r7)	;0x0000(r7)
 26c:	00 00 
 26e:	27 53       	incd	r7		
 270:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 274:	0c 0b 
 276:	1c 83       	dec	r12		
 278:	01 24       	jz	$+4      	;abs 0x27c
 27a:	cf 3f       	jmp	$-96     	;abs 0x21a

0000027c <block_measure_e>:
 27c:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 280:	00 0b 
 282:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 286:	60 01 
 288:	30 41       	ret			

0000028a <wait_ms>:
 28a:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 28e:	06 44       	mov	r4,	r6	

00000290 <wait_ms_loop>:
 290:	16 83       	dec	r6		
 292:	fe 23       	jnz	$-2      	;abs 0x290
 294:	06 44       	mov	r4,	r6	
 296:	15 83       	dec	r5		
 298:	fb 23       	jnz	$-8      	;abs 0x290
 29a:	30 41       	ret			

0000029c <wait_10us>:
 29c:	34 40 22 00 	mov	#34,	r4	;#0x0022
 2a0:	06 44       	mov	r4,	r6	

000002a2 <wait_10us_loop>:
 2a2:	16 83       	dec	r6		
 2a4:	fe 23       	jnz	$-2      	;abs 0x2a2
 2a6:	06 44       	mov	r4,	r6	
 2a8:	15 83       	dec	r5		
 2aa:	fb 23       	jnz	$-8      	;abs 0x2a2
 2ac:	30 41       	ret			

000002ae <end_of_test>:
 2ae:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 2b2:	03 43       	nop			
 2b4:	30 43       	br	#-1		;r3 As==11
