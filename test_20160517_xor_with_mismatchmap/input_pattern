sine_wave_x1 = [linspace(1.5,1.8,4) linspace(1.7,1.3,5) linspace(1.2,1.4,3) ];
sine_wave_x1r = [linspace(1.5,1.2,4) linspace(1.3,1.7,5) linspace(1.8,1.6,3) ];
sine_wave_x4 = [ sine_wave_x1 sine_wave_x1 sine_wave_x1 sine_wave_x1 ];
sine_wave_x4r = [ sine_wave_x1r sine_wave_x1r sine_wave_x1r sine_wave_x1r ];
sine_wave_x16 = [ sine_wave_x4 sine_wave_x4 sine_wave_x4 sine_wave_x4 ];
sine_wave_x16r = [ sine_wave_x4r sine_wave_x4r sine_wave_x4r sine_wave_x4r ];
default_x1 = [linspace(1.5,1.5,12)];
zero_x1 = [0.2 0.2];
zero_x2 = [zero_x1 zero_x1 ];
zero_x3 = [zero_x1 zero_x1 zero_x1 ];
zero_x4 = [zero_x1 zero_x1 zero_x1 zero_x1 ];
zero_x5 = [zero_x1 zero_x1 zero_x1 zero_x1 zero_x1 ];
zero_x6 = [zero_x1 zero_x1 zero_x1 zero_x1 zero_x1 zero_x1 ];
zero_x7 = [zero_x4 zero_x1 zero_x1 zero_x1 ];
zero_x8 = [zero_x4 zero_x4];
zero_x9 = [zero_x4 zero_x4 zero_x1];
zero_x10 = [zero_x4 zero_x4 zero_x1 zero_x1];
zero_x11 = [zero_x4 zero_x4 zero_x1 zero_x1 zero_x1 ];
zero_x12 = [zero_x4 zero_x4 zero_x4 ];
zero_x13 = [zero_x4 zero_x4 zero_x4 zero_x1 ];
zero_x14 = [zero_x4 zero_x4 zero_x4 zero_x1 zero_x1 ];
zero_x15 = [zero_x4 zero_x4 zero_x4 zero_x1 zero_x1 zero_x1 ];
zero_x16 = [zero_x4 zero_x4 zero_x4 zero_x4 ];
zero_x18 = [zero_x4 zero_x4 zero_x4 zero_x4 zero_x2];
clk__x1 = [0.2 2.5];
clk__x2 = [clk__x1 clk__x1]; 
clk__x3 = [clk__x1 clk__x1 clk__x1]; 
clk__x4 = [clk__x1 clk__x1 clk__x1 clk__x1]; 
clk__x5 = [clk__x1 clk__x1 clk__x1 clk__x1 clk__x1]; 
clk__x6 = [clk__x1 clk__x1 clk__x1 clk__x1 clk__x1 clk__x1]; 
clk__x7 = [clk__x1 clk__x1 clk__x1 clk__x1 clk__x1 clk__x1 clk__x1]; 
clk__x8 = [clk__x4 clk__x4]; 
clk__x9 = [clk__x4 clk__x4 clk__x1]; 
clk__x10 = [clk__x4 clk__x4 clk__x1 clk__x1];
clk__x11 = [clk__x4 clk__x4 clk__x1 clk__x1 clk__x1];
clk__x12 = [clk__x4 clk__x4 clk__x4 ]; 
clk__x13 = [clk__x4 clk__x4 clk__x4 clk__x1]; 
clk__x14 = [clk__x4 clk__x4 clk__x4 clk__x1 clk__x1]; 
clk__x15 = [clk__x4 clk__x4 clk__x4 clk__x1 clk__x1 clk__x1]; 
clk__x16 = [clk__x4 clk__x4 clk__x4 clk__x4]; 
data_x1 = [2.5 2.5];
data_x2 = [data_x1 data_x1 ];
data_x3 = [data_x1 data_x1 data_x1 ];
data_x4 = [data_x1 data_x1 data_x1 data_x1 ];
data_x7 = [data_x1 data_x1 data_x1 data_x1 data_x1 data_x1 data_x1];
data_x8 = [data_x4 data_x4];
data_x12 = [data_x4 data_x4 data_x4];
data_x15 = [data_x4 data_x4 data_x4 data_x1 data_x1 data_x1 ];
data_x16 = [data_x4 data_x4 data_x4 data_x4 ];

clk_x1_data_x7=[clk__x1 data_x7];
clk_x1_data_x7_x4=[clk_x1_data_x7 clk_x1_data_x7 clk_x1_data_x7 clk_x1_data_x7];
clk_x1_data_x7_x15=[clk_x1_data_x7_x4 clk_x1_data_x7_x4 clk_x1_data_x7_x4 clk_x1_data_x7 clk_x1_data_x7 clk_x1_data_x7];
zero_x8_x4=[zero_x8 zero_x8 zero_x8 zero_x8];
zero_x8_x15=[zero_x8_x4 zero_x8_x4 zero_x8_x4 zero_x8 zero_x8 zero_x8];

one__25V=[2.5 2.5 2.5 2.5 2.5 2.5 2.5 2.5];
zero_21V=[2.1 2.1 2.1 2.1 2.1 2.1 2.1 2.1];

// To chech the whole function.
clk_sr       = [clk__x16];
data_sr      = [data_x1 zero_x7 zero_x8];
input_vmmwta=[
one__25V one__25V one__25V one__25V; 
zero_21V zero_21V one__25V one__25V; 
one__25V zero_21V zero_21V one__25V; 
zero_21V zero_21V zero_21V zero_21V;];

//// Check only XOR output
//clk_sr       = [clk__x3 zero_x16];
//data_sr      = [data_x1 zero_x10 zero_x8];
//input_vmmwta=[
//zero_x3 one__25V one__25V one__25V one__25V; 
//zero_x3 zero_21V zero_21V one__25V one__25V; 
//zero_x3 one__25V zero_21V zero_21V one__25V; 
//zero_x3 zero_21V zero_21V zero_21V zero_21V;];


