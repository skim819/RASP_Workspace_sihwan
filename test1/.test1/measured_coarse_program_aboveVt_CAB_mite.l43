GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	.include "chip_para.asm"
   1               	/*---------------------------------------------------------------------------*/
   2               	/*                       chip parameters for chip 10                         */ 
   3               	/*---------------------------------------------------------------------------*/
   4               	/*----------------*/
   5               	/* Switch program */
   6               	/*----------------*/
   7               	.set    TUN_TIME_SP,     3          /* tunneling time for switch programming (ms) */
   8               	.set    R_TUN_TIME_SP,     2          /* reverse tunneling time for switch programming (ms) */
   9               	.set    INJ_TIME_SP_1,     500          /* injection time for switch programming (ms) (1st pulse)*/
  10               	.set    INJ_TIME_SP_RUN,     1          /* injection time for switch programming in run-mode(10us)*
  11               	
  12               	/*----------------*/
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 6


  13               	/* Target program */
  14               	/*----------------*/
  15               	.set    ADC_1nA,    4496          /* 1nA ADC value */
  16               	
  17               	/* Tunnel and Reverse Tunnel */
  18               	.set    TUN_TIME_TP_CAB,     40          /* tunneling time for target programming (ms) - CAB */
  19               	.set    R_TUN_TIME_TP_CAB,   40          /* Reverse tunneling time for target programming (ms) - CA
  20               	
  21               	/* Recover Inject (RI) */
  22               	.set    RI_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  23               	.set    RI_VC1_SWC,     5931          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V -
  24               	.set    RI_VC2_SWC,     5788          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V *
  25               	.set    RI_VC3_SWC,     5357           /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V 
  26               	.set    RI_VC4_SWC,     4496           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm=0V
  27               	.set    RI_VD1_SWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  28               	.set    RI_VD2_SWC,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  29               	.set    RI_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA recover injection = 2.5V @ IVDD
  30               	.set    RI_VC1_OTA,     6732           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0V 
  31               	.set    RI_VC2_OTA,     6508          /* Verify Current 1 for OTA recover injection =  nA @ Vgm=0V 
  32               	.set    RI_VC3_OTA,     5837           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0V 
  33               	.set    RI_VC4_OTA,     4496           /* Verify Current 1 for OTA recover injection = 5nA @ Vgm=0V
  34               	.set    RI_VD1_OTA,     0xea0e          /* Drain Voltage for recover injection final stage */
  35               	.set    RI_VD2_OTA,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  36               	.set    RI_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF recover injection = gnd *
  37               	.set    RI_VC1_OTAREF,  6135              /* Verify Current 1 for OTAREF recover injection = nA @ V
  38               	.set    RI_VC2_OTAREF,  5972             /* Verify Current 1 for OTAREF recover injection = nA @ Vg
  39               	.set    RI_VC3_OTAREF,  5480              /* Verify Current 1 for OTAREF recover injection = nA @ V
  40               	.set    RI_VC4_OTAREF,  4496              /* Verify Current 1 for OTAREF recover injection = 1nA @ 
  41               	.set    RI_VD1_OTAREF,  0xd00e          /* Drain Voltage for recover injection final stage */
  42               	.set    RI_VD2_OTAREF,  0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  43               	.set    RI_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE recover injection = 2.5V @ IV
  44               	.set    RI_VC1_MITE,    7035           /* Verify Current 1 for MITE recover injection = nA @ Vgm=0V
  45               	.set    RI_VC2_MITE,    6781           /* Verify Current 1 for MITE recover injection =  nA @ Vgm=0
  46               	.set    RI_VC3_MITE,    6020            /* Verify Current 1 for MITE recover injection = nA @ Vgm=0
  47               	.set    RI_VC4_MITE,    4496            /* Verify Current 1 for MITE recover injection = 1nA @ Vgm=
  48               	.set    RI_VD1_MITE,    0xea0e          /* Drain Voltage for recover injection final stage */
  49               	.set    RI_VD2_MITE,    0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  50               	;.set    RI_GATE_S_DIRSWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  51               	.set    RI_GATE_S_DIRSWC,     0x0000          /* Gate_S voltage for SWC recover injection = 2.5V @ 
  52               	.set    RI_VC1_DIRSWC,     6031          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0
  53               	.set    RI_VC2_DIRSWC,     5877          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0
  54               	.set    RI_VC3_DIRSWC,     4517           /* Verify Current 1 for SWC recover injection = nA @ Vgm=
  55               	;.set    RI_VC3_DIRSWC,     5117           /* Verify Current 1 for SWC recover injection = nA @ Vgm
  56               	.set    RI_VC4_DIRSWC,     4496           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm
  57               	.set    RI_VD1_DIRSWC,     0xc80e          /* Drain Voltage for recover injection final stage */
  58               	;.set    RI_VD1_DIRSWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  59               	.set    RI_VD2_DIRSWC,     0xd00e          /* Drain Voltage for recover injection pre-final stage *
  60               	;.set    RI_VD2_DIRSWC,     0xfe0e          /* Drain Voltage for recover injection pre-final stage 
  61               	
  62               	.set    RIL_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC low sub Vth recover injection
  63               	.set    RIL_VC1_SWC,     4496          /* Verify Current 1 for SWC low sub Vth recover injection = 
  64               	.set    RIL_VC2_SWC,     4163          /* Verify Current 1 for SWC low sub Vth recover injection = 
  65               	.set    RIL_VD1_SWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  66               	.set    RIL_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA low sub Vth recover injection 
  67               	.set    RIL_VC1_OTA,     4496           /* Verify Current 1 for OTA low sub Vth recover injection =
  68               	.set    RIL_VC2_OTA,     4171          /* Verify Current 1 for OTA low sub Vth recover injection = 
  69               	.set    RIL_VD1_OTA,     0xea0e          /* Drain Voltage for recover injection final stage */
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 7


  70               	.set    RIL_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF low sub Vth recover inje
  71               	.set    RIL_VC1_OTAREF,  4496              /* Verify Current 1 for OTAREF low sub Vth recover injec
  72               	.set    RIL_VC2_OTAREF,  4174             /* Verify Current 1 for OTAREF low sub Vth recover inject
  73               	.set    RIL_VD1_OTAREF,  0xd00e          /* Drain Voltage for recover injection final stage */
  74               	.set    RIL_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE low sub Vth recover injectio
  75               	.set    RIL_VC1_MITE,    4496           /* Verify Current 1 for MITE low sub Vth recover injection 
  76               	.set    RIL_VC2_MITE,    4185           /* Verify Current 1 for MITE rlow sub Vth ecover injection 
  77               	.set    RIL_VD1_MITE,    0xea0e          /* Drain Voltage for recover injection final stage */
  78               	.set    RIL_GATE_S_DIRSWC,     0x0040          /* Gate_S voltage for SWC low sub Vth recover inject
  79               	.set    RIL_VC1_DIRSWC,     4496          /* Verify Current 1 for SWC low sub Vth recover injection
  80               	.set    RIL_VC2_DIRSWC,     4163          /* Verify Current 1 for SWC low sub Vth recover injection
  81               	.set    RIL_VD1_DIRSWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  82               	
  83               	/* First_Coarse_Program (FCP) */
  84               	.set    FCP_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC first coarese program = V @ IV
  85               	.set    FCP_INJ_T_SWC,    1          /* Injection time for SWC first coarese program = *10us */
  86               	.set    FCP_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA first coarese program = V @ IV
  87               	.set    FCP_INJ_T_OTA,    3          /* Injection time for OTA first coarese program = *10us */
  88               	.set    FCP_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF first coarese program = 
  89               	.set    FCP_INJ_T_OTAREF,    6          /* Injection time for OTAREF first coarese program = *10us 
  90               	.set    FCP_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE first coarese program = V @ 
  91               	.set    FCP_INJ_T_MITE,    3          /* Injection time for MITE first coarese program = *10us */
  92               	.set    FCP_GATE_S_DIRSWC,    0x6200          /* Gate_S voltage for SWC first coarese program = V @
  93               	.set    FCP_INJ_T_DIRSWC,    1          /* Injection time for SWC first coarese program = *10us */
  94               	
  95               	.set    FCPL_GATE_S_SWC,    0x4400          /* Gate_S voltage for SWC low sub Vth first coarese pro
  96               	.set    FCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth first coarese program =
  97               	.set    FCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth first coarese pro
  98               	.set    FCPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth first coarese program =
  99               	.set    FCPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth measured co
 100               	.set    FCPL_INJ_T_OTAREF,    6          /* Injection time for OTAREF low sub Vth measured coarse p
 101               	.set    FCPL_GATE_S_MITE,    0x3200          /* Gate_S voltage for MITE low sub Vth first coarese p
 102               	.set    FCPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth first coarese program
 103               	.set    FCPL_GATE_S_DIRSWC,    0x4400          /* Gate_S voltage for SWC low sub Vth first coarese 
 104               	.set    FCPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth first coarese progra
 105               	
 106               	/* Measured_Coarse_Program (MCP) */
 107               	.set    MCP_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC sub Vth measured coarse progra
 108               	.set    MCP_INJ_T_SWC,    1          /* Injection time for SWC sub Vth measured coarse program = *1
 109               	.set    MCP_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA sub Vth measured coarse progra
 110               	.set    MCP_INJ_T_OTA,    3          /* Injection time for OTA sub Vth measured coarse program = *1
 111               	.set    MCP_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF sub Vth measured coarse 
 112               	.set    MCP_INJ_T_OTAREF,    6          /* Injection time for OTAREF sub Vth measured coarse progra
 113               	.set    MCP_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE sub Vth measured coarse prog
 114               	.set    MCP_INJ_T_MITE,    3          /* Injection time for MITE sub Vth measured coarse program = 
 115               	.set    MCP_GATE_S_DIRSWC,    0x6200          /* Gate_S voltage for SWC sub Vth measured coarse pro
 116               	.set    MCP_INJ_T_DIRSWC,    1          /* Injection time for SWC sub Vth measured coarse program =
 117               	
 118               	.set    MCPL_GATE_S_SWC,    0x4400          /* Gate_S voltage for SWC low sub Vth measured coarse p
 119               	.set    MCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth measured coarse program
 120               	.set    MCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth measured coarse p
 121               	.set    MCPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth measured coarse program
 122               	.set    MCPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth measured co
 123               	.set    MCPL_INJ_T_OTAREF,    6          /* Injection time for OTAREF low sub Vth measured coarse p
 124               	.set    MCPL_GATE_S_MITE,    0x3200          /* Gate_S voltage for MITE low sub Vth measured coarse
 125               	.set    MCPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth measured coarse progr
 126               	.set    MCPL_GATE_S_DIRSWC,    0x4400          /* Gate_S voltage for SWC low sub Vth measured coars
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 8


 127               	.set    MCPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth measured coarse prog
 128               	
 129               	/* Fine_Program (FP) */
 130               	.set    FPS_GATE_S_SWC,    0x4600          /* Gate_S voltage for SWC sub Vth fine program = V @ IVD
 131               	.set    FPS_INJ_T_SWC,    1          /* Injection time for SWC sub Vth fine program = *10us */
 132               	.set    FPS_VD_OS_SWC,    46         /* Vd table offset */
 133               	.set    FPS_GATE_S_OTA,    0x4600          /* Gate_S voltage for OTA sub Vth fine program = V @ IVD
 134               	.set    FPS_INJ_T_OTA,    3          /* Injection time for OTA sub Vth fine program = *10us */
 135               	.set    FPS_VD_OS_OTA,    46         /* Vd table offset */
 136               	.set    FPS_GATE_S_OTAREF,    0x4400          /* Gate_S voltage for OTAREF sub Vth fine program = V
 137               	.set    FPS_INJ_T_OTAREF,    6          /* Injection time for OTAREF sub Vth fine program = *10us *
 138               	.set    FPS_VD_OS_OTAREF,    46         /* Vd table offset */
 139               	.set    FPS_GATE_S_MITE,    0x4600          /* Gate_S voltage for MITE sub Vth fine program = V @ I
 140               	.set    FPS_INJ_T_MITE,    3          /* Injection time for MITE sub Vth fine program = *10us */
 141               	.set    FPS_VD_OS_MITE,    46         /* Vd table offset */
 142               	.set    FPS_GATE_S_DIRSWC,    0x6000          /* Gate_S voltage for SWC sub Vth fine program = V @ 
 143               	.set    FPS_INJ_T_DIRSWC,    1          /* Injection time for SWC sub Vth fine program = *10us */
 144               	.set    FPS_VD_OS_DIRSWC,    46         /* Vd table offset */
 145               	
 146               	.set    FPA_GATE_S_SWC,    0x4800          /* Gate_S voltage for SWC above Vth fine program = V @ I
 147               	.set    FPA_INJ_T_SWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 148               	.set    FPA_VD_OS_SWC,    21         /* Vd table offset */
 149               	.set    FPA_GATE_S_OTA,    0x4000          /* Gate_S voltage for OTA above Vth fine program = V @ I
 150               	.set    FPA_INJ_T_OTA,    3          /* Injection time for OTA above Vth fine program = *10us */
 151               	.set    FPA_VD_OS_OTA,    21         /* Vd table offset */
 152               	.set    FPA_GATE_S_OTAREF,    0x3e00          /* Gate_S voltage for OTAREF above Vth fine program =
 153               	.set    FPA_INJ_T_OTAREF,    6          /* Injection time for OTAREF above Vth fine program = *10us
 154               	.set    FPA_VD_OS_OTAREF,    21         /* Vd table offset */
 155               	.set    FPA_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE above Vth fine program = V @
 156               	.set    FPA_INJ_T_MITE,    3          /* Injection time for MITE above Vth fine program = *10us */
 157               	.set    FPA_VD_OS_MITE,    21         /* Vd table offset */
 158               	.set    FPA_GATE_S_DIRSWC,    0x6e00          /* Gate_S voltage for SWC above Vth fine program = V 
 159               	.set    FPA_INJ_T_DIRSWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 160               	.set    FPA_VD_OS_DIRSWC,    25         /* Vd table offset */
 161               	;.set    FPA_VD_OS_DIRSWC,    21         /* Vd table offset */
 162               	
 163               	.set    FPL_GATE_S_SWC,    0x3c00          /* Gate_S voltage for SWC low sub Vth fine program = V @
 164               	.set    FPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth fine program = *10us */
 165               	.set    FPL_VD_OS_SWC,    46         /* Vd table offset */
 166               	.set    FPL_GATE_S_OTA,    0x2c00          /* Gate_S voltage for OTA low sub Vth fine program = V @
 167               	.set    FPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth fine program = *10us */
 168               	.set    FPL_VD_OS_OTA,    46         /* Vd table offset */
 169               	.set    FPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth fine program
 170               	.set    FPL_INJ_T_OTAREF,    7          /* Injection time for OTAREF low sub Vth fine program = *10
 171               	.set    FPL_VD_OS_OTAREF,    46         /* Vd table offset */
 172               	.set    FPL_GATE_S_MITE,    0x2e00          /* Gate_S voltage for MITE low sub Vth fine program = V
 173               	.set    FPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth fine program = *10us *
 174               	.set    FPL_VD_OS_MITE,    46         /* Vd table offset */
 175               	.set    FPL_GATE_S_DIRSWC,    0x3c00          /* Gate_S voltage for SWC low sub Vth fine program = 
 176               	.set    FPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth fine program = *10us 
 177               	.set    FPL_VD_OS_DIRSWC,    46         /* Vd table offset */
 178               	
   3               	
   4               	.global main
   5               	
   6               	main:
   7 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 9


   8 0004 3740 0050 		mov	#0x5000, r7
   9 0008 0A43      		mov	#0, r10			; Initialize time
  10 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  11               	init_wait:
  12 000e 1583      	        dec.w   r5 
  13 0010 FE23      	        jnz     init_wait
  14 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  14      5800 
  15 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  15      2001 
  16 001e 32C2      		dint
  17 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  18 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  18      6401 
  19 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  19      000B 
  20 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  20      6001 
  21 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  21      0C0B 
  22 003c 8243 080B 		mov     #0,    &ROW_SEL
  23 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  24 0044 874A 0000 		mov	r10, @r7
  25 0048 2753      		incd	r7
  26 004a 874A 0000 		mov	r10, @r7
  27 004e 2753      		incd	r7
  28 0050 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  29 0052 B012 0000 		call	#block_measure
  30               	
  31               		;mov	#3, r15
  32 0056 3F40 0A00 		mov	#10, r15
  33               	coarse_loop_s:
  34 005a 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  35 005c B012 0000 		call	#measure_verify
  36 0060 B012 0000 		call	#Pulse_w_calculate
  37 0064 B012 0000 		call	#coarse_inject
  38               	;	mov     #0x3333, @r7	        ; Record Injection 0x3333 
  39               	;	incd	r7
  40               	;	mov     r10, @r7	        ; Record time 
  41               	;	incd	r7
  42               	;        mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  43               	;	call	#block_measure
  44 0068 1F83      	        dec.w   r15
  45 006a 0124      	        jz      coarse_loop_e
  46 006c F63F      		jmp	coarse_loop_s
  47               	coarse_loop_e:
  48               	
  49 006e B740 3333 		mov     #0x3333, @r7	        ; Record Injection 0x3333 
  49      0000 
  50 0074 2753      		incd	r7
  51 0076 874A 0000 		mov     r10, @r7	        ; Record time 
  52 007a 2753      		incd	r7
  53 007c 0D43      	        mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  54 007e B012 0000 		call	#block_measure
  55               	
  56 0082 B743 0000 		mov	#0xFFFF, @r7		; Data End
  57 0086 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 10


  58 008a 403D      		jmp     end_of_test
  59               	
  60               	coarse_inject:
  61 008c 3B40 0070 		mov	#0x7000, r11
  62 0090 2C4B      		mov	@r11, r12		; No. of FGs 
  63 0092 B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  63      0C0B 
  64 0098 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  64      6401 
  65 009e B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  65      6001 
  66 00a4 B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  67               	coarse_inject_set_s:
  68 00a8 2B53      		incd	r11
  69 00aa A24B 080B 		mov     @r11,    &ROW_SEL
  70 00ae 2B53      		incd	r11
  71 00b0 A24B 0A0B 	        mov     @r11,    &COL_SEL
  72 00b4 2B53      		incd	r11
  73 00b6 2B53      		incd	r11
  74 00b8 2B53      		incd	r11
  75 00ba 284B      	        mov     @r11,    r8		; Read # of pulses
  76 00bc 0893      		cmp	#0x0000, r8
  77 00be 2624      		jeq	coarse_inject_skip
  78 00c0 B240 004A 		mov	#MCP_GATE_S_MITE, &GATE_S	; gate_s
  78      020B 
  79 00c6 B240 6000 	        mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
  79      100B 
  80 00cc B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
  80      120B 
  81 00d2 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  81      000B 
  82 00d8 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
  82      6001 
  83 00de 2543      		mov     #2, r5             	; Number of ms
  84 00e0 B012 0000 		call    #wait_ms                ; Call the waiting function
  85 00e4 B240 2600 		mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e: 
  85      000B 
  86               	multi_inject_pulse_s:
  87 00ea 3540 0300 	        mov     #MCP_INJ_T_MITE, r5  	; Number of 10us to inject
  88 00ee B012 0000 		call    #wait_10us             	; Call the waiting function
  89 00f2 3A50 0300 		add     #MCP_INJ_T_MITE, r10  	; Calculate time
  90 00f6 1883      	       	dec.w   r8
  91 00f8 0124      	        jz      multi_inject_pulse_e_1
  92 00fa F73F      	        jmp	multi_inject_pulse_s
  93               	multi_inject_pulse_e_1:
  94 00fc BB43 0000 		mov	#0xffff, @r11
  95               	multi_inject_pulse_e_2:
  96 0100 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  96      000B 
  97 0106 1543      		mov     #1, r5             	; Number of ms
  98 0108 B012 0000 		call    #wait_ms                ; Call the waiting function
  99               	coarse_inject_skip:
 100 010c 1C83      	       	dec.w   r12
 101 010e 0124      	        jz      coarse_inject_e
 102 0110 CB3F      	 	jmp	coarse_inject_set_s
 103               	coarse_inject_e:
 104 0112 A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 11


 105 0116 2543      		mov     #2, r5             	; Number of ms
 106 0118 B012 0000 		call    #wait_ms                ; Call the waiting function
 107 011c B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 107      6001 
 108 0122 1543      		mov     #1, r5             	; Number of ms
 109 0124 B012 0000 		call    #wait_ms                ; Call the waiting function
 110 0128 A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 111 012c B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 111      100B 
 112 0132 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 112      120B 
 113 0138 1543      		mov     #1, r5             	; Number of ms
 114 013a B012 0000 		call    #wait_ms                ; Call the waiting function
 115 013e 3041      		ret
 116               	
 117               	measure_verify:
 118 0140 3B40 0070 		mov	#0x7000, r11
 119 0144 2C4B      		mov	@r11, r12		; No. of FGs 
 120 0146 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 120      0C0B 
 121 014c B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 121      6401 
 122 0152 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 122      6001 
 123 0158 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 124               	measure_verify_s:
 125 015c 2B53      		incd	r11
 126 015e A24B 080B 		mov     @r11,    &ROW_SEL
 127 0162 2B53      		incd	r11
 128 0164 A24B 0A0B 	        mov     @r11,    &COL_SEL
 129 0168 2B53      		incd	r11
 130 016a 284B      		mov	@r11, r8
 131 016c 3880 F401 	        sub     #500, r8                ; Target offset for overshoot!
 132 0170 2B53      		incd	r11
 133 0172 2B53      		incd	r11
 134 0174 294B      		mov	@r11, r9		; Read # of pulses
 135 0176 0993      		cmp	#0x0000, r9
 136 0178 2F24      		jeq	measure_verify_skip
 137 017a 824D 020B 		mov 	r13, &GATE_S
 138 017e B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 138      100B 
 139 0184 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 139      120B 
 140 018a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 140      000B 
 141 0190 2543      	        mov     #2, r5             	; Number of ms
 142 0192 B012 0000 		call    #wait_ms                ; Call the waiting function
 143 0196 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 143      000B 
 144 019c 3540 0A00 	        mov     #10, r5             	; Number of ms
 145 01a0 B012 0000 	        call    #wait_ms                ; Call the waiting function
 146 01a4 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 146      0C0B 
 147 01aa 3540 0500 	        mov     #5, r5             	; Number of ms
 148 01ae B012 0000 		call    #wait_ms                ; Call the waiting function
 149 01b2 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 150 01b6 1942 040B 		mov     &ADC, r9	        ; Get value in counter
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 12


 151 01ba B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 151      0C0B 
 152 01c0 0998      		cmp	r8, r9
 153 01c2 0330      		jn	status_1
 154 01c4 8B43 0000 		mov	#0x0000, @r11		; Injection over
 155 01c8 073C      		jmp	measure_verify_skip	
 156               	status_1:
 157 01ca 2B83      		decd	r11
 158 01cc 3850 C800 		add	#200, r8		; Target offset for overshoot!
 159 01d0 0889      		sub	r9, r8
 160 01d2 8B48 0000 		mov	r8, @r11
 161 01d6 2B53      		incd	r11
 162               	measure_verify_skip:
 163 01d8 1C83      	        dec.w   r12
 164 01da 0124      	        jz      measure_verify_e
 165 01dc BF3F      		jmp	measure_verify_s
 166               	measure_verify_e:
 167 01de B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 167      000B 
 168 01e4 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 168      6001 
 169 01ea 3041      		ret
 170               	
 171               	Pulse_w_calculate:
 172 01ec 3B40 0070 		mov	#0x7000, r11
 173 01f0 2C4B      		mov	@r11, r12		; No. of FGs 
 174               	Pulse_w_cal_s:
 175 01f2 2B53      		incd	r11			; @ Row_Sel
 176 01f4 2B53      		incd	r11			; @ Col_Sel
 177 01f6 2B53      		incd	r11	
 178 01f8 284B      		mov	@r11, r8		; @ Target
 179 01fa 3880 2C01 		sub     #300, r8                ; Target offset for overshoot!
 180 01fe 2B53      		incd	r11	
 181 0200 294B      		mov	@r11, r9		; @ Diff
 182               	;	bic	#0x00C8, r9		; Target offset for overshoot!
 183 0202 2B53      		incd	r11		
 184 0204 2E4B      		mov	@r11, r14		; @ Pulse No. 
 185 0206 0E93      		cmp	#0x0000, r14
 186 0208 2524      		jeq	No_calculation
 187 020a 0889      		sub	r9, r8			; r8 = r8(target)-r9(diff) = Istart
 188 020c 3890 9011 		cmp	#ADC_1nA, r8		; If r8 - #ADC_1nA < 0,
 189 0210 0234      		jge	Istart_1
 190 0212 3840 9011 		mov	#ADC_1nA, r8		; r8 = ADC_1nA
 191               	Istart_1:
 192 0216 3880 9011 		sub	#ADC_1nA, r8		; r8 = r8(Istart)- ADC_1nA = diff'
 193 021a 0958      		add	r8, r9			; r9 = r8(diff') + r9(diff) = diff'' 
 194 021c 0810      		rrc	r8
 195 021e 0810      		rrc	r8
 196 0220 0810      		rrc	r8
 197 0222 0810      		rrc	r8
 198 0224 0810      		rrc	r8
 199 0226 0810      		rrc	r8	
 200 0228 38C0 00FF 		bic	#0xff00, r8
 201 022c 0868      		rlc	r8
 202 022e 18C3      		bic	#0x0001, r8
 203 0230 3850 0068 		add	#0x6800, r8
 204 0234 0910      		rrc	r9						
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 13


 205 0236 0910      		rrc	r9						
 206 0238 0910      		rrc	r9						
 207 023a 0910      		rrc	r9						
 208 023c 0910      		rrc	r9						
 209 023e 0910      		rrc	r9
 210 0240 39C0 00FF 		bic	#0xff00, r9
 211 0244 0969      		rlc	r9
 212 0246 19C3      		bic	#0x0001, r9
 213 0248 3950 0068 		add	#0x6800, r9
 214               	;	decd	r11
 215               	;	mov	@r9, r14
 216               	;	sub	@r8, r14
 217               	;	mov	r14, @r11
 218               	;	incd	r11
 219 024c 2E49      	 	mov	@r9, r14
 220 024e 2E88      		sub	@r8, r14
 221               	;	bic	#0x0011, r9		; Target offset for overshoot!
 222 0250 8B4E 0000 		mov	r14, @r11
 223               	No_calculation:
 224 0254 1C83      	        dec.w   r12
 225 0256 0124      	        jz      Pulse_w_cal_e
 226 0258 CC3F      		jmp	Pulse_w_cal_s
 227               	Pulse_w_cal_e:
 228 025a 3041      		ret
 229               	
 230               	block_measure:
 231 025c 3B40 0070 		mov	#0x7000, r11
 232 0260 2C4B      		mov	@r11, r12		; No. of FGs 
 233 0262 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 233      0C0B 
 234 0268 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 234      6401 
 235 026e B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 235      6001 
 236 0274 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 237               	block_measure_s:
 238 0278 2B53      		incd	r11
 239 027a A24B 080B 		mov     @r11,    &ROW_SEL
 240 027e 2B53      		incd	r11
 241 0280 A24B 0A0B 	        mov     @r11,    &COL_SEL
 242 0284 2B53      		incd	r11
 243 0286 2B53      		incd	r11
 244 0288 2B53      		incd	r11
 245 028a 824D 020B 		mov 	r13, &GATE_S
 246 028e B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 246      100B 
 247 0294 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 247      120B 
 248 029a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 248      000B 
 249 02a0 2543      	        mov     #2, r5             	; Number of ms
 250 02a2 B012 0000 		call    #wait_ms                ; Call the waiting function
 251 02a6 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 251      000B 
 252 02ac 3540 0A00 	        mov     #10, r5             	; Number of ms
 253 02b0 B012 0000 	        call    #wait_ms                ; Call the waiting function
 254 02b4 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 14


 254      0C0B 
 255 02ba 3540 0500 	        mov     #5, r5             	; Number of ms
 256 02be B012 0000 		call    #wait_ms                ; Call the waiting function
 257 02c2 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 258 02c6 9742 040B 		mov     &ADC, @r7		; Get value in counter
 258      0000 
 259 02cc 2753      		incd	r7
 260 02ce B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 260      0C0B 
 261 02d4 1C83      	        dec.w   r12
 262 02d6 0124      	        jz      block_measure_e
 263 02d8 CF3F      		jmp	block_measure_s
 264               	block_measure_e:
 265 02da B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 265      000B 
 266 02e0 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 266      6001 
 267 02e6 3041      		ret
 268               	
 269               	wait_ms:
 270 02e8 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 271 02ec 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 272               	wait_ms_loop:
 273 02ee 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 274 02f0 FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 275 02f2 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 276 02f4 1583      	        dec.w   r5                      ; Decrement number of ms total
 277 02f6 FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
 278 02f8 3041      	        ret    
 279               	 
 280               	wait_10us:
 281 02fa 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
 282 02fe 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 283               	wait_10us_loop:
 284 0300 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 285 0302 FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 286 0304 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 287 0306 1583      	        dec.w   r5                      ; Decrement number of ms total
 288 0308 FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 289 030a 3041      	        ret   
 290               	
 291               	end_of_test:
 292 030c 8243 5800 		mov	#0x0000, &BCSCTL2
 293 0310 0343      		nop
 294 0312 3043      		br #0xffff
 295               	
 296               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 297               	.section .vectors, "a"
 298 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 299 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 300 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 301 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 302 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 303 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 304 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 305 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 306 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 15


 307 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 308 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 309 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 310 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 311 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
 312 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
 313 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 16


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 17


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 18


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 19


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
       chip_para.asm:7      *ABS*:00000003 TUN_TIME_SP
       chip_para.asm:8      *ABS*:00000002 R_TUN_TIME_SP
       chip_para.asm:9      *ABS*:000001f4 INJ_TIME_SP_1
       chip_para.asm:10     *ABS*:00000001 INJ_TIME_SP_RUN
       chip_para.asm:15     *ABS*:00001190 ADC_1nA
       chip_para.asm:18     *ABS*:00000028 TUN_TIME_TP_CAB
       chip_para.asm:19     *ABS*:00000028 R_TUN_TIME_TP_CAB
       chip_para.asm:22     *ABS*:00000040 RI_GATE_S_SWC
       chip_para.asm:23     *ABS*:0000172b RI_VC1_SWC
       chip_para.asm:24     *ABS*:0000169c RI_VC2_SWC
       chip_para.asm:25     *ABS*:000014ed RI_VC3_SWC
       chip_para.asm:26     *ABS*:00001190 RI_VC4_SWC
       chip_para.asm:27     *ABS*:0000ea0e RI_VD1_SWC
       chip_para.asm:28     *ABS*:0000fe0e RI_VD2_SWC
       chip_para.asm:29     *ABS*:00000000 RI_GATE_S_OTA
       chip_para.asm:30     *ABS*:00001a4c RI_VC1_OTA
       chip_para.asm:31     *ABS*:0000196c RI_VC2_OTA
       chip_para.asm:32     *ABS*:000016cd RI_VC3_OTA
       chip_para.asm:33     *ABS*:00001190 RI_VC4_OTA
       chip_para.asm:34     *ABS*:0000ea0e RI_VD1_OTA
       chip_para.asm:35     *ABS*:0000fe0e RI_VD2_OTA
       chip_para.asm:36     *ABS*:00000040 RI_GATE_S_OTAREF
       chip_para.asm:37     *ABS*:000017f7 RI_VC1_OTAREF
       chip_para.asm:38     *ABS*:00001754 RI_VC2_OTAREF
       chip_para.asm:39     *ABS*:00001568 RI_VC3_OTAREF
       chip_para.asm:40     *ABS*:00001190 RI_VC4_OTAREF
       chip_para.asm:41     *ABS*:0000d00e RI_VD1_OTAREF
       chip_para.asm:42     *ABS*:0000fe0e RI_VD2_OTAREF
       chip_para.asm:43     *ABS*:00000000 RI_GATE_S_MITE
       chip_para.asm:44     *ABS*:00001b7b RI_VC1_MITE
       chip_para.asm:45     *ABS*:00001a7d RI_VC2_MITE
       chip_para.asm:46     *ABS*:00001784 RI_VC3_MITE
       chip_para.asm:47     *ABS*:00001190 RI_VC4_MITE
       chip_para.asm:48     *ABS*:0000ea0e RI_VD1_MITE
       chip_para.asm:49     *ABS*:0000fe0e RI_VD2_MITE
       chip_para.asm:51     *ABS*:00000000 RI_GATE_S_DIRSWC
       chip_para.asm:52     *ABS*:0000178f RI_VC1_DIRSWC
       chip_para.asm:53     *ABS*:000016f5 RI_VC2_DIRSWC
       chip_para.asm:54     *ABS*:000011a5 RI_VC3_DIRSWC
       chip_para.asm:56     *ABS*:00001190 RI_VC4_DIRSWC
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 20


       chip_para.asm:57     *ABS*:0000c80e RI_VD1_DIRSWC
       chip_para.asm:59     *ABS*:0000d00e RI_VD2_DIRSWC
       chip_para.asm:62     *ABS*:00000040 RIL_GATE_S_SWC
       chip_para.asm:63     *ABS*:00001190 RIL_VC1_SWC
       chip_para.asm:64     *ABS*:00001043 RIL_VC2_SWC
       chip_para.asm:65     *ABS*:0000ea0e RIL_VD1_SWC
       chip_para.asm:66     *ABS*:00000000 RIL_GATE_S_OTA
       chip_para.asm:67     *ABS*:00001190 RIL_VC1_OTA
       chip_para.asm:68     *ABS*:0000104b RIL_VC2_OTA
       chip_para.asm:69     *ABS*:0000ea0e RIL_VD1_OTA
       chip_para.asm:70     *ABS*:00000040 RIL_GATE_S_OTAREF
       chip_para.asm:71     *ABS*:00001190 RIL_VC1_OTAREF
       chip_para.asm:72     *ABS*:0000104e RIL_VC2_OTAREF
       chip_para.asm:73     *ABS*:0000d00e RIL_VD1_OTAREF
       chip_para.asm:74     *ABS*:00000000 RIL_GATE_S_MITE
       chip_para.asm:75     *ABS*:00001190 RIL_VC1_MITE
       chip_para.asm:76     *ABS*:00001059 RIL_VC2_MITE
       chip_para.asm:77     *ABS*:0000ea0e RIL_VD1_MITE
       chip_para.asm:78     *ABS*:00000040 RIL_GATE_S_DIRSWC
       chip_para.asm:79     *ABS*:00001190 RIL_VC1_DIRSWC
       chip_para.asm:80     *ABS*:00001043 RIL_VC2_DIRSWC
       chip_para.asm:81     *ABS*:0000ea0e RIL_VD1_DIRSWC
       chip_para.asm:84     *ABS*:00005800 FCP_GATE_S_SWC
       chip_para.asm:85     *ABS*:00000001 FCP_INJ_T_SWC
       chip_para.asm:86     *ABS*:00004a00 FCP_GATE_S_OTA
       chip_para.asm:87     *ABS*:00000003 FCP_INJ_T_OTA
       chip_para.asm:88     *ABS*:00004a00 FCP_GATE_S_OTAREF
       chip_para.asm:89     *ABS*:00000006 FCP_INJ_T_OTAREF
       chip_para.asm:90     *ABS*:00004a00 FCP_GATE_S_MITE
       chip_para.asm:91     *ABS*:00000003 FCP_INJ_T_MITE
       chip_para.asm:92     *ABS*:00006200 FCP_GATE_S_DIRSWC
       chip_para.asm:93     *ABS*:00000001 FCP_INJ_T_DIRSWC
       chip_para.asm:95     *ABS*:00004400 FCPL_GATE_S_SWC
       chip_para.asm:96     *ABS*:00000001 FCPL_INJ_T_SWC
       chip_para.asm:97     *ABS*:00003200 FCPL_GATE_S_OTA
       chip_para.asm:98     *ABS*:00000003 FCPL_INJ_T_OTA
       chip_para.asm:99     *ABS*:00003400 FCPL_GATE_S_OTAREF
       chip_para.asm:100    *ABS*:00000006 FCPL_INJ_T_OTAREF
       chip_para.asm:101    *ABS*:00003200 FCPL_GATE_S_MITE
       chip_para.asm:102    *ABS*:00000003 FCPL_INJ_T_MITE
       chip_para.asm:103    *ABS*:00004400 FCPL_GATE_S_DIRSWC
       chip_para.asm:104    *ABS*:00000001 FCPL_INJ_T_DIRSWC
       chip_para.asm:107    *ABS*:00005800 MCP_GATE_S_SWC
       chip_para.asm:108    *ABS*:00000001 MCP_INJ_T_SWC
       chip_para.asm:109    *ABS*:00004a00 MCP_GATE_S_OTA
       chip_para.asm:110    *ABS*:00000003 MCP_INJ_T_OTA
       chip_para.asm:111    *ABS*:00004a00 MCP_GATE_S_OTAREF
       chip_para.asm:112    *ABS*:00000006 MCP_INJ_T_OTAREF
       chip_para.asm:113    *ABS*:00004a00 MCP_GATE_S_MITE
       chip_para.asm:114    *ABS*:00000003 MCP_INJ_T_MITE
       chip_para.asm:115    *ABS*:00006200 MCP_GATE_S_DIRSWC
       chip_para.asm:116    *ABS*:00000001 MCP_INJ_T_DIRSWC
       chip_para.asm:118    *ABS*:00004400 MCPL_GATE_S_SWC
       chip_para.asm:119    *ABS*:00000001 MCPL_INJ_T_SWC
       chip_para.asm:120    *ABS*:00003200 MCPL_GATE_S_OTA
       chip_para.asm:121    *ABS*:00000003 MCPL_INJ_T_OTA
       chip_para.asm:122    *ABS*:00003400 MCPL_GATE_S_OTAREF
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 21


       chip_para.asm:123    *ABS*:00000006 MCPL_INJ_T_OTAREF
       chip_para.asm:124    *ABS*:00003200 MCPL_GATE_S_MITE
       chip_para.asm:125    *ABS*:00000003 MCPL_INJ_T_MITE
       chip_para.asm:126    *ABS*:00004400 MCPL_GATE_S_DIRSWC
       chip_para.asm:127    *ABS*:00000001 MCPL_INJ_T_DIRSWC
       chip_para.asm:130    *ABS*:00004600 FPS_GATE_S_SWC
       chip_para.asm:131    *ABS*:00000001 FPS_INJ_T_SWC
       chip_para.asm:132    *ABS*:0000002e FPS_VD_OS_SWC
       chip_para.asm:133    *ABS*:00004600 FPS_GATE_S_OTA
       chip_para.asm:134    *ABS*:00000003 FPS_INJ_T_OTA
       chip_para.asm:135    *ABS*:0000002e FPS_VD_OS_OTA
       chip_para.asm:136    *ABS*:00004400 FPS_GATE_S_OTAREF
       chip_para.asm:137    *ABS*:00000006 FPS_INJ_T_OTAREF
       chip_para.asm:138    *ABS*:0000002e FPS_VD_OS_OTAREF
       chip_para.asm:139    *ABS*:00004600 FPS_GATE_S_MITE
       chip_para.asm:140    *ABS*:00000003 FPS_INJ_T_MITE
       chip_para.asm:141    *ABS*:0000002e FPS_VD_OS_MITE
       chip_para.asm:142    *ABS*:00006000 FPS_GATE_S_DIRSWC
       chip_para.asm:143    *ABS*:00000001 FPS_INJ_T_DIRSWC
       chip_para.asm:144    *ABS*:0000002e FPS_VD_OS_DIRSWC
       chip_para.asm:146    *ABS*:00004800 FPA_GATE_S_SWC
       chip_para.asm:147    *ABS*:00000001 FPA_INJ_T_SWC
       chip_para.asm:148    *ABS*:00000015 FPA_VD_OS_SWC
       chip_para.asm:149    *ABS*:00004000 FPA_GATE_S_OTA
       chip_para.asm:150    *ABS*:00000003 FPA_INJ_T_OTA
       chip_para.asm:151    *ABS*:00000015 FPA_VD_OS_OTA
       chip_para.asm:152    *ABS*:00003e00 FPA_GATE_S_OTAREF
       chip_para.asm:153    *ABS*:00000006 FPA_INJ_T_OTAREF
       chip_para.asm:154    *ABS*:00000015 FPA_VD_OS_OTAREF
       chip_para.asm:155    *ABS*:00004a00 FPA_GATE_S_MITE
       chip_para.asm:156    *ABS*:00000003 FPA_INJ_T_MITE
       chip_para.asm:157    *ABS*:00000015 FPA_VD_OS_MITE
       chip_para.asm:158    *ABS*:00006e00 FPA_GATE_S_DIRSWC
       chip_para.asm:159    *ABS*:00000001 FPA_INJ_T_DIRSWC
       chip_para.asm:160    *ABS*:00000019 FPA_VD_OS_DIRSWC
       chip_para.asm:163    *ABS*:00003c00 FPL_GATE_S_SWC
       chip_para.asm:164    *ABS*:00000001 FPL_INJ_T_SWC
       chip_para.asm:165    *ABS*:0000002e FPL_VD_OS_SWC
       chip_para.asm:166    *ABS*:00002c00 FPL_GATE_S_OTA
       chip_para.asm:167    *ABS*:00000003 FPL_INJ_T_OTA
       chip_para.asm:168    *ABS*:0000002e FPL_VD_OS_OTA
       chip_para.asm:169    *ABS*:00003400 FPL_GATE_S_OTAREF
       chip_para.asm:170    *ABS*:00000007 FPL_INJ_T_OTAREF
       chip_para.asm:171    *ABS*:0000002e FPL_VD_OS_OTAREF
       chip_para.asm:172    *ABS*:00002e00 FPL_GATE_S_MITE
       chip_para.asm:173    *ABS*:00000003 FPL_INJ_T_MITE
       chip_para.asm:174    *ABS*:0000002e FPL_VD_OS_MITE
       chip_para.asm:175    *ABS*:00003c00 FPL_GATE_S_DIRSWC
       chip_para.asm:176    *ABS*:00000001 FPL_INJ_T_DIRSWC
       chip_para.asm:177    *ABS*:0000002e FPL_VD_OS_DIRSWC
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:6      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:11     .text:0000000e init_wait
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:230    .text:0000025c block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:33     .text:0000005a coarse_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:117    .text:00000140 measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:171    .text:000001ec Pulse_w_calculate
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:60     .text:0000008c coarse_inject
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43 			page 22


/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:47     .text:0000006e coarse_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:291    .text:0000030c end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:67     .text:000000a8 coarse_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:99     .text:0000010c coarse_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:269    .text:000002e8 wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:86     .text:000000ea multi_inject_pulse_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:280    .text:000002fa wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:93     .text:000000fc multi_inject_pulse_e_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:95     .text:00000100 multi_inject_pulse_e_2
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:103    .text:00000112 coarse_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:124    .text:0000015c measure_verify_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:162    .text:000001d8 measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:156    .text:000001ca status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:166    .text:000001de measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:174    .text:000001f2 Pulse_w_cal_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:223    .text:00000254 No_calculation
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:191    .text:00000216 Istart_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:227    .text:0000025a Pulse_w_cal_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:237    .text:00000278 block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:264    .text:000002da block_measure_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:272    .text:000002ee wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/measured_coarse_program_aboveVt_CAB_mite.s43:283    .text:00000300 wait_10us_loop

NO UNDEFINED SYMBOLS

measured_coarse_program_aboveVt_CAB_mite.o:     file format elf32-msp430
measured_coarse_program_aboveVt_CAB_mite.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000314  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000348  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000348  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  00000348  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
00000003 l       *ABS*	00000000 TUN_TIME_SP
00000002 l       *ABS*	00000000 R_TUN_TIME_SP
000001f4 l       *ABS*	00000000 INJ_TIME_SP_1
00000001 l       *ABS*	00000000 INJ_TIME_SP_RUN
00001190 l       *ABS*	00000000 ADC_1nA
00000028 l       *ABS*	00000000 TUN_TIME_TP_CAB
00000028 l       *ABS*	00000000 R_TUN_TIME_TP_CAB
00000040 l       *ABS*	00000000 RI_GATE_S_SWC
0000172b l       *ABS*	00000000 RI_VC1_SWC
0000169c l       *ABS*	00000000 RI_VC2_SWC
000014ed l       *ABS*	00000000 RI_VC3_SWC
00001190 l       *ABS*	00000000 RI_VC4_SWC
0000ea0e l       *ABS*	00000000 RI_VD1_SWC
0000fe0e l       *ABS*	00000000 RI_VD2_SWC
00000000 l       *ABS*	00000000 RI_GATE_S_OTA
00001a4c l       *ABS*	00000000 RI_VC1_OTA
0000196c l       *ABS*	00000000 RI_VC2_OTA
000016cd l       *ABS*	00000000 RI_VC3_OTA
00001190 l       *ABS*	00000000 RI_VC4_OTA
0000ea0e l       *ABS*	00000000 RI_VD1_OTA
0000fe0e l       *ABS*	00000000 RI_VD2_OTA
00000040 l       *ABS*	00000000 RI_GATE_S_OTAREF
000017f7 l       *ABS*	00000000 RI_VC1_OTAREF
00001754 l       *ABS*	00000000 RI_VC2_OTAREF
00001568 l       *ABS*	00000000 RI_VC3_OTAREF
00001190 l       *ABS*	00000000 RI_VC4_OTAREF
0000d00e l       *ABS*	00000000 RI_VD1_OTAREF
0000fe0e l       *ABS*	00000000 RI_VD2_OTAREF
00000000 l       *ABS*	00000000 RI_GATE_S_MITE
00001b7b l       *ABS*	00000000 RI_VC1_MITE
00001a7d l       *ABS*	00000000 RI_VC2_MITE
00001784 l       *ABS*	00000000 RI_VC3_MITE
00001190 l       *ABS*	00000000 RI_VC4_MITE
0000ea0e l       *ABS*	00000000 RI_VD1_MITE
0000fe0e l       *ABS*	00000000 RI_VD2_MITE
00000000 l       *ABS*	00000000 RI_GATE_S_DIRSWC
0000178f l       *ABS*	00000000 RI_VC1_DIRSWC
000016f5 l       *ABS*	00000000 RI_VC2_DIRSWC
000011a5 l       *ABS*	00000000 RI_VC3_DIRSWC
00001190 l       *ABS*	00000000 RI_VC4_DIRSWC
0000c80e l       *ABS*	00000000 RI_VD1_DIRSWC
0000d00e l       *ABS*	00000000 RI_VD2_DIRSWC
00000040 l       *ABS*	00000000 RIL_GATE_S_SWC
00001190 l       *ABS*	00000000 RIL_VC1_SWC
00001043 l       *ABS*	00000000 RIL_VC2_SWC
0000ea0e l       *ABS*	00000000 RIL_VD1_SWC
00000000 l       *ABS*	00000000 RIL_GATE_S_OTA
00001190 l       *ABS*	00000000 RIL_VC1_OTA
0000104b l       *ABS*	00000000 RIL_VC2_OTA
0000ea0e l       *ABS*	00000000 RIL_VD1_OTA
00000040 l       *ABS*	00000000 RIL_GATE_S_OTAREF
00001190 l       *ABS*	00000000 RIL_VC1_OTAREF
0000104e l       *ABS*	00000000 RIL_VC2_OTAREF
0000d00e l       *ABS*	00000000 RIL_VD1_OTAREF
00000000 l       *ABS*	00000000 RIL_GATE_S_MITE
00001190 l       *ABS*	00000000 RIL_VC1_MITE
00001059 l       *ABS*	00000000 RIL_VC2_MITE
0000ea0e l       *ABS*	00000000 RIL_VD1_MITE
00000040 l       *ABS*	00000000 RIL_GATE_S_DIRSWC
00001190 l       *ABS*	00000000 RIL_VC1_DIRSWC
00001043 l       *ABS*	00000000 RIL_VC2_DIRSWC
0000ea0e l       *ABS*	00000000 RIL_VD1_DIRSWC
00005800 l       *ABS*	00000000 FCP_GATE_S_SWC
00000001 l       *ABS*	00000000 FCP_INJ_T_SWC
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTA
00000003 l       *ABS*	00000000 FCP_INJ_T_OTA
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FCP_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 FCP_GATE_S_MITE
00000003 l       *ABS*	00000000 FCP_INJ_T_MITE
00006200 l       *ABS*	00000000 FCP_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FCP_INJ_T_DIRSWC
00004400 l       *ABS*	00000000 FCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 FCPL_GATE_S_OTA
00000003 l       *ABS*	00000000 FCPL_INJ_T_OTA
00003400 l       *ABS*	00000000 FCPL_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FCPL_INJ_T_OTAREF
00003200 l       *ABS*	00000000 FCPL_GATE_S_MITE
00000003 l       *ABS*	00000000 FCPL_INJ_T_MITE
00004400 l       *ABS*	00000000 FCPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FCPL_INJ_T_DIRSWC
00005800 l       *ABS*	00000000 MCP_GATE_S_SWC
00000001 l       *ABS*	00000000 MCP_INJ_T_SWC
00004a00 l       *ABS*	00000000 MCP_GATE_S_OTA
00000003 l       *ABS*	00000000 MCP_INJ_T_OTA
00004a00 l       *ABS*	00000000 MCP_GATE_S_OTAREF
00000006 l       *ABS*	00000000 MCP_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 MCP_GATE_S_MITE
00000003 l       *ABS*	00000000 MCP_INJ_T_MITE
00006200 l       *ABS*	00000000 MCP_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 MCP_INJ_T_DIRSWC
00004400 l       *ABS*	00000000 MCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 MCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 MCPL_GATE_S_OTA
00000003 l       *ABS*	00000000 MCPL_INJ_T_OTA
00003400 l       *ABS*	00000000 MCPL_GATE_S_OTAREF
00000006 l       *ABS*	00000000 MCPL_INJ_T_OTAREF
00003200 l       *ABS*	00000000 MCPL_GATE_S_MITE
00000003 l       *ABS*	00000000 MCPL_INJ_T_MITE
00004400 l       *ABS*	00000000 MCPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 MCPL_INJ_T_DIRSWC
00004600 l       *ABS*	00000000 FPS_GATE_S_SWC
00000001 l       *ABS*	00000000 FPS_INJ_T_SWC
0000002e l       *ABS*	00000000 FPS_VD_OS_SWC
00004600 l       *ABS*	00000000 FPS_GATE_S_OTA
00000003 l       *ABS*	00000000 FPS_INJ_T_OTA
0000002e l       *ABS*	00000000 FPS_VD_OS_OTA
00004400 l       *ABS*	00000000 FPS_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FPS_INJ_T_OTAREF
0000002e l       *ABS*	00000000 FPS_VD_OS_OTAREF
00004600 l       *ABS*	00000000 FPS_GATE_S_MITE
00000003 l       *ABS*	00000000 FPS_INJ_T_MITE
0000002e l       *ABS*	00000000 FPS_VD_OS_MITE
00006000 l       *ABS*	00000000 FPS_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPS_INJ_T_DIRSWC
0000002e l       *ABS*	00000000 FPS_VD_OS_DIRSWC
00004800 l       *ABS*	00000000 FPA_GATE_S_SWC
00000001 l       *ABS*	00000000 FPA_INJ_T_SWC
00000015 l       *ABS*	00000000 FPA_VD_OS_SWC
00004000 l       *ABS*	00000000 FPA_GATE_S_OTA
00000003 l       *ABS*	00000000 FPA_INJ_T_OTA
00000015 l       *ABS*	00000000 FPA_VD_OS_OTA
00003e00 l       *ABS*	00000000 FPA_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FPA_INJ_T_OTAREF
00000015 l       *ABS*	00000000 FPA_VD_OS_OTAREF
00004a00 l       *ABS*	00000000 FPA_GATE_S_MITE
00000003 l       *ABS*	00000000 FPA_INJ_T_MITE
00000015 l       *ABS*	00000000 FPA_VD_OS_MITE
00006e00 l       *ABS*	00000000 FPA_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPA_INJ_T_DIRSWC
00000019 l       *ABS*	00000000 FPA_VD_OS_DIRSWC
00003c00 l       *ABS*	00000000 FPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FPL_INJ_T_SWC
0000002e l       *ABS*	00000000 FPL_VD_OS_SWC
00002c00 l       *ABS*	00000000 FPL_GATE_S_OTA
00000003 l       *ABS*	00000000 FPL_INJ_T_OTA
0000002e l       *ABS*	00000000 FPL_VD_OS_OTA
00003400 l       *ABS*	00000000 FPL_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FPL_INJ_T_OTAREF
0000002e l       *ABS*	00000000 FPL_VD_OS_OTAREF
00002e00 l       *ABS*	00000000 FPL_GATE_S_MITE
00000003 l       *ABS*	00000000 FPL_INJ_T_MITE
0000002e l       *ABS*	00000000 FPL_VD_OS_MITE
00003c00 l       *ABS*	00000000 FPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPL_INJ_T_DIRSWC
0000002e l       *ABS*	00000000 FPL_VD_OS_DIRSWC
0000000e l       .text	00000000 init_wait
0000025c l       .text	00000000 block_measure
0000005a l       .text	00000000 coarse_loop_s
00000140 l       .text	00000000 measure_verify
000001ec l       .text	00000000 Pulse_w_calculate
0000008c l       .text	00000000 coarse_inject
0000006e l       .text	00000000 coarse_loop_e
0000030c l       .text	00000000 end_of_test
000000a8 l       .text	00000000 coarse_inject_set_s
0000010c l       .text	00000000 coarse_inject_skip
000002e8 l       .text	00000000 wait_ms
000000ea l       .text	00000000 multi_inject_pulse_s
000002fa l       .text	00000000 wait_10us
000000fc l       .text	00000000 multi_inject_pulse_e_1
00000100 l       .text	00000000 multi_inject_pulse_e_2
00000112 l       .text	00000000 coarse_inject_e
0000015c l       .text	00000000 measure_verify_s
000001d8 l       .text	00000000 measure_verify_skip
000001ca l       .text	00000000 status_1
000001de l       .text	00000000 measure_verify_e
000001f2 l       .text	00000000 Pulse_w_cal_s
00000254 l       .text	00000000 No_calculation
00000216 l       .text	00000000 Istart_1
0000025a l       .text	00000000 Pulse_w_cal_e
00000278 l       .text	00000000 block_measure_s
000002da l       .text	00000000 block_measure_e
000002ee l       .text	00000000 wait_ms_loop
00000300 l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 0d43b012 00003f40 0a000d43 b0120000  .C....?@...C....
 0060 b0120000 b0120000 1f830124 f63fb740  ...........$.?.@
 0070 33330000 2753874a 00002753 0d43b012  33..'S.J..'S.C..
 0080 0000b743 00008243 5800403d 3b400070  ...C...CX.@=;@.p
 0090 2c4bb240 00800c0b b24004be 6401b240  ,K.@.....@..d..@
 00a0 24006001 b2430e0b 2b53a24b 080b2b53  $.`..C..+S.K..+S
 00b0 a24b0a0b 2b532b53 2b53284b 08932624  .K..+S+S+S(K..&$
 00c0 b240004a 020bb240 6000100b b2406000  .@.J...@`....@`.
 00d0 120bb240 6600000b b2401400 60012543  ...@f....@..`.%C
 00e0 b0120000 b2402600 000b3540 0300b012  .....@&...5@....
 00f0 00003a50 03001883 0124f73f bb430000  ..:P.....$.?.C..
 0100 b2406600 000b1543 b0120000 1c830124  .@f....C.......$
 0110 cb3fa242 60012543 b0120000 b2402400  .?.B`.%C.....@$.
 0120 60011543 b0120000 a2430e0b b2404000  `..C.....C...@@.
 0130 100bb240 4000120b 1543b012 00003041  ...@@....C....0A
 0140 3b400070 2c4bb240 00800c0b b24004be  ;@.p,K.@.....@..
 0150 6401b240 24006001 a2430e0b 2b53a24b  d..@$.`..C..+S.K
 0160 080b2b53 a24b0a0b 2b53284b 3880f401  ..+S.K..+S(K8...
 0170 2b532b53 294b0993 2f24824d 020bb240  +S+S)K../$.M...@
 0180 4000100b b2404000 120bb240 6600000b  @....@@....@f...
 0190 2543b012 0000b240 a400000b 35400a00  %C.....@....5@..
 01a0 b0120000 b24000b0 0c0b3540 0500b012  .....@....5@....
 01b0 00008243 040b1942 040bb240 00800c0b  ...C...B...@....
 01c0 09980330 8b430000 073c2b83 3850c800  ...0.C...<+.8P..
 01d0 08898b48 00002b53 1c830124 bf3fb240  ...H..+S...$.?.@
 01e0 6600000b b2402400 60013041 3b400070  f....@$.`.0A;@.p
 01f0 2c4b2b53 2b532b53 284b3880 2c012b53  ,K+S+S+S(K8.,.+S
 0200 294b2b53 2e4b0e93 25240889 38909011  )K+S.K..%$..8...
 0210 02343840 90113880 90110958 08100810  .48@..8....X....
 0220 08100810 08100810 38c000ff 086818c3  ........8....h..
 0230 38500068 09100910 09100910 09100910  8P.h............
 0240 39c000ff 096919c3 39500068 2e492e88  9....i..9P.h.I..
 0250 8b4e0000 1c830124 cc3f3041 3b400070  .N.....$.?0A;@.p
 0260 2c4bb240 00800c0b b24004be 6401b240  ,K.@.....@..d..@
 0270 24006001 a2430e0b 2b53a24b 080b2b53  $.`..C..+S.K..+S
 0280 a24b0a0b 2b532b53 2b53824d 020bb240  .K..+S+S+S.M...@
 0290 4000100b b2404000 120bb240 6600000b  @....@@....@f...
 02a0 2543b012 0000b240 a400000b 35400a00  %C.....@....5@..
 02b0 b0120000 b24000b0 0c0b3540 0500b012  .....@....5@....
 02c0 00008243 040b9742 040b0000 2753b240  ...C...B....'S.@
 02d0 00800c0b 1c830124 cf3fb240 6600000b  .......$.?.@f...
 02e0 b2402400 60013041 3440fc0c 06441683  .@$.`.0A4@...D..
 02f0 fe230644 1583fb23 30413440 22000644  .#.D...#0A4@"..D
 0300 1683fe23 06441583 fb233041 82435800  ...#.D...#0A.CX.
 0310 03433043                             .C0C            
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	0d 43       	clr	r13		
  52:	b0 12 00 00 	call	#0x0000	
			54: R_MSP430_16_BYTE	.text+0x25c
  56:	3f 40 0a 00 	mov	#10,	r15	;#0x000a

0000005a <coarse_loop_s>:
  5a:	0d 43       	clr	r13		
  5c:	b0 12 00 00 	call	#0x0000	
			5e: R_MSP430_16_BYTE	.text+0x140
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x1ec
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0x8c
  68:	1f 83       	dec	r15		
  6a:	01 24       	jz	$+4      	;abs 0x6e
  6c:	f6 3f       	jmp	$-18     	;abs 0x5a

0000006e <coarse_loop_e>:
  6e:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  72:	00 00 
  74:	27 53       	incd	r7		
  76:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  7a:	27 53       	incd	r7		
  7c:	0d 43       	clr	r13		
  7e:	b0 12 00 00 	call	#0x0000	
			80: R_MSP430_16_BYTE	.text+0x25c
  82:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  86:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  8a:	40 3d       	jmp	$+642    	;abs 0x30c

0000008c <coarse_inject>:
  8c:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  90:	2c 4b       	mov	@r11,	r12	
  92:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  96:	0c 0b 
  98:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  9c:	64 01 
  9e:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  a2:	60 01 
  a4:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000a8 <coarse_inject_set_s>:
  a8:	2b 53       	incd	r11		
  aa:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  ae:	2b 53       	incd	r11		
  b0:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  b4:	2b 53       	incd	r11		
  b6:	2b 53       	incd	r11		
  b8:	2b 53       	incd	r11		
  ba:	28 4b       	mov	@r11,	r8	
  bc:	08 93       	tst	r8		
  be:	26 24       	jz	$+78     	;abs 0x10c
  c0:	b2 40 00 4a 	mov	#18944,	&0x0b02	;#0x4a00
  c4:	02 0b 
  c6:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  ca:	10 0b 
  cc:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  d0:	12 0b 
  d2:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  d6:	00 0b 
  d8:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  dc:	60 01 
  de:	25 43       	mov	#2,	r5	;r3 As==10
  e0:	b0 12 00 00 	call	#0x0000	
			e2: R_MSP430_16_BYTE	.text+0x2e8
  e4:	b2 40 26 00 	mov	#38,	&0x0b00	;#0x0026
  e8:	00 0b 

000000ea <multi_inject_pulse_s>:
  ea:	35 40 03 00 	mov	#3,	r5	;#0x0003
  ee:	b0 12 00 00 	call	#0x0000	
			f0: R_MSP430_16_BYTE	.text+0x2fa
  f2:	3a 50 03 00 	add	#3,	r10	;#0x0003
  f6:	18 83       	dec	r8		
  f8:	01 24       	jz	$+4      	;abs 0xfc
  fa:	f7 3f       	jmp	$-16     	;abs 0xea

000000fc <multi_inject_pulse_e_1>:
  fc:	bb 43 00 00 	mov	#-1,	0(r11)	;r3 As==11, 0x0000(r11)

00000100 <multi_inject_pulse_e_2>:
 100:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 104:	00 0b 
 106:	15 43       	mov	#1,	r5	;r3 As==01
 108:	b0 12 00 00 	call	#0x0000	
			10a: R_MSP430_16_BYTE	.text+0x2e8

0000010c <coarse_inject_skip>:
 10c:	1c 83       	dec	r12		
 10e:	01 24       	jz	$+4      	;abs 0x112
 110:	cb 3f       	jmp	$-104    	;abs 0xa8

00000112 <coarse_inject_e>:
 112:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 116:	25 43       	mov	#2,	r5	;r3 As==10
 118:	b0 12 00 00 	call	#0x0000	
			11a: R_MSP430_16_BYTE	.text+0x2e8
 11c:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 120:	60 01 
 122:	15 43       	mov	#1,	r5	;r3 As==01
 124:	b0 12 00 00 	call	#0x0000	
			126: R_MSP430_16_BYTE	.text+0x2e8
 128:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 12c:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 130:	10 0b 
 132:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 136:	12 0b 
 138:	15 43       	mov	#1,	r5	;r3 As==01
 13a:	b0 12 00 00 	call	#0x0000	
			13c: R_MSP430_16_BYTE	.text+0x2e8
 13e:	30 41       	ret			

00000140 <measure_verify>:
 140:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 144:	2c 4b       	mov	@r11,	r12	
 146:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 14a:	0c 0b 
 14c:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 150:	64 01 
 152:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 156:	60 01 
 158:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000015c <measure_verify_s>:
 15c:	2b 53       	incd	r11		
 15e:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 162:	2b 53       	incd	r11		
 164:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 168:	2b 53       	incd	r11		
 16a:	28 4b       	mov	@r11,	r8	
 16c:	38 80 f4 01 	sub	#500,	r8	;#0x01f4
 170:	2b 53       	incd	r11		
 172:	2b 53       	incd	r11		
 174:	29 4b       	mov	@r11,	r9	
 176:	09 93       	tst	r9		
 178:	2f 24       	jz	$+96     	;abs 0x1d8
 17a:	82 4d 02 0b 	mov	r13,	&0x0b02	
 17e:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 182:	10 0b 
 184:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 188:	12 0b 
 18a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 18e:	00 0b 
 190:	25 43       	mov	#2,	r5	;r3 As==10
 192:	b0 12 00 00 	call	#0x0000	
			194: R_MSP430_16_BYTE	.text+0x2e8
 196:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 19a:	00 0b 
 19c:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1a0:	b0 12 00 00 	call	#0x0000	
			1a2: R_MSP430_16_BYTE	.text+0x2e8
 1a4:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 1a8:	0c 0b 
 1aa:	35 40 05 00 	mov	#5,	r5	;#0x0005
 1ae:	b0 12 00 00 	call	#0x0000	
			1b0: R_MSP430_16_BYTE	.text+0x2e8
 1b2:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1b6:	19 42 04 0b 	mov	&0x0b04,r9	
 1ba:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1be:	0c 0b 
 1c0:	09 98       	cmp	r8,	r9	
 1c2:	03 30       	jn	$+8      	;abs 0x1ca
 1c4:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1c8:	07 3c       	jmp	$+16     	;abs 0x1d8

000001ca <status_1>:
 1ca:	2b 83       	decd	r11		
 1cc:	38 50 c8 00 	add	#200,	r8	;#0x00c8
 1d0:	08 89       	sub	r9,	r8	
 1d2:	8b 48 00 00 	mov	r8,	0(r11)	;0x0000(r11)
 1d6:	2b 53       	incd	r11		

000001d8 <measure_verify_skip>:
 1d8:	1c 83       	dec	r12		
 1da:	01 24       	jz	$+4      	;abs 0x1de
 1dc:	bf 3f       	jmp	$-128    	;abs 0x15c

000001de <measure_verify_e>:
 1de:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1e2:	00 0b 
 1e4:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 1e8:	60 01 
 1ea:	30 41       	ret			

000001ec <Pulse_w_calculate>:
 1ec:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 1f0:	2c 4b       	mov	@r11,	r12	

000001f2 <Pulse_w_cal_s>:
 1f2:	2b 53       	incd	r11		
 1f4:	2b 53       	incd	r11		
 1f6:	2b 53       	incd	r11		
 1f8:	28 4b       	mov	@r11,	r8	
 1fa:	38 80 2c 01 	sub	#300,	r8	;#0x012c
 1fe:	2b 53       	incd	r11		
 200:	29 4b       	mov	@r11,	r9	
 202:	2b 53       	incd	r11		
 204:	2e 4b       	mov	@r11,	r14	
 206:	0e 93       	tst	r14		
 208:	25 24       	jz	$+76     	;abs 0x254
 20a:	08 89       	sub	r9,	r8	
 20c:	38 90 90 11 	cmp	#4496,	r8	;#0x1190
 210:	02 34       	jge	$+6      	;abs 0x216
 212:	38 40 90 11 	mov	#4496,	r8	;#0x1190

00000216 <Istart_1>:
 216:	38 80 90 11 	sub	#4496,	r8	;#0x1190
 21a:	09 58       	add	r8,	r9	
 21c:	08 10       	rrc	r8		
 21e:	08 10       	rrc	r8		
 220:	08 10       	rrc	r8		
 222:	08 10       	rrc	r8		
 224:	08 10       	rrc	r8		
 226:	08 10       	rrc	r8		
 228:	38 c0 00 ff 	bic	#-256,	r8	;#0xff00
 22c:	08 68       	rlc	r8		
 22e:	18 c3       	bic	#1,	r8	;r3 As==01
 230:	38 50 00 68 	add	#26624,	r8	;#0x6800
 234:	09 10       	rrc	r9		
 236:	09 10       	rrc	r9		
 238:	09 10       	rrc	r9		
 23a:	09 10       	rrc	r9		
 23c:	09 10       	rrc	r9		
 23e:	09 10       	rrc	r9		
 240:	39 c0 00 ff 	bic	#-256,	r9	;#0xff00
 244:	09 69       	rlc	r9		
 246:	19 c3       	bic	#1,	r9	;r3 As==01
 248:	39 50 00 68 	add	#26624,	r9	;#0x6800
 24c:	2e 49       	mov	@r9,	r14	
 24e:	2e 88       	sub	@r8,	r14	
 250:	8b 4e 00 00 	mov	r14,	0(r11)	;0x0000(r11)

00000254 <No_calculation>:
 254:	1c 83       	dec	r12		
 256:	01 24       	jz	$+4      	;abs 0x25a
 258:	cc 3f       	jmp	$-102    	;abs 0x1f2

0000025a <Pulse_w_cal_e>:
 25a:	30 41       	ret			

0000025c <block_measure>:
 25c:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 260:	2c 4b       	mov	@r11,	r12	
 262:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 266:	0c 0b 
 268:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 26c:	64 01 
 26e:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 272:	60 01 
 274:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

00000278 <block_measure_s>:
 278:	2b 53       	incd	r11		
 27a:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 27e:	2b 53       	incd	r11		
 280:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 284:	2b 53       	incd	r11		
 286:	2b 53       	incd	r11		
 288:	2b 53       	incd	r11		
 28a:	82 4d 02 0b 	mov	r13,	&0x0b02	
 28e:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 292:	10 0b 
 294:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 298:	12 0b 
 29a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 29e:	00 0b 
 2a0:	25 43       	mov	#2,	r5	;r3 As==10
 2a2:	b0 12 00 00 	call	#0x0000	
			2a4: R_MSP430_16_BYTE	.text+0x2e8
 2a6:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 2aa:	00 0b 
 2ac:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2b0:	b0 12 00 00 	call	#0x0000	
			2b2: R_MSP430_16_BYTE	.text+0x2e8
 2b4:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 2b8:	0c 0b 
 2ba:	35 40 05 00 	mov	#5,	r5	;#0x0005
 2be:	b0 12 00 00 	call	#0x0000	
			2c0: R_MSP430_16_BYTE	.text+0x2e8
 2c2:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 2c6:	97 42 04 0b 	mov	&0x0b04,0(r7)	;0x0000(r7)
 2ca:	00 00 
 2cc:	27 53       	incd	r7		
 2ce:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 2d2:	0c 0b 
 2d4:	1c 83       	dec	r12		
 2d6:	01 24       	jz	$+4      	;abs 0x2da
 2d8:	cf 3f       	jmp	$-96     	;abs 0x278

000002da <block_measure_e>:
 2da:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 2de:	00 0b 
 2e0:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 2e4:	60 01 
 2e6:	30 41       	ret			

000002e8 <wait_ms>:
 2e8:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 2ec:	06 44       	mov	r4,	r6	

000002ee <wait_ms_loop>:
 2ee:	16 83       	dec	r6		
 2f0:	fe 23       	jnz	$-2      	;abs 0x2ee
 2f2:	06 44       	mov	r4,	r6	
 2f4:	15 83       	dec	r5		
 2f6:	fb 23       	jnz	$-8      	;abs 0x2ee
 2f8:	30 41       	ret			

000002fa <wait_10us>:
 2fa:	34 40 22 00 	mov	#34,	r4	;#0x0022
 2fe:	06 44       	mov	r4,	r6	

00000300 <wait_10us_loop>:
 300:	16 83       	dec	r6		
 302:	fe 23       	jnz	$-2      	;abs 0x300
 304:	06 44       	mov	r4,	r6	
 306:	15 83       	dec	r5		
 308:	fb 23       	jnz	$-8      	;abs 0x300
 30a:	30 41       	ret			

0000030c <end_of_test>:
 30c:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 310:	03 43       	nop			
 312:	30 43       	br	#-1		;r3 As==11
