GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	
   3               	.global main
   4               	
   5               	main:
   6 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
   7 0004 3740 0050 		mov	#0x5000, r7
   8 0008 0A43      		mov	#0, r10			; Initialize time
   9 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  10               	init_wait:
  11 000e 1583      	        dec.w   r5 
  12 0010 FE23      	        jnz     init_wait
  13 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  13      5800 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 6


  14 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  14      2001 
  15 001e 32C2      		dint
  16 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  17 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  17      6401 
  18 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  18      000B 
  19 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  19      6001 
  20 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  20      0C0B 
  21 003c 8243 080B 		mov     #0,    &ROW_SEL
  22 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  23 0044 874A 0000 		mov	r10, @r7
  24 0048 2753      		incd	r7
  25 004a 874A 0000 		mov	r10, @r7
  26 004e 2753      		incd	r7
  27 0050 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  28 0052 B012 0000 		call	#block_measure
  29               	
  30               		;mov	#1, r15
  31               		;mov	#10, r15
  32               		;mov	#30, r15
  33               		;mov	#40, r15
  34 0056 3F40 3200 		mov	#50, r15
  35               	fine_loop_s:
  36 005a 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  37 005c B012 0000 		call	#measure_verify
  38 0060 B012 0000 		call	#Vd_calculate
  39 0064 B012 0000 		call	#fine_inject
  40 0068 B740 3333 		mov     #0x3333, @r7	        ; Record Injection 0x3333 
  40      0000 
  41 006e 2753      		incd	r7
  42 0070 874A 0000 		mov     r10, @r7	        ; Record time 
  43 0074 2753      		incd	r7
  44 0076 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  45 0078 B012 0000 		call	#block_measure
  46 007c 1F83      	        dec.w   r15
  47 007e 0124      	        jz      fine_loop_e
  48 0080 EC3F      		jmp	fine_loop_s
  49               	fine_loop_e:
  50               	
  51 0082 3F40 1F00 		mov	#31, r15
  52               	last_measure_loop_s:
  53 0086 B740 3333 		mov     #0x3333, @r7	        ; Record Injection 0x3333 
  53      0000 
  54 008c 2753      		incd	r7
  55 008e 874A 0000 		mov     r10, @r7	        ; Record time 
  56 0092 2753      		incd	r7
  57 0094 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  58 0096 B012 0000 		call	#block_measure
  59 009a 1F83      	        dec.w   r15
  60 009c 0124      	        jz      last_measure_loop_e
  61 009e F33F      		jmp	last_measure_loop_s
  62               	last_measure_loop_e:
  63               	
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 7


  64 00a0 B743 0000 		mov	#0xFFFF, @r7		; Data End
  65 00a4 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
  66 00a8 523D      		jmp     end_of_test
  67               	
  68               	fine_inject:
  69 00aa 3B40 0070 		mov	#0x7000, r11
  70 00ae 2C4B      		mov	@r11, r12		; No. of FGs 
  71 00b0 B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  71      0C0B 
  72 00b6 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  72      6401 
  73 00bc B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  73      6001 
  74 00c2 B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  75               	fine_inject_set_s:
  76 00c6 2B53      		incd	r11
  77 00c8 A24B 080B 		mov     @r11,    &ROW_SEL
  78 00cc 2B53      		incd	r11
  79 00ce A24B 0A0B 	        mov     @r11,    &COL_SEL
  80 00d2 2B53      		incd	r11
  81 00d4 2B53      		incd	r11
  82 00d6 2B53      		incd	r11
  83 00d8 284B      	        mov     @r11,    r8		; Read Vd
  84 00da 0893      		cmp	#0x0000, r8
  85 00dc 1F24      		jeq	fine_inject_skip
  86               		;mov	#0x0040, &GATE_S	; gate_s = 0V	
  87               		;mov	#0x0000, &GATE_S	; gate_s = 2.5V @ IVDD 6.0V	
  88               		;mov	#0x0800, &GATE_S	; gate_s = 2.6V @ IVDD 6.0V	
  89               		;mov	#0x1000, &GATE_S	; gate_s = 2.7V @ IVDD 6.0V	
  90               		;mov	#0x1800, &GATE_S	; gate_s = 2.8V @ IVDD 6.0V	
  91               		;mov	#0x2200, &GATE_S	; gate_s = 2.9V @ IVDD 6.0V	
  92               		;mov	#0x2a00, &GATE_S	; gate_s = 3.0V @ IVDD 6.0V	
  93               		;mov	#0x3200, &GATE_S	; gate_s = 3.1V @ IVDD 6.0V	
  94               		;mov	#0x3600, &GATE_S	; gate_s = 3.15V @ IVDD 6.0V	
  95               		;mov	#0x3a00, &GATE_S	; gate_s = 3.2V @ IVDD 6.0V	
  96               		;mov	#0x4000, &GATE_S	; gate_s = 3.26V @ IVDD 6.0V	
  97               		;mov	#0x4200, &GATE_S	; gate_s = 3.3V @ IVDD 6.0V	
  98 00de B240 004A 		mov	#0x4a00, &GATE_S	; gate_s = 3.4V @ IVDD 6.0V	
  98      020B 
  99               		;mov	#0x4c00, &GATE_S
 100               		;mov	#0x5000, &GATE_S	; gate_s = 3.5V @ IVDD 6.0V	
 101               		;mov	#0x5200, &GATE_S
 102               		;mov	#0x5a00, &GATE_S	; gate_s = 3.6V @ IVDD 6.0V	
 103               		;mov	#0x6200, &GATE_S	; gate_s = 3.7V @ IVDD 6.0V	
 104               		;mov	#0x6a00, &GATE_S	; gate_s = 3.8V @ IVDD 6.0V	
 105 00e4 B240 6000 	        mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
 105      100B 
 106 00ea B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
 106      120B 
 107 00f0 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 107      000B 
 108 00f6 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
 108      6001 
 109 00fc 2543      		mov     #2, r5             	; Number of ms
 110 00fe B012 0000 		call    #wait_ms                ; Call the waiting function
 111               		;mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e:
 112 0102 8248 000B 		mov 	r8, &DRAIN_CTRL	
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 8


 113               	        ;mov     #1, r5         		; Number of 10us to inject
 114 0106 3540 0700 	        mov     #7, r5         		; Number of 10us to inject
 115 010a B012 0000 		call    #wait_10us             	; Call the waiting function
 116 010e 1A53      		add     #1, r10	        	; Calculate time
 117               		;add     #20, r10	        	; Calculate time
 118 0110 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 118      000B 
 119 0116 1543      		mov     #1, r5             	; Number of ms
 120 0118 B012 0000 		call    #wait_ms                ; Call the waiting function
 121               	fine_inject_skip:
 122 011c 1C83      	       	dec.w   r12
 123 011e 0124      	        jz      fine_inject_e
 124 0120 D23F      	 	jmp	fine_inject_set_s
 125               	fine_inject_e:
 126 0122 A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
 127 0126 2543      		mov     #2, r5             	; Number of ms
 128 0128 B012 0000 		call    #wait_ms                ; Call the waiting function
 129 012c B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 129      6001 
 130 0132 1543      		mov     #1, r5             	; Number of ms
 131 0134 B012 0000 		call    #wait_ms                ; Call the waiting function
 132 0138 A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 133 013c B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 133      100B 
 134 0142 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 134      120B 
 135 0148 1543      		mov     #1, r5             	; Number of ms
 136 014a B012 0000 		call    #wait_ms                ; Call the waiting function
 137 014e 3041      		ret
 138               	
 139               	measure_verify:
 140 0150 3B40 0070 		mov	#0x7000, r11
 141 0154 2C4B      		mov	@r11, r12		; No. of FGs 
 142 0156 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 142      0C0B 
 143 015c B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 143      6401 
 144 0162 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 144      6001 
 145 0168 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 146               	measure_verify_s:
 147 016c 2B53      		incd	r11
 148 016e A24B 080B 		mov     @r11,    &ROW_SEL
 149 0172 2B53      		incd	r11
 150 0174 A24B 0A0B 	        mov     @r11,    &COL_SEL
 151 0178 2B53      		incd	r11
 152               	;	mov	@r11, r8
 153 017a 2B53      		incd	r11
 154 017c 2B53      		incd	r11
 155 017e 294B      		mov	@r11, r9		; Read Vd
 156 0180 0993      		cmp	#0x0000, r9
 157 0182 3F24      		jeq	measure_verify_skip
 158 0184 824D 020B 		mov 	r13, &GATE_S
 159 0188 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 159      100B 
 160 018e B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 160      120B 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 9


 161 0194 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 161      000B 
 162 019a 2543      	        mov     #2, r5             	; Number of ms
 163 019c B012 0000 		call    #wait_ms                ; Call the waiting function
 164 01a0 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 164      000B 
 165 01a6 3540 0A00 	        mov     #10, r5             	; Number of ms
 166 01aa B012 0000 	        call    #wait_ms                ; Call the waiting function
 167               	
 168 01ae 2E42      		mov	#4, r14			; # for current measure average 
 169 01b0 0943      		mov	#0, r9
 170               	measure_v9_average_s:
 171 01b2 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 171      0C0B 
 172 01b8 3540 0500 	        mov     #5, r5             	; Number of ms
 173 01bc B012 0000 		call    #wait_ms                ; Call the waiting function
 174 01c0 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 175               		;mov     &ADC, r9	        ; Get value in counter
 176 01c4 1952 040B 		add     &ADC, r9	        ; Get value in counter
 177 01c8 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 177      0C0B 
 178 01ce 3540 0A00 	        mov     #10, r5             	; Number of ms
 179 01d2 B012 0000 	        call    #wait_10us                ; Call the waiting function
 180 01d6 1E83      		dec.w   r14
 181 01d8 0124      	        jz      measure_v9_average_e
 182 01da EB3F      		jmp	measure_v9_average_s
 183               	measure_v9_average_e:
 184 01dc 0910      		rrc	r9
 185 01de 0910      		rrc	r9
 186 01e0 39C0 00C0 		bic	#0xc000, r9
 187               	
 188 01e4 2B83      		decd	r11
 189 01e6 2B83      		decd	r11
 190 01e8 284B      		mov	@r11, r8
 191 01ea 2B53      		incd	r11
 192 01ec 2B53      		incd	r11
 193               	
 194 01ee 0998      		cmp	r8, r9
 195 01f0 0330      		jn	status_1
 196 01f2 8B43 0000 		mov	#0x0000, @r11		; Injection over
 197 01f6 053C      		jmp	measure_verify_skip	
 198               	status_1:
 199 01f8 2B83      		decd	r11
 200 01fa 0889      		sub	r9, r8
 201 01fc 8B48 0000 		mov	r8, @r11
 202 0200 2B53      		incd	r11
 203               	measure_verify_skip:
 204 0202 1C83      	        dec.w   r12
 205 0204 0124      	        jz      measure_verify_e
 206 0206 B23F      		jmp	measure_verify_s
 207               	measure_verify_e:
 208 0208 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 208      000B 
 209 020e B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 209      6001 
 210 0214 3041      		ret
 211               	
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 10


 212               	Vd_calculate:
 213 0216 3B40 0070 		mov	#0x7000, r11
 214 021a 2C4B      		mov	@r11, r12		; No. of FGs 
 215               	Vd_cal_s:
 216 021c 2B53      		incd	r11			; @ Row_Sel
 217 021e 2B53      		incd	r11			; @ Col_Sel
 218 0220 2B53      		incd	r11	
 219 0222 284B      		mov	@r11, r8		; @ Target
 220 0224 2B53      		incd	r11	
 221 0226 294B      		mov	@r11, r9		; @ diff_for_Vd2
 222 0228 2B53      		incd	r11		
 223 022a 2E4B      		mov	@r11, r14		; @ Vd 
 224 022c 0E93      		cmp	#0x0000, r14
 225 022e 2524      		jeq	No_calculation
 226 0230 0889      		sub	r9, r8			; r8 = r8(target)-r9(diff) = Istart
 227 0232 3880 9011 		sub	#0x1190, r8		; r8 = r8(Istart)-0x1190(1nA) = diff_for_Vd1
 228 0236 0893      		cmp	#0, r8		        ; If r8(Vd1) < 0,
 229 0238 0134      		jge	Jump_r8_0
 230 023a 0843      		mov	#0, r8  		; r8 = 0
 231               	Jump_r8_0:
 232 023c 0810      		rrc	r8
 233 023e 0810      		rrc	r8
 234 0240 0810      		rrc	r8
 235 0242 0810      		rrc	r8
 236 0244 0810      		rrc	r8
 237 0246 0810      		rrc	r8	
 238 0248 0810      		rrc	r8	
 239 024a 38C0 80FF 		bic	#0xff80, r8
 240 024e 0910      		rrc	r9
 241 0250 0910      		rrc	r9
 242 0252 0910      		rrc	r9
 243 0254 39C0 00FF 		bic	#0xff00, r9
 244 0258 3950 2E00 		add	#46, r9                 ; Vd table offset
 245 025c 0988      	        sub     r8, r9
 246 025e 0993      	        cmp	#0, r9		        ; If r8(Vd1) < 0,
 247 0260 0134      		jge	Jump_r9_0
 248 0262 0943      		mov	#0, r9  		; r8 = 0
 249               	Jump_r9_0:
 250 0264 0969      	        rlc	r9
 251 0266 19C3      		bic	#0x0001, r9
 252 0268 3950 0068 		add	#0x6800, r9
 253               	
 254 026c 2B83      		decd	r11
 255 026e 8B49 0000 		mov	r9, @r11
 256               	;	decd	r11
 257               	;	mov	r8, @r11
 258               	;	incd	r11
 259 0272 2B53      		incd	r11
 260               	
 261 0274 2E49      	 	mov	@r9, r14
 262 0276 8B4E 0000 		mov	r14, @r11
 263               	No_calculation:
 264 027a 1C83      	        dec.w   r12
 265 027c 0124      	        jz      Vd_cal_e
 266 027e CE3F      		jmp	Vd_cal_s
 267               	Vd_cal_e:
 268 0280 3041      		ret
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 11


 269               	
 270               	block_measure:
 271 0282 3B40 0070 		mov	#0x7000, r11
 272 0286 2C4B      		mov	@r11, r12		; No. of FGs 
 273 0288 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 273      0C0B 
 274 028e B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 274      6401 
 275 0294 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 275      6001 
 276 029a A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 277               	block_measure_s:
 278 029e 2B53      		incd	r11
 279 02a0 A24B 080B 		mov     @r11,    &ROW_SEL
 280 02a4 2B53      		incd	r11
 281 02a6 A24B 0A0B 	        mov     @r11,    &COL_SEL
 282 02aa 2B53      		incd	r11
 283 02ac 2B53      		incd	r11
 284 02ae 2B53      		incd	r11
 285 02b0 824D 020B 		mov 	r13, &GATE_S
 286 02b4 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 286      100B 
 287 02ba B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 287      120B 
 288 02c0 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 288      000B 
 289 02c6 2543      	        mov     #2, r5             	; Number of ms
 290 02c8 B012 0000 		call    #wait_ms                ; Call the waiting function
 291 02cc B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 291      000B 
 292 02d2 3540 0A00 	        mov     #10, r5             	; Number of ms
 293 02d6 B012 0000 	        call    #wait_ms                ; Call the waiting function
 294               	
 295 02da 2E42      		mov	#4, r14			; # for current measure average 
 296 02dc 0943      		mov	#0, r9
 297               	measure_9_average_s:
 298 02de B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 298      0C0B 
 299 02e4 3540 0500 	        mov     #5, r5             	; Number of ms
 300 02e8 B012 0000 		call    #wait_ms                ; Call the waiting function
 301 02ec 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 302               		;mov     &ADC, r9	        ; Get value in counter
 303 02f0 1952 040B 		add     &ADC, r9	        ; Get value in counter
 304 02f4 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 304      0C0B 
 305 02fa 3540 0A00 	        mov     #10, r5             	; Number of ms
 306 02fe B012 0000 	        call    #wait_10us                ; Call the waiting function
 307 0302 1E83      		dec.w   r14
 308 0304 0124      	        jz      measure_9_average_e
 309 0306 EB3F      		jmp	measure_9_average_s
 310               	measure_9_average_e:
 311 0308 0910      		rrc	r9
 312 030a 0910      		rrc	r9
 313 030c 39C0 00C0 		bic	#0xc000, r9
 314               	
 315 0310 8749 0000 		mov     r9, @r7			; Get value in counter
 316 0314 2753      		incd	r7
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 12


 317 0316 1C83      	        dec.w   r12
 318 0318 0124      	        jz      block_measure_e
 319 031a C13F      		jmp	block_measure_s
 320               	block_measure_e:
 321 031c B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 321      000B 
 322 0322 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 322      6001 
 323 0328 3041      		ret
 324               	
 325               	wait_ms:
 326 032a 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 327 032e 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 328               	wait_ms_loop:
 329 0330 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 330 0332 FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 331 0334 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 332 0336 1583      	        dec.w   r5                      ; Decrement number of ms total
 333 0338 FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
 334 033a 3041      	        ret    
 335               	 
 336               	wait_10us:
 337 033c 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
 338 0340 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 339               	wait_10us_loop:
 340 0342 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 341 0344 FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 342 0346 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 343 0348 1583      	        dec.w   r5                      ; Decrement number of ms total
 344 034a FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 345 034c 3041      	        ret   
 346               	
 347               	end_of_test:
 348 034e 8243 5800 		mov	#0x0000, &BCSCTL2
 349 0352 0343      		nop
 350 0354 3043      		br #0xffff
 351               	
 352               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 353               	.section .vectors, "a"
 354 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 355 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 356 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 357 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 358 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 359 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 360 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 361 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 362 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
 363 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 364 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 365 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 366 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 367 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
 368 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
 369 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 13


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 14


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 15


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43 			page 16


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:5      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:10     .text:0000000e init_wait
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:270    .text:00000282 block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:35     .text:0000005a fine_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:139    .text:00000150 measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:212    .text:00000216 Vd_calculate
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:68     .text:000000aa fine_inject
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:49     .text:00000082 fine_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:52     .text:00000086 last_measure_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:62     .text:000000a0 last_measure_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:347    .text:0000034e end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:75     .text:000000c6 fine_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:121    .text:0000011c fine_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:325    .text:0000032a wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:336    .text:0000033c wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:125    .text:00000122 fine_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:146    .text:0000016c measure_verify_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:203    .text:00000202 measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:170    .text:000001b2 measure_v9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:183    .text:000001dc measure_v9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:198    .text:000001f8 status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:207    .text:00000208 measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:215    .text:0000021c Vd_cal_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:263    .text:0000027a No_calculation
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:231    .text:0000023c Jump_r8_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:249    .text:00000264 Jump_r9_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:267    .text:00000280 Vd_cal_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:277    .text:0000029e block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:297    .text:000002de measure_9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:310    .text:00000308 measure_9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:320    .text:0000031c block_measure_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:328    .text:00000330 wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_subVt_m_ave_04_CAB_ota_ref.s43:339    .text:00000342 wait_10us_loop

NO UNDEFINED SYMBOLS

prog_5.o:     file format elf32-msp430
prog_5.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000356  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  0000038a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000038a  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  0000038a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
0000000e l       .text	00000000 init_wait
00000282 l       .text	00000000 block_measure
0000005a l       .text	00000000 fine_loop_s
00000150 l       .text	00000000 measure_verify
00000216 l       .text	00000000 Vd_calculate
000000aa l       .text	00000000 fine_inject
00000082 l       .text	00000000 fine_loop_e
00000086 l       .text	00000000 last_measure_loop_s
000000a0 l       .text	00000000 last_measure_loop_e
0000034e l       .text	00000000 end_of_test
000000c6 l       .text	00000000 fine_inject_set_s
0000011c l       .text	00000000 fine_inject_skip
0000032a l       .text	00000000 wait_ms
0000033c l       .text	00000000 wait_10us
00000122 l       .text	00000000 fine_inject_e
0000016c l       .text	00000000 measure_verify_s
00000202 l       .text	00000000 measure_verify_skip
000001b2 l       .text	00000000 measure_v9_average_s
000001dc l       .text	00000000 measure_v9_average_e
000001f8 l       .text	00000000 status_1
00000208 l       .text	00000000 measure_verify_e
0000021c l       .text	00000000 Vd_cal_s
0000027a l       .text	00000000 No_calculation
0000023c l       .text	00000000 Jump_r8_0
00000264 l       .text	00000000 Jump_r9_0
00000280 l       .text	00000000 Vd_cal_e
0000029e l       .text	00000000 block_measure_s
000002de l       .text	00000000 measure_9_average_s
00000308 l       .text	00000000 measure_9_average_e
0000031c l       .text	00000000 block_measure_e
00000330 l       .text	00000000 wait_ms_loop
00000342 l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 0d43b012 00003f40 32000d43 b0120000  .C....?@2..C....
 0060 b0120000 b0120000 b7403333 00002753  .........@33..'S
 0070 874a0000 27530d43 b0120000 1f830124  .J..'S.C.......$
 0080 ec3f3f40 1f00b740 33330000 2753874a  .??@...@33..'S.J
 0090 00002753 0d43b012 00001f83 0124f33f  ..'S.C.......$.?
 00a0 b7430000 82435800 523d3b40 00702c4b  .C...CX.R=;@.p,K
 00b0 b2400080 0c0bb240 04be6401 b2402400  .@.....@..d..@$.
 00c0 6001b243 0e0b2b53 a24b080b 2b53a24b  `..C..+S.K..+S.K
 00d0 0a0b2b53 2b532b53 284b0893 1f24b240  ..+S+S+S(K...$.@
 00e0 004a020b b2406000 100bb240 6000120b  .J...@`....@`...
 00f0 b2406600 000bb240 14006001 2543b012  .@f....@..`.%C..
 0100 00008248 000b3540 0700b012 00001a53  ...H..5@.......S
 0110 b2406600 000b1543 b0120000 1c830124  .@f....C.......$
 0120 d23fa242 60012543 b0120000 b2402400  .?.B`.%C.....@$.
 0130 60011543 b0120000 a2430e0b b2404000  `..C.....C...@@.
 0140 100bb240 4000120b 1543b012 00003041  ...@@....C....0A
 0150 3b400070 2c4bb240 00800c0b b24004be  ;@.p,K.@.....@..
 0160 6401b240 24006001 a2430e0b 2b53a24b  d..@$.`..C..+S.K
 0170 080b2b53 a24b0a0b 2b532b53 2b53294b  ..+S.K..+S+S+S)K
 0180 09933f24 824d020b b2404000 100bb240  ..?$.M...@@....@
 0190 4000120b b2406600 000b2543 b0120000  @....@f...%C....
 01a0 b240a400 000b3540 0a00b012 00002e42  .@....5@.......B
 01b0 0943b240 00b00c0b 35400500 b0120000  .C.@....5@......
 01c0 8243040b 1952040b b2400080 0c0b3540  .C...R...@....5@
 01d0 0a00b012 00001e83 0124eb3f 09100910  .........$.?....
 01e0 39c000c0 2b832b83 284b2b53 2b530998  9...+.+.(K+S+S..
 01f0 03308b43 0000053c 2b830889 8b480000  .0.C...<+....H..
 0200 2b531c83 0124b23f b2406600 000bb240  +S...$.?.@f....@
 0210 24006001 30413b40 00702c4b 2b532b53  $.`.0A;@.p,K+S+S
 0220 2b53284b 2b53294b 2b532e4b 0e932524  +S(K+S)K+S.K..%$
 0230 08893880 90110893 01340843 08100810  ..8......4.C....
 0240 08100810 08100810 081038c0 80ff0910  ..........8.....
 0250 09100910 39c000ff 39502e00 09880993  ....9...9P......
 0260 01340943 096919c3 39500068 2b838b49  .4.C.i..9P.h+..I
 0270 00002b53 2e498b4e 00001c83 0124ce3f  ..+S.I.N.....$.?
 0280 30413b40 00702c4b b2400080 0c0bb240  0A;@.p,K.@.....@
 0290 04be6401 b2402400 6001a243 0e0b2b53  ..d..@$.`..C..+S
 02a0 a24b080b 2b53a24b 0a0b2b53 2b532b53  .K..+S.K..+S+S+S
 02b0 824d020b b2404000 100bb240 4000120b  .M...@@....@@...
 02c0 b2406600 000b2543 b0120000 b240a400  .@f...%C.....@..
 02d0 000b3540 0a00b012 00002e42 0943b240  ..5@.......B.C.@
 02e0 00b00c0b 35400500 b0120000 8243040b  ....5@.......C..
 02f0 1952040b b2400080 0c0b3540 0a00b012  .R...@....5@....
 0300 00001e83 0124eb3f 09100910 39c000c0  .....$.?....9...
 0310 87490000 27531c83 0124c13f b2406600  .I..'S...$.?.@f.
 0320 000bb240 24006001 30413440 fc0c0644  ...@$.`.0A4@...D
 0330 1683fe23 06441583 fb233041 34402200  ...#.D...#0A4@".
 0340 06441683 fe230644 1583fb23 30418243  .D...#.D...#0A.C
 0350 58000343 3043                        X..C0C          
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	0d 43       	clr	r13		
  52:	b0 12 00 00 	call	#0x0000	
			54: R_MSP430_16_BYTE	.text+0x282
  56:	3f 40 32 00 	mov	#50,	r15	;#0x0032

0000005a <fine_loop_s>:
  5a:	0d 43       	clr	r13		
  5c:	b0 12 00 00 	call	#0x0000	
			5e: R_MSP430_16_BYTE	.text+0x150
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x216
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0xaa
  68:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  6c:	00 00 
  6e:	27 53       	incd	r7		
  70:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  74:	27 53       	incd	r7		
  76:	0d 43       	clr	r13		
  78:	b0 12 00 00 	call	#0x0000	
			7a: R_MSP430_16_BYTE	.text+0x282
  7c:	1f 83       	dec	r15		
  7e:	01 24       	jz	$+4      	;abs 0x82
  80:	ec 3f       	jmp	$-38     	;abs 0x5a

00000082 <fine_loop_e>:
  82:	3f 40 1f 00 	mov	#31,	r15	;#0x001f

00000086 <last_measure_loop_s>:
  86:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  8a:	00 00 
  8c:	27 53       	incd	r7		
  8e:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  92:	27 53       	incd	r7		
  94:	0d 43       	clr	r13		
  96:	b0 12 00 00 	call	#0x0000	
			98: R_MSP430_16_BYTE	.text+0x282
  9a:	1f 83       	dec	r15		
  9c:	01 24       	jz	$+4      	;abs 0xa0
  9e:	f3 3f       	jmp	$-24     	;abs 0x86

000000a0 <last_measure_loop_e>:
  a0:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  a4:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  a8:	52 3d       	jmp	$+678    	;abs 0x34e

000000aa <fine_inject>:
  aa:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  ae:	2c 4b       	mov	@r11,	r12	
  b0:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  b4:	0c 0b 
  b6:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  ba:	64 01 
  bc:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  c0:	60 01 
  c2:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000c6 <fine_inject_set_s>:
  c6:	2b 53       	incd	r11		
  c8:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  cc:	2b 53       	incd	r11		
  ce:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  d2:	2b 53       	incd	r11		
  d4:	2b 53       	incd	r11		
  d6:	2b 53       	incd	r11		
  d8:	28 4b       	mov	@r11,	r8	
  da:	08 93       	tst	r8		
  dc:	1f 24       	jz	$+64     	;abs 0x11c
  de:	b2 40 00 4a 	mov	#18944,	&0x0b02	;#0x4a00
  e2:	02 0b 
  e4:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  e8:	10 0b 
  ea:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  ee:	12 0b 
  f0:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  f4:	00 0b 
  f6:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  fa:	60 01 
  fc:	25 43       	mov	#2,	r5	;r3 As==10
  fe:	b0 12 00 00 	call	#0x0000	
			100: R_MSP430_16_BYTE	.text+0x32a
 102:	82 48 00 0b 	mov	r8,	&0x0b00	
 106:	35 40 07 00 	mov	#7,	r5	;#0x0007
 10a:	b0 12 00 00 	call	#0x0000	
			10c: R_MSP430_16_BYTE	.text+0x33c
 10e:	1a 53       	inc	r10		
 110:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 114:	00 0b 
 116:	15 43       	mov	#1,	r5	;r3 As==01
 118:	b0 12 00 00 	call	#0x0000	
			11a: R_MSP430_16_BYTE	.text+0x32a

0000011c <fine_inject_skip>:
 11c:	1c 83       	dec	r12		
 11e:	01 24       	jz	$+4      	;abs 0x122
 120:	d2 3f       	jmp	$-90     	;abs 0xc6

00000122 <fine_inject_e>:
 122:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 126:	25 43       	mov	#2,	r5	;r3 As==10
 128:	b0 12 00 00 	call	#0x0000	
			12a: R_MSP430_16_BYTE	.text+0x32a
 12c:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 130:	60 01 
 132:	15 43       	mov	#1,	r5	;r3 As==01
 134:	b0 12 00 00 	call	#0x0000	
			136: R_MSP430_16_BYTE	.text+0x32a
 138:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 13c:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 140:	10 0b 
 142:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 146:	12 0b 
 148:	15 43       	mov	#1,	r5	;r3 As==01
 14a:	b0 12 00 00 	call	#0x0000	
			14c: R_MSP430_16_BYTE	.text+0x32a
 14e:	30 41       	ret			

00000150 <measure_verify>:
 150:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 154:	2c 4b       	mov	@r11,	r12	
 156:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 15a:	0c 0b 
 15c:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 160:	64 01 
 162:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 166:	60 01 
 168:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000016c <measure_verify_s>:
 16c:	2b 53       	incd	r11		
 16e:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 172:	2b 53       	incd	r11		
 174:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 178:	2b 53       	incd	r11		
 17a:	2b 53       	incd	r11		
 17c:	2b 53       	incd	r11		
 17e:	29 4b       	mov	@r11,	r9	
 180:	09 93       	tst	r9		
 182:	3f 24       	jz	$+128    	;abs 0x202
 184:	82 4d 02 0b 	mov	r13,	&0x0b02	
 188:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 18c:	10 0b 
 18e:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 192:	12 0b 
 194:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 198:	00 0b 
 19a:	25 43       	mov	#2,	r5	;r3 As==10
 19c:	b0 12 00 00 	call	#0x0000	
			19e: R_MSP430_16_BYTE	.text+0x32a
 1a0:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 1a4:	00 0b 
 1a6:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1aa:	b0 12 00 00 	call	#0x0000	
			1ac: R_MSP430_16_BYTE	.text+0x32a
 1ae:	2e 42       	mov	#4,	r14	;r2 As==10
 1b0:	09 43       	clr	r9		

000001b2 <measure_v9_average_s>:
 1b2:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 1b6:	0c 0b 
 1b8:	35 40 05 00 	mov	#5,	r5	;#0x0005
 1bc:	b0 12 00 00 	call	#0x0000	
			1be: R_MSP430_16_BYTE	.text+0x32a
 1c0:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1c4:	19 52 04 0b 	add	&0x0b04,r9	
 1c8:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1cc:	0c 0b 
 1ce:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1d2:	b0 12 00 00 	call	#0x0000	
			1d4: R_MSP430_16_BYTE	.text+0x33c
 1d6:	1e 83       	dec	r14		
 1d8:	01 24       	jz	$+4      	;abs 0x1dc
 1da:	eb 3f       	jmp	$-40     	;abs 0x1b2

000001dc <measure_v9_average_e>:
 1dc:	09 10       	rrc	r9		
 1de:	09 10       	rrc	r9		
 1e0:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 1e4:	2b 83       	decd	r11		
 1e6:	2b 83       	decd	r11		
 1e8:	28 4b       	mov	@r11,	r8	
 1ea:	2b 53       	incd	r11		
 1ec:	2b 53       	incd	r11		
 1ee:	09 98       	cmp	r8,	r9	
 1f0:	03 30       	jn	$+8      	;abs 0x1f8
 1f2:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1f6:	05 3c       	jmp	$+12     	;abs 0x202

000001f8 <status_1>:
 1f8:	2b 83       	decd	r11		
 1fa:	08 89       	sub	r9,	r8	
 1fc:	8b 48 00 00 	mov	r8,	0(r11)	;0x0000(r11)
 200:	2b 53       	incd	r11		

00000202 <measure_verify_skip>:
 202:	1c 83       	dec	r12		
 204:	01 24       	jz	$+4      	;abs 0x208
 206:	b2 3f       	jmp	$-154    	;abs 0x16c

00000208 <measure_verify_e>:
 208:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 20c:	00 0b 
 20e:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 212:	60 01 
 214:	30 41       	ret			

00000216 <Vd_calculate>:
 216:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 21a:	2c 4b       	mov	@r11,	r12	

0000021c <Vd_cal_s>:
 21c:	2b 53       	incd	r11		
 21e:	2b 53       	incd	r11		
 220:	2b 53       	incd	r11		
 222:	28 4b       	mov	@r11,	r8	
 224:	2b 53       	incd	r11		
 226:	29 4b       	mov	@r11,	r9	
 228:	2b 53       	incd	r11		
 22a:	2e 4b       	mov	@r11,	r14	
 22c:	0e 93       	tst	r14		
 22e:	25 24       	jz	$+76     	;abs 0x27a
 230:	08 89       	sub	r9,	r8	
 232:	38 80 90 11 	sub	#4496,	r8	;#0x1190
 236:	08 93       	tst	r8		
 238:	01 34       	jge	$+4      	;abs 0x23c
 23a:	08 43       	clr	r8		

0000023c <Jump_r8_0>:
 23c:	08 10       	rrc	r8		
 23e:	08 10       	rrc	r8		
 240:	08 10       	rrc	r8		
 242:	08 10       	rrc	r8		
 244:	08 10       	rrc	r8		
 246:	08 10       	rrc	r8		
 248:	08 10       	rrc	r8		
 24a:	38 c0 80 ff 	bic	#-128,	r8	;#0xff80
 24e:	09 10       	rrc	r9		
 250:	09 10       	rrc	r9		
 252:	09 10       	rrc	r9		
 254:	39 c0 00 ff 	bic	#-256,	r9	;#0xff00
 258:	39 50 2e 00 	add	#46,	r9	;#0x002e
 25c:	09 88       	sub	r8,	r9	
 25e:	09 93       	tst	r9		
 260:	01 34       	jge	$+4      	;abs 0x264
 262:	09 43       	clr	r9		

00000264 <Jump_r9_0>:
 264:	09 69       	rlc	r9		
 266:	19 c3       	bic	#1,	r9	;r3 As==01
 268:	39 50 00 68 	add	#26624,	r9	;#0x6800
 26c:	2b 83       	decd	r11		
 26e:	8b 49 00 00 	mov	r9,	0(r11)	;0x0000(r11)
 272:	2b 53       	incd	r11		
 274:	2e 49       	mov	@r9,	r14	
 276:	8b 4e 00 00 	mov	r14,	0(r11)	;0x0000(r11)

0000027a <No_calculation>:
 27a:	1c 83       	dec	r12		
 27c:	01 24       	jz	$+4      	;abs 0x280
 27e:	ce 3f       	jmp	$-98     	;abs 0x21c

00000280 <Vd_cal_e>:
 280:	30 41       	ret			

00000282 <block_measure>:
 282:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 286:	2c 4b       	mov	@r11,	r12	
 288:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 28c:	0c 0b 
 28e:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 292:	64 01 
 294:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 298:	60 01 
 29a:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000029e <block_measure_s>:
 29e:	2b 53       	incd	r11		
 2a0:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 2a4:	2b 53       	incd	r11		
 2a6:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 2aa:	2b 53       	incd	r11		
 2ac:	2b 53       	incd	r11		
 2ae:	2b 53       	incd	r11		
 2b0:	82 4d 02 0b 	mov	r13,	&0x0b02	
 2b4:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 2b8:	10 0b 
 2ba:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 2be:	12 0b 
 2c0:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 2c4:	00 0b 
 2c6:	25 43       	mov	#2,	r5	;r3 As==10
 2c8:	b0 12 00 00 	call	#0x0000	
			2ca: R_MSP430_16_BYTE	.text+0x32a
 2cc:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 2d0:	00 0b 
 2d2:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2d6:	b0 12 00 00 	call	#0x0000	
			2d8: R_MSP430_16_BYTE	.text+0x32a
 2da:	2e 42       	mov	#4,	r14	;r2 As==10
 2dc:	09 43       	clr	r9		

000002de <measure_9_average_s>:
 2de:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 2e2:	0c 0b 
 2e4:	35 40 05 00 	mov	#5,	r5	;#0x0005
 2e8:	b0 12 00 00 	call	#0x0000	
			2ea: R_MSP430_16_BYTE	.text+0x32a
 2ec:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 2f0:	19 52 04 0b 	add	&0x0b04,r9	
 2f4:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 2f8:	0c 0b 
 2fa:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2fe:	b0 12 00 00 	call	#0x0000	
			300: R_MSP430_16_BYTE	.text+0x33c
 302:	1e 83       	dec	r14		
 304:	01 24       	jz	$+4      	;abs 0x308
 306:	eb 3f       	jmp	$-40     	;abs 0x2de

00000308 <measure_9_average_e>:
 308:	09 10       	rrc	r9		
 30a:	09 10       	rrc	r9		
 30c:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 310:	87 49 00 00 	mov	r9,	0(r7)	;0x0000(r7)
 314:	27 53       	incd	r7		
 316:	1c 83       	dec	r12		
 318:	01 24       	jz	$+4      	;abs 0x31c
 31a:	c1 3f       	jmp	$-124    	;abs 0x29e

0000031c <block_measure_e>:
 31c:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 320:	00 0b 
 322:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 326:	60 01 
 328:	30 41       	ret			

0000032a <wait_ms>:
 32a:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 32e:	06 44       	mov	r4,	r6	

00000330 <wait_ms_loop>:
 330:	16 83       	dec	r6		
 332:	fe 23       	jnz	$-2      	;abs 0x330
 334:	06 44       	mov	r4,	r6	
 336:	15 83       	dec	r5		
 338:	fb 23       	jnz	$-8      	;abs 0x330
 33a:	30 41       	ret			

0000033c <wait_10us>:
 33c:	34 40 22 00 	mov	#34,	r4	;#0x0022
 340:	06 44       	mov	r4,	r6	

00000342 <wait_10us_loop>:
 342:	16 83       	dec	r6		
 344:	fe 23       	jnz	$-2      	;abs 0x342
 346:	06 44       	mov	r4,	r6	
 348:	15 83       	dec	r5		
 34a:	fb 23       	jnz	$-8      	;abs 0x342
 34c:	30 41       	ret			

0000034e <end_of_test>:
 34e:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 352:	03 43       	nop			
 354:	30 43       	br	#-1		;r3 As==11
