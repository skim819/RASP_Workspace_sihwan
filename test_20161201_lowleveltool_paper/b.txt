
VPR FPGA Placement and Routing.
Version: Version 6.0 Full Release
Compiled: Apr 17 2013.
Original VPR by V. Betz.
Timing-driven placement enhancements by A. Marquardt.
Single-drivers enhancements by Andy Ye with additions by.
Mark Fang, Jason Luu, Ted Campbell
Heterogeneous stucture support by Jason Luu and Ted Campbell.
T-VPack clustering integration by Jason Luu.
Area-driven AAPack added by Jason Luu.
This is free open source code under MIT license.

Building complex block graph 
Begin packing of /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.blif 
Swept away 0 nets with no fanout
Removed 0 LUT buffers 

After removing unused inputs:
Total Blocks: 7.  Total Nets: 6.  Total inputs 3 ouptuts 1
Not enough resources expand FPGA size to x = 2 y = 2
Complex Block 0: cb.net5_1 type cab
.
Complex Block 1: cb.net4_1 type cab

Not enough resources expand FPGA size to x = 3 y = 3
Not enough resources expand FPGA size to x = 4 y = 4
Not enough resources expand FPGA size to x = 5 y = 5
Not enough resources expand FPGA size to x = 6 y = 6
Not enough resources expand FPGA size to x = 7 y = 7
Not enough resources expand FPGA size to x = 8 y = 8
Not enough resources expand FPGA size to x = 9 y = 9
Not enough resources expand FPGA size to x = 10 y = 10
Not enough resources expand FPGA size to x = 11 y = 11
Not enough resources expand FPGA size to x = 12 y = 12
Not enough resources expand FPGA size to x = 13 y = 13
Not enough resources expand FPGA size to x = 14 y = 14
Complex Block 2: cb.out_mite_adc type cab2


0 LUTs of size 0
0 LUTs in input netlist
0 FFs in input netlist
0 FFs in input netlist not absorbable
	<EMPTY>: # blocks 0, avg # input + clock pins used 0, avg # output pins used 0
	io: # blocks 4, avg # input + clock pins used 0.25, avg # output pins used 0.75
	clb: # blocks 0, avg # input + clock pins used 0, avg # output pins used 0
	cab: # blocks 2, avg # input + clock pins used 2, avg # output pins used 1
	cab2: # blocks 1, avg # input + clock pins used 1, avg # output pins used 1
Absorbed logical nets 0 out of 6 nets, 6 nets not absorbed

Netlist conversion complete.

Packing took 0 seconds
Begin parsing packed FPGA netlist file
Finished parsing packed FPGA netlist file
Netlist generated from file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.net
Timing analysis: OFF

Circuit netlist file: /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.net
Circuit placement file: /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.place
Circuit routing file: /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.route
Operation:  RUN_FLOW

Placer: ENABLED
Router: ENABLED
PlacerOpts.place_freq:  PLACE_ONCE
PlacerOpts.place_algorithm:  BOUNDING_BOX_PLACE
PlacerOpts.place_cost_type:  LINEAR_CONG
PlacerOpts.pad_loc_type:  USER '/home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.pads'
PlacerOpts.place_cost_exp:  1.000000
PlacerOpts.place_chan_width:  100
PlaceOpts.seed:  1
AnnealSched.type:  AUTO_SCHED
AnnealSched.inner_num:  10.000000

RouterOpts.route_type:  DETAILED
RouterOpts.router_algorithm:  DIRECTED_SEARCH
RouterOpts.base_cost_type:  DEMAND_ONLY
RouterOpts.fixed_channel_width:  17
RouterOpts.acc_fac:  1.000000
RouterOpts.bb_factor:  3
RouterOpts.bend_cost:  0.000000
RouterOpts.first_iter_pres_fac:  10000.000000
RouterOpts.initial_pres_fac:  10000.000000
RouterOpts.pres_fac_mult:  1.300000
RouterOpts.max_router_iterations:  50

RoutingArch.directionality:  BI_DIRECTIONAL
RoutingArch.switch_block_type:  SUBSET
RoutingArch.Fs:  3


Netlist num_nets:  6
Netlist num_blocks:  7
Netlist <EMPTY> blocks:  0
Netlist clb blocks:  0
Netlist cab blocks:  2
Netlist cab2 blocks:  1
Netlist inputs pins:  3
Netlist output pins:  1

The circuit will be mapped into a 14 x 14 array of clbs.

Resource Usage:
Netlist      0	blocks of type <EMPTY>
Architecture 4	blocks of type <EMPTY>
Netlist      4	blocks of type io
Architecture 336	blocks of type io
Netlist      0	blocks of type clb
Architecture 98	blocks of type clb
Netlist      2	blocks of type cab
Architecture 84	blocks of type cab
Netlist      1	blocks of type cab2
Architecture 14	blocks of type cab2


Reading locations of IO pads from /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.pads.
Successfully read /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.pads.

Initial Placement Cost: 0.79 bb_cost: 0.79 td_cost: 0 delay_cost: 0

          T        Cost Av. BB Cost  Av. TD Cost   Av Tot Del  P to P Del        d_max   Ac Rate  Std Dev  R limit      Exp  Tot. Moves    Alpha
   --------  ---------- -----------  -----------    ---------  ----------        -----   -------  -------  -------  -------  ----------    -----
     2.1554    0.696412    0.696412            0            0           0           0     0.985    0.115       14        0         133      0.5
     1.0777    0.697023    0.697023            0            0           0           0     0.985    0.155       14        0         266      0.5
    0.53885    0.700984    0.700984            0            0           0           0    0.9173    0.139       14        0         399      0.9
    0.48496    0.755907    0.755907            0            0           0           0    0.9549    0.116       14        0         532      0.9
    0.43647    0.693904    0.693904            0            0           0           0    0.9248    0.105       14        0         665      0.9
    0.39282    0.721682    0.721682            0            0           0           0    0.9398    0.108       14        0         798      0.9
    0.35354    0.648207    0.648207            0            0           0           0    0.8797    0.122       14        0         931      0.9
    0.31818    0.665934    0.665934            0            0           0           0    0.8872    0.123       14        0        1064      0.9
    0.28637    0.724276    0.724276            0            0           0           0    0.8797    0.107       14        0        1197      0.9
    0.25773    0.696947    0.696947            0            0           0           0     0.812    0.148       14        0        1330      0.9
    0.23196    0.655639    0.655639            0            0           0           0    0.8271    0.109       14        0        1463      0.9
    0.20876    0.676276    0.676276            0            0           0           0    0.8271    0.113       14        0        1596      0.9
    0.18788    0.695821    0.695821            0            0           0           0    0.8271     0.12       14        0        1729      0.9
     0.1691    0.661866    0.661866            0            0           0           0    0.7669    0.134       14        0        1862     0.95
    0.16064      0.6951      0.6951            0            0           0           0     0.782    0.096       14        0        1995     0.95
    0.15261    0.632395    0.632395            0            0           0           0    0.6917    0.121       14        0        2128     0.95
    0.14498    0.624741    0.624741            0            0           0           0    0.7143    0.116       14        0        2261     0.95
    0.13773    0.627559    0.627559            0            0           0           0    0.6767    0.126       14        0        2394     0.95
    0.13084    0.624243    0.624243            0            0           0           0    0.6917     0.12       14        0        2527     0.95
     0.1243    0.613042    0.613042            0            0           0           0     0.594    0.131       14        0        2660     0.95
    0.11809    0.626255    0.626255            0            0           0           0    0.6617    0.113       14        0        2793     0.95
    0.11218    0.622164    0.622164            0            0           0           0    0.6617    0.136       14        0        2926     0.95
    0.10657     0.60413     0.60413            0            0           0           0    0.6015    0.102       14        0        3059     0.95
    0.10124    0.606461    0.606461            0            0           0           0     0.594    0.102       14        0        3192     0.95
   0.096182    0.642505    0.642505            0            0           0           0    0.6917     0.12       14        0        3325     0.95
   0.091373    0.617148    0.617148            0            0           0           0    0.6316      0.1       14        0        3458     0.95
   0.086804    0.540775    0.540775            0            0           0           0    0.4887    0.111       14        0        3591     0.95
   0.082464     0.57195     0.57195            0            0           0           0    0.5414    0.123       14        0        3724     0.95
   0.078341    0.615006    0.615006            0            0           0           0    0.4962    0.103       14        0        3857     0.95
   0.074424    0.633252    0.633252            0            0           0           0    0.5789    0.129       14        0        3990     0.95
   0.070703    0.435824    0.435824            0            0           0           0    0.4135   0.0674       14        0        4123     0.95
   0.067167    0.522264    0.522264            0            0           0           0    0.4662   0.0764    13.63        0        4256     0.95
   0.063809    0.553402    0.553402            0            0           0           0    0.3985    0.108    13.99        0        4389     0.95
   0.060619    0.478815    0.478815            0            0           0           0    0.3158   0.0893    13.41        0        4522     0.95
   0.057588    0.536616    0.536616            0            0           0           0    0.4436    0.115    11.74        0        4655     0.95
   0.054708    0.473261    0.473261            0            0           0           0    0.3233   0.0793    11.78        0        4788     0.95
   0.051973    0.537642    0.537642            0            0           0           0    0.4135    0.142    10.41        0        4921     0.95
   0.049374    0.484871    0.484871            0            0           0           0    0.2782   0.0994    10.13        0        5054     0.95
   0.046906     0.47025     0.47025            0            0           0           0    0.3083   0.0709    8.493        0        5187     0.95
    0.04456    0.452379    0.452379            0            0           0           0    0.4436   0.0768    7.374        0        5320     0.95
   0.042332    0.474392    0.474392            0            0           0           0    0.4286   0.0871    7.401        0        5453     0.95
   0.040216    0.541435    0.541435            0            0           0           0    0.4737   0.0978    7.316        0        5586     0.95
   0.038205    0.442248    0.442248            0            0           0           0    0.4361   0.0471    7.563        0        5719     0.95
   0.036295    0.410006    0.410006            0            0           0           0    0.3459   0.0595    7.533        0        5852     0.95
    0.03448    0.393884    0.393884            0            0           0           0    0.3684   0.0478    6.824        0        5985     0.95
   0.032756    0.429703    0.429703            0            0           0           0    0.2481   0.0559    6.336        0        6118     0.95
   0.031118    0.471413    0.471413            0            0           0           0    0.4812   0.0665     5.12        0        6251     0.95
   0.029562    0.469708    0.469708            0            0           0           0    0.5038   0.0503    5.331        0        6384     0.95
   0.028084    0.416257    0.416257            0            0           0           0    0.4211    0.034    5.671        0        6517     0.95
    0.02668    0.427118    0.427118            0            0           0           0    0.3383   0.0443    5.563        0        6650     0.95
   0.025346    0.397507    0.397507            0            0           0           0     0.391   0.0363    4.998        0        6783     0.95
   0.024079     0.40434     0.40434            0            0           0           0    0.4511   0.0358    4.753        0        6916     0.95
   0.022875    0.346177    0.346177            0            0           0           0    0.3534    0.034    4.806        0        7049     0.95
   0.021731    0.345904    0.345904            0            0           0           0    0.2932   0.0318    4.389        0        7182     0.95
   0.020644    0.351435    0.351435            0            0           0           0    0.5263    0.036    3.745        0        7315     0.95
   0.019612    0.361894    0.361894            0            0           0           0    0.3985   0.0348    4.068        0        7448     0.95
   0.018632    0.389266    0.389266            0            0           0           0     0.406   0.0289      3.9        0        7581     0.95
     0.0177    0.399362    0.399362            0            0           0           0    0.4662   0.0357    3.767        0        7714     0.95
   0.016815    0.348525    0.348525            0            0           0           0     0.406   0.0345    3.866        0        7847     0.95
   0.015974    0.352181    0.352181            0            0           0           0    0.3459   0.0339    3.734        0        7980     0.95
   0.015176    0.367388    0.367388            0            0           0           0    0.3158   0.0666    3.383        0        8113     0.95
   0.014417    0.312864    0.312864            0            0           0           0    0.3684   0.0205    2.963        0        8246     0.95
   0.013696     0.31162     0.31162            0            0           0           0    0.4662   0.0185     2.75        0        8379     0.95
   0.013011    0.311894    0.311894            0            0           0           0    0.3985   0.0189    2.822        0        8512     0.95
   0.012361    0.314318    0.314318            0            0           0           0    0.4361   0.0163    2.705        0        8645     0.95
   0.011743    0.310007    0.310007            0            0           0           0    0.4586   0.0183    2.695        0        8778     0.95
   0.011155      0.3138      0.3138            0            0           0           0    0.4361   0.0153    2.745        0        8911     0.95
   0.010598    0.304724    0.304724            0            0           0           0    0.3985   0.0134    2.734        0        9044     0.95
   0.010068    0.314089    0.314089            0            0           0           0    0.3684   0.0158    2.621        0        9177     0.95
  0.0095644    0.307851    0.307851            0            0           0           0    0.3835   0.0171    2.433        0        9310     0.95
  0.0090861    0.314536    0.314536            0            0           0           0    0.3985   0.0168    2.296        0        9443     0.95
  0.0086318    0.308537    0.308537            0            0           0           0    0.2556   0.0212      2.2        0        9576     0.95
  0.0082002    0.289531    0.289531            0            0           0           0    0.1579   0.0102    1.795        0        9709     0.95
  0.0077902    0.290007    0.290007            0            0           0           0    0.1654   0.0102    1.288        0        9842     0.95
  0.0074007    0.290007    0.290007            0            0           0           0   0.06015   0.0107        1        0        9975      0.8
  0.0059206    0.290007    0.290007            0            0           0           0   0.04511    0.011        1        0       10108      0.8
  0.0047365    0.290007    0.290007            0            0           0           0   0.04511    0.011        1        0       10241      0.8
  0.0037892    0.290007    0.290007            0            0           0           0   0.01504   0.0141        1        0       10374      0.8
  0.0030313    0.280007    0.280007            0            0           0           0         0        0        1        0       10507      0.8
  0.0024251    0.280007    0.280007            0            0           0           0         0        0        1        0       10640      0.8
  0.0019401    0.280007    0.280007            0            0           0           0         0        0        1        0       10773      0.8
   0.001552    0.280007    0.280007            0            0           0           0         0        0        1        0       10906      0.8
  0.0012416    0.280007    0.280007            0            0           0           0         0        0        1        0       11039      0.8
 0.00099331    0.280007    0.280007            0            0           0           0         0        0        1        0       11172      0.8
 0.00079465    0.280007    0.280007            0            0           0           0         0        0        1        0       11305      0.8
 0.00063572    0.280007    0.280007            0            0           0           0         0        0        1        0       11438      0.8
 0.00050857    0.280007    0.280007            0            0           0           0         0        0        1        0       11571      0.8
 0.00040686    0.280007    0.280007            0            0           0           0         0        0        1        0       11704      0.8
 0.00032549    0.280007    0.280007            0            0           0           0         0        0        1        0       11837      0.8
 0.00026039    0.280007    0.280007            0            0           0           0         0        0        1        0       11970      0.8
          0    0.280007    0.280007            0            0           0           0         0        0        1        0       12103  

BB estimate of min-dist (placement) wirelength is ;28
bb_cost recomputed from scratch is 0.28.

Completed placement consistency check successfully.

Placement. Cost: 0.280007  bb_cost: 0.280007  td_cost: 0  delay_cost: 0.
Placement took 0 seconds
build rr_graph took 0.01 seconds
Confirming Router Algorithm: DIRECTED_SEARCH.
mst took 0 seconds
routing iteration 1
routing iteration took 0 seconds
wirelength after first iteration 23, total available wirelength 7140, ratio 0.00322129
Successfully routed after 1 routing iterations by Directed Search.

Checking to ensure routing is legal ...
Completed routing consistency check successfully.

Serial number (magic cookie) for the routing is: -43124
Circuit successfully routed with a channel width factor of 17.


Average number of bends per net: 0.666667  Maximum # of bends: 2


The number of routed nets (nonglobal): 6
Wirelength results (all in units of 1 clb segments):
	Total wirelength: 23   Average net length: 3.83333
	Maximum net length: 8

Wirelength results in terms of physical segments:
	Total wiring segments used: 23   Av. wire segments per net: 3.83333
	Maximum segments used by a net: 8

	Total local nets with reserved CLB opins: 0


X - Directed channels:

j	max occ	av_occ		capacity
0	4	1.14286  	17
1	1	0.285714 	17
2	0	0.00000  	17
3	0	0.00000  	17
4	0	0.00000  	17
5	0	0.00000  	17
6	0	0.00000  	17
7	0	0.00000  	17
8	0	0.00000  	17
9	0	0.00000  	17
10	0	0.00000  	17
11	0	0.00000  	17
12	0	0.00000  	17
13	0	0.00000  	17
14	0	0.00000  	17

Y - Directed channels:

i	max occ	av_occ		capacity
0	0	0.00000  	17
1	0	0.00000  	17
2	0	0.00000  	17
3	0	0.00000  	17
4	0	0.00000  	17
5	0	0.00000  	17
6	0	0.00000  	17
7	0	0.00000  	17
8	0	0.00000  	17
9	0	0.00000  	17
10	1	0.0714286	17
11	0	0.00000  	17
12	0	0.00000  	17
13	2	0.142857 	17
14	0	0.00000  	17

Total Tracks in X-direction: 255  in Y-direction: 255

Logic Area (in minimum width transistor areas, excludes I/Os and empty grid tiles):
Total Logic Block Area (Warning, need to add pitch of routing to blocks with height > 3): 5.88e+06 
Total Used Logic Block Area: 90000 

Routing area (in minimum width transistor areas):
Assuming no buffer sharing (pessimistic). Total: 2.57432e+07  Per logic tile: 131343.
Assuming buffer sharing (slightly optimistic). Total: 9.81081e+06  Per logic tile: 50055.1


Segment usage by type (index):
Segment type       Fractional utilization
------------       ----------------------
       0                  0.00322

Segment usage by length:
Segment length       Fractional utilization
--------------       ----------------------
        1                   0.00322
Routing took 0.02 seconds
/home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper
.subckt meas_volt_mite
['net5_1', 'out_mite_adc', '0.00001']
meas_volt_mite
.subckt nfet
['net1_1', 'net2_1', 'net4_1']
nfet
.subckt nfet
['net4_1', 'net3_1', 'net5_1']
nfet
vmm types: 4x4, 8x8, 12x12, 16x16: 0 0 0 0
/home/ubuntu/rasp30/vtr_release/vpr/vpr /home/ubuntu/rasp30/vpr2swcs/./arch/rasp3_arch.xml /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test -net_file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.net -place_file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.place -route_file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.route  -route_chan_width 17 -fix_pins /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/test.pads -nodisp -timing_analysis off
net5_1
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
net4_1
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
out_mite_adc
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
 ------------- (net3_1) ------------- 
|  OPIN  (8,0) --> CHANX  (8,0) T/P: 13 16 | io_sd [ 8, 0] CHANX  (252,352) T13 O7 SWC 
| CHANX  (8,0) --> CHANX  (9,0) T/P: 13 -1 | io_sd [ 9, 0] SBLOCK we (275 352) SWC 
| CHANX  (9,0) --> CHANX (10,0) T/P: 13 -1 | io_sa [10, 0] SBLOCK we (313 352) SWC 
| CHANX (10,0) --> CHANX (11,0) T/P: 13 -1 | io_sa [11, 0] SBLOCK we (347 352) SWC 
| CHANX (11,0) -->  IPIN (11,1) T/P: 13 11 | io_sa [11, 0] CHANX  (357,384) T13 XI11 ~~~~ PIN SINK ~~~~ || net (net3_1) -> pin 11 in 11 1
SWC 
 ------------- (net4_1) ------------- 
|  OPIN (10,1) --> CHANX (10,1) T/P:  9 20 |  cab [10, 1] CHANX  (318,657) T9 O4 SWC 
| CHANX (10,1) --> CHANY (10,1) T/P:  9 -1 | cab [11, 1] SBLOCK ws (352 801) SWC 
| CHANY (10,1) --> CHANX (11,0) T/P:  9 -1 | io_sa [11, 0] SBLOCK ne (352 336) SWC 
| CHANX (11,0) -->  IPIN (11,1) T/P:  9 12 | io_sa [11, 0] CHANX  (362,400) T9 XI12 ~~~~ PIN SINK ~~~~ || net (net4_1) -> pin 12 in 11 1
SWC 
 ------------- (net5_1) ------------- 
|  OPIN (11,1) --> CHANX (11,1) T/P: 16 20 |  cab [11, 1] CHANX  (344,657) T16 O4 SWC 
| CHANX (11,1) --> CHANX (12,1) T/P: 16 -1 | clb [12, 1] SBLOCK we (376 1025) SWC 
| CHANX (12,1) --> CHANX (13,1) T/P: 16 -1 | clb [13, 1] SBLOCK we (410 1025) SWC 
| CHANX (13,1) --> CHANY (13,1) T/P: 16 -1 | cab2 [14, 1] SBLOCK ws (446 801) SWC 
| CHANY (13,1) -->  IPIN (14,1) T/P: 16  0 | cab2 [14, 1] CHANY  (446,945) T16 XI0 ~~~~ PIN SINK ~~~~ || net (net5_1) -> pin 0 in 14 1
SWC 
 ------------- (net2_1) ------------- 
|  OPIN  (9,0) --> CHANX  (9,0) T/P: 14  7 | io_sd [ 9, 0] CHANX  (285,304) T14 I11 SWC 
| CHANX  (9,0) --> CHANX (10,0) T/P: 14 -1 | io_sa [10, 0] SBLOCK we (312 352) SWC 
| CHANX (10,0) -->  IPIN (10,1) T/P: 14 11 | io_sa [10, 0] CHANX  (322,384) T14 XI11 ~~~~ PIN SINK ~~~~ || net (net2_1) -> pin 11 in 10 1
SWC 
 ------------- (net1_1) ------------- 
|  OPIN  (9,0) --> CHANX  (9,0) T/P: 16  4 | io_sd [ 9, 0] CHANX  (283,288) T16 I7 SWC 
| CHANX  (9,0) --> CHANX (10,0) T/P: 16 -1 | io_sa [10, 0] SBLOCK we (310 352) SWC 
| CHANX (10,0) -->  IPIN (10,1) T/P: 16 12 | io_sa [10, 0] CHANX  (320,400) T16 XI12 ~~~~ PIN SINK ~~~~ || net (net1_1) -> pin 12 in 10 1
SWC 
 ------------- (out_mite_adc) ------------- 
|  OPIN (14,1) --> CHANY (13,1) T/P: 15 16 | cab2 [14, 1] CHANY  (447,945) T15 XI0 SWC 
| CHANY (13,1) --> CHANX (13,0) T/P: 15 -1 | io_sa [14, 0] SBLOCK nw (447 304) SWC 
| CHANX (13,0) --> CHANX (12,0) T/P: 15 -1 | io_sd [13, 0] SBLOCK ew (409 352) SWC 
| CHANX (12,0) --> CHANX (11,0) T/P: 15 -1 | io_sd [12, 0] SBLOCK ew (375 352) SWC 
| CHANX (11,0) --> CHANX (10,0) T/P: 15 -1 | io_sa [11, 0] SBLOCK ew (345 352) SWC 
| CHANX (10,0) --> CHANX  (9,0) T/P: 15 -1 | io_sa [10, 0] SBLOCK ew (311 352) SWC 
| CHANX  (9,0) --> CHANX  (8,0) T/P: 15 -1 | io_sd [ 9, 0] SBLOCK ew (273 352) SWC 
| CHANX  (8,0) --> CHANX  (7,0) T/P: 15 -1 | io_sd [ 8, 0] SBLOCK ew (239 352) SWC 
| CHANX  (7,0) -->  IPIN  (7,0) T/P: 15  0 | io_sa [ 7, 0] CHANX  (219,272) T15 I8 ~~~~ PIN SINK ~~~~ || net (out_mite_adc) -> pin 0 in 7 0
SWC 
class: complexBlock - name: out:out_mite_adc - type: #tgate[0] - num: 0 
I8 tgate[0] -> (13 7) -> (217 112)
I/O Blocks dev FGs
!!!!!!!!!!!!!!tgate[0] -->  DEV FGs  -> (22 13) -> (226 208)
!!!!!!!!!!!!!!tgate[0] -->  DEV FGs  -> (18 13) -> (222 208)
I/O Blocks dev FGs
!!!!!!!!!!!!!!int[5] -->  DEV FGs  -> (12 13) -> (250 208)
I/O Blocks dev FGs
!!!!!!!!!!!!!!int[1] -->  DEV FGs  -> (12 9) -> (284 144)
!!!!!!!!!!!!!!int[2] -->  DEV FGs  -> (12 10) -> (284 160)
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
cab.I[12]
nfet[0].in[0]
local interconnect 14 cab.I[12] -> 11 nfet[0].in[0] (19 14) -> (325 225)
cab.I[11]
nfet[0].in[1]
local interconnect 13 cab.I[11] -> 12 nfet[0].in[1] (18 13) -> (324 209)
nfet[0].out[0]
cab.O[4]
local interconnect 80 nfet[0].out[0] -> 134 cab.O[4] (25 45) -> (331 721)
getting here!
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
cab.I[12]
nfet[0].in[0]
local interconnect 14 cab.I[12] -> 11 nfet[0].in[0] (19 14) -> (359 225)
cab.I[11]
nfet[0].in[1]
local interconnect 13 cab.I[11] -> 12 nfet[0].in[1] (18 13) -> (358 209)
nfet[0].out[0]
cab.O[4]
local interconnect 80 nfet[0].out[0] -> 134 cab.O[4] (25 45) -> (365 721)
getting here!
0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 Hallelujah!
gnd vcc net5_1                                                       out_mite_adc                                                         
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     0 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     1 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     2 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     3 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     4 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     5 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     6 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     7 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     8 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     9 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     10
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     11
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     12
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     13
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     14
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     15
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     16
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     17
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     18
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     19
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     20
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     21
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     22
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     23
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     24
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     25
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     26
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     27
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     28
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     29
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     30
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     31
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     32
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     33
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     34
.  .  X  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  net5_1 35
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     36
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     37
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     38
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     39
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     40
                                                      .  .  .  X  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  out_mite_adc
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
cab2.I[0]
meas_volt_mite[0].in
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (13 2) -> (455 33)
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (12 2) -> (454 33)
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (10 2) -> (452 33)
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (9 2) -> (451 33)
meas_volt_mite[0].out
cab2.O[0]
local interconnect 21 meas_volt_mite[0].out -> 41 cab2.O[0] (11 25) -> (453 401)
local interconnect 21 meas_volt_mite[0].out -> 41 cab2.O[0] (11 26) -> (453 417)
getting here!
ok here too22
[252, 352, 0, 0]
[275, 352, 0, 0]
[313, 352, 0, 0]
[347, 352, 0, 0]
[357, 384, 0, 0]
[318, 657, 1, 0, 0, 0]
[352, 801, 1, 0, 0, 0]
[352, 336, 0, 0]
[362, 400, 0, 0]
[344, 657, 1, 0, 0, 0]
[376, 1025, 0, 0]
[410, 1025, 0, 0]
[446, 801, 1, 0, 0, 0]
[446, 945, 0, 0]
[285, 304, 0, 0]
[312, 352, 0, 0]
[322, 384, 0, 0]
[283, 288, 0, 0]
[310, 352, 0, 0]
[320, 400, 0, 0]
[447, 945, 0, 0]
[447, 304, 0, 0]
[409, 352, 0, 0]
[375, 352, 0, 0]
[345, 352, 0, 0]
[311, 352, 0, 0]
[273, 352, 0, 0]
[239, 352, 0, 0]
[219, 272, 0, 0]
[217, 112, 0, 0]
[226, 208, 0, 0]
[222, 208, 0, 0]
[250, 208, 0, 0]
[284, 144, 0, 0]
[284, 160, 0, 0]
[325, 225, 0, 0]
[324, 209, 0, 0]
[331, 721, 1, 0, 0, 0]
[359, 225, 0, 0]
[358, 209, 0, 0]
[365, 721, 1, 0, 0, 0]
[455, 33, 0, 0]
[454, 33, 0, 0]
[452, 33, 0, 0]
[451, 33, 0, 0]
[453, 401, 0, 0]
[453, 417, 0, 0]
[473, 977, '0.00001', 4, 4, 0, 0, 0]
[453, 17, 0, 0, 0, 0]
[450, 17, 0, 0, 0, 0]
