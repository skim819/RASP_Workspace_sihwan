
VPR FPGA Placement and Routing.
Version: Version 6.0 Full Release
Compiled: Apr 17 2013.
Original VPR by V. Betz.
Timing-driven placement enhancements by A. Marquardt.
Single-drivers enhancements by Andy Ye with additions by.
Mark Fang, Jason Luu, Ted Campbell
Heterogeneous stucture support by Jason Luu and Ted Campbell.
T-VPack clustering integration by Jason Luu.
Area-driven AAPack added by Jason Luu.
This is free open source code under MIT license.

Building complex block graph 
Begin packing of /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.blif 
Swept away 0 nets with no fanout
Removed 0 LUT buffers 

After removing unused inputs:
Total Blocks: 11.  Total Nets: 10.  Total inputs 3 ouptuts 1
Not enough resources expand FPGA size to x = 2 y = 2
Complex Block 0: cb.net4_1 type clb

Complex Block 1: cb.tg4logic_3 type cab
...
Complex Block 2: cb.tg4logic_2 type cab
.
Not enough resources expand FPGA size to x = 3 y = 3
Complex Block 3: cb.tg4logic_1 type cab
..
Not enough resources expand FPGA size to x = 4 y = 4
Not enough resources expand FPGA size to x = 5 y = 5
Not enough resources expand FPGA size to x = 6 y = 6
Not enough resources expand FPGA size to x = 7 y = 7
Not enough resources expand FPGA size to x = 8 y = 8
Not enough resources expand FPGA size to x = 9 y = 9
Not enough resources expand FPGA size to x = 10 y = 10
Not enough resources expand FPGA size to x = 11 y = 11
Not enough resources expand FPGA size to x = 12 y = 12
Not enough resources expand FPGA size to x = 13 y = 13
Not enough resources expand FPGA size to x = 14 y = 14
Complex Block 4: cb.out_mite_adc type cab2


0 LUTs of size 0
0 LUTs of size 1
0 LUTs of size 2
0 LUTs of size 3
1 LUTs of size 4
1 LUTs in input netlist
0 FFs in input netlist
0 FFs in input netlist not absorbable
	<EMPTY>: # blocks 0, avg # input + clock pins used 0, avg # output pins used 0
	io: # blocks 4, avg # input + clock pins used 0.25, avg # output pins used 0.75
	clb: # blocks 1, avg # input + clock pins used 4, avg # output pins used 1
	cab: # blocks 3, avg # input + clock pins used 2.66667, avg # output pins used 1.66667
	cab2: # blocks 1, avg # input + clock pins used 1, avg # output pins used 1
Absorbed logical nets 0 out of 10 nets, 10 nets not absorbed

Netlist conversion complete.

Packing took 0 seconds
Begin parsing packed FPGA netlist file
Finished parsing packed FPGA netlist file
Netlist generated from file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.net
Timing analysis: OFF

Circuit netlist file: /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.net
Circuit placement file: /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.place
Circuit routing file: /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.route
Operation:  RUN_FLOW

Placer: ENABLED
Router: ENABLED
PlacerOpts.place_freq:  PLACE_ONCE
PlacerOpts.place_algorithm:  BOUNDING_BOX_PLACE
PlacerOpts.place_cost_type:  LINEAR_CONG
PlacerOpts.pad_loc_type:  USER '/home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.pads'
PlacerOpts.place_cost_exp:  1.000000
PlacerOpts.place_chan_width:  100
PlaceOpts.seed:  1
AnnealSched.type:  AUTO_SCHED
AnnealSched.inner_num:  10.000000

RouterOpts.route_type:  DETAILED
RouterOpts.router_algorithm:  DIRECTED_SEARCH
RouterOpts.base_cost_type:  DEMAND_ONLY
RouterOpts.fixed_channel_width:  17
RouterOpts.acc_fac:  1.000000
RouterOpts.bb_factor:  3
RouterOpts.bend_cost:  0.000000
RouterOpts.first_iter_pres_fac:  10000.000000
RouterOpts.initial_pres_fac:  10000.000000
RouterOpts.pres_fac_mult:  1.300000
RouterOpts.max_router_iterations:  50

RoutingArch.directionality:  BI_DIRECTIONAL
RoutingArch.switch_block_type:  SUBSET
RoutingArch.Fs:  3


Netlist num_nets:  10
Netlist num_blocks:  9
Netlist <EMPTY> blocks:  0
Netlist clb blocks:  1
Netlist cab blocks:  3
Netlist cab2 blocks:  1
Netlist inputs pins:  3
Netlist output pins:  1

The circuit will be mapped into a 14 x 14 array of clbs.

Resource Usage:
Netlist      0	blocks of type <EMPTY>
Architecture 4	blocks of type <EMPTY>
Netlist      4	blocks of type io
Architecture 336	blocks of type io
Netlist      1	blocks of type clb
Architecture 98	blocks of type clb
Netlist      3	blocks of type cab
Architecture 84	blocks of type cab
Netlist      1	blocks of type cab2
Architecture 14	blocks of type cab2


Reading locations of IO pads from /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.pads.
Successfully read /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.pads.

Initial Placement Cost: 0.77 bb_cost: 0.77 td_cost: 0 delay_cost: 0

          T        Cost Av. BB Cost  Av. TD Cost   Av Tot Del  P to P Del        d_max   Ac Rate  Std Dev  R limit      Exp  Tot. Moves    Alpha
   --------  ---------- -----------  -----------    ---------  ----------        -----   -------  -------  -------  -------  ----------    -----
     1.1314    0.849508    0.849508            0            0           0           0    0.9786    0.141       14        0         187      0.5
    0.56569    0.825111    0.825111            0            0           0           0    0.9626    0.124       14        0         374      0.5
    0.28284       0.804       0.804            0            0           0           0    0.9091    0.131       14        0         561      0.9
    0.25456    0.797018    0.797018            0            0           0           0    0.9144    0.119       14        0         748      0.9
     0.2291    0.790194    0.790194            0            0           0           0    0.8289    0.118       14        0         935      0.9
    0.20619    0.820706    0.820706            0            0           0           0    0.8342    0.136       14        0        1122      0.9
    0.18557    0.787617    0.787617            0            0           0           0    0.8075    0.127       14        0        1309      0.9
    0.16702    0.755102    0.755102            0            0           0           0    0.7968    0.124       14        0        1496     0.95
    0.15867    0.740677    0.740677            0            0           0           0    0.7914    0.106       14        0        1683     0.95
    0.15073    0.690001    0.690001            0            0           0           0    0.7487     0.11       14        0        1870     0.95
     0.1432    0.710364    0.710364            0            0           0           0     0.738     0.12       14        0        2057     0.95
    0.13604    0.696717    0.696717            0            0           0           0    0.7326   0.0794       14        0        2244     0.95
    0.12923    0.739344    0.739344            0            0           0           0    0.8128    0.116       14        0        2431      0.9
    0.11631    0.708965    0.708965            0            0           0           0    0.7219    0.104       14        0        2618     0.95
    0.11049    0.712611    0.712611            0            0           0           0     0.738    0.112       14        0        2805     0.95
    0.10497    0.702483    0.702483            0            0           0           0    0.7112    0.111       14        0        2992     0.95
   0.099722    0.701797    0.701797            0            0           0           0    0.6257    0.117       14        0        3179     0.95
   0.094735    0.691987    0.691987            0            0           0           0    0.7005    0.077       14        0        3366     0.95
   0.089999    0.632815    0.632815            0            0           0           0    0.5134   0.0926       14        0        3553     0.95
   0.085499    0.725651    0.725651            0            0           0           0    0.7005    0.116       14        0        3740     0.95
   0.081224    0.682502    0.682502            0            0           0           0    0.6417   0.0965       14        0        3927     0.95
   0.077163    0.669727    0.669727            0            0           0           0    0.5829   0.0812       14        0        4114     0.95
   0.073304    0.635309    0.635309            0            0           0           0    0.5241   0.0781       14        0        4301     0.95
   0.069639    0.676438    0.676438            0            0           0           0     0.615    0.101       14        0        4488     0.95
   0.066157    0.629042    0.629042            0            0           0           0    0.5561    0.128       14        0        4675     0.95
   0.062849    0.632281    0.632281            0            0           0           0    0.5401   0.0584       14        0        4862     0.95
   0.059707    0.618269    0.618269            0            0           0           0    0.5241   0.0644       14        0        5049     0.95
   0.056722    0.604786    0.604786            0            0           0           0     0.492   0.0757       14        0        5236     0.95
   0.053886    0.644259    0.644259            0            0           0           0    0.5027    0.094       14        0        5423     0.95
   0.051191    0.567981    0.567981            0            0           0           0    0.4759   0.0995       14        0        5610     0.95
   0.048632    0.626575    0.626575            0            0           0           0    0.5615   0.0653       14        0        5797     0.95
     0.0462    0.659289    0.659289            0            0           0           0    0.5989    0.074       14        0        5984     0.95
    0.04389    0.571531    0.571531            0            0           0           0     0.385   0.0554       14        0        6171     0.95
   0.041696    0.646265    0.646265            0            0           0           0    0.5722   0.0844    13.23        0        6358     0.95
   0.039611    0.617117    0.617117            0            0           0           0    0.5187   0.0859       14        0        6545     0.95
    0.03763    0.559737    0.559737            0            0           0           0    0.4011   0.0479       14        0        6732     0.95
   0.035749    0.488784    0.488784            0            0           0           0    0.2193    0.071    13.45        0        6919     0.95
   0.033961    0.498495    0.498495            0            0           0           0    0.2834    0.079    10.48        0        7106     0.95
   0.032263    0.486913    0.486913            0            0           0           0    0.2941   0.0575    8.843        0        7293     0.95
    0.03065    0.580107    0.580107            0            0           0           0    0.5187   0.0539    7.553        0        7480     0.95
   0.029118    0.567575    0.567575            0            0           0           0    0.3743   0.0444    8.148        0        7667     0.95
   0.027662    0.522795    0.522795            0            0           0           0    0.4599   0.0583    7.613        0        7854     0.95
   0.026279    0.498629    0.498629            0            0           0           0    0.4278    0.051    7.764        0        8041     0.95
   0.024965    0.520698    0.520698            0            0           0           0     0.385    0.054    7.669        0        8228     0.95
   0.023716    0.520345    0.520345            0            0           0           0    0.4706   0.0425    7.248        0        8415     0.95
   0.022531     0.50304     0.50304            0            0           0           0    0.2995   0.0417    7.469        0        8602     0.95
   0.021404    0.505879    0.505879            0            0           0           0    0.4278   0.0324     6.42        0        8789     0.95
   0.020334     0.53129     0.53129            0            0           0           0    0.3743   0.0386    6.341        0        8976     0.95
   0.019317    0.514137    0.514137            0            0           0           0    0.4011   0.0605    5.925        0        9163     0.95
   0.018351    0.464346    0.464346            0            0           0           0    0.4064    0.031    5.694        0        9350     0.95
   0.017434    0.444619    0.444619            0            0           0           0    0.2781   0.0389    5.503        0        9537     0.95
   0.016562    0.448784    0.448784            0            0           0           0    0.4385   0.0518    4.612        0        9724     0.95
   0.015734    0.411355    0.411355            0            0           0           0    0.3957   0.0337    4.605        0        9911     0.95
   0.014947    0.396614    0.396614            0            0           0           0    0.3155   0.0359    4.401        0       10098     0.95
     0.0142    0.413948    0.413948            0            0           0           0    0.3797   0.0249    3.853        0       10285     0.95
    0.01349    0.388552    0.388552            0            0           0           0    0.3316   0.0167    3.621        0       10472     0.95
   0.012815    0.425181    0.425181            0            0           0           0    0.4545   0.0238    3.228        0       10659     0.95
   0.012175    0.417629    0.417629            0            0           0           0    0.4278   0.0264    3.275        0       10846     0.95
   0.011566    0.412953    0.412953            0            0           0           0    0.4171   0.0199    3.235        0       11033     0.95
   0.010988    0.391909    0.391909            0            0           0           0    0.3369   0.0148    3.161        0       11220     0.95
   0.010438    0.365159    0.365159            0            0           0           0    0.5187   0.0201    2.835        0       11407     0.95
  0.0099163    0.388035    0.388035            0            0           0           0    0.3529    0.032    3.058        0       11594     0.95
  0.0094205    0.396306    0.396306            0            0           0           0    0.3904   0.0179    2.792        0       11781     0.95
  0.0089495    0.396129    0.396129            0            0           0           0    0.4278   0.0202    2.654        0       11968     0.95
   0.008502    0.380004    0.380004            0            0           0           0    0.3583   0.0152    2.621        0       12155     0.95
  0.0080769    0.369307    0.369307            0            0           0           0    0.2299   0.0133    2.407        0       12342     0.95
  0.0076731    0.362338    0.362338            0            0           0           0    0.1604    0.013    1.901        0       12529     0.95
  0.0072894    0.358792    0.358792            0            0           0           0    0.1765   0.0096     1.37        0       12716     0.95
  0.0069249    0.361338    0.361338            0            0           0           0    0.1604   0.0111    1.009        0       12903     0.95
  0.0065787    0.357651    0.357651            0            0           0           0   0.09091  0.00903        1        0       13090      0.8
   0.005263    0.355004    0.355004            0            0           0           0   0.05348  0.00527        1        0       13277      0.8
  0.0042104    0.355004    0.355004            0            0           0           0   0.03209  0.00548        1        0       13464      0.8
  0.0033683    0.356671    0.356671            0            0           0           0   0.03209  0.00816        1        0       13651      0.8
  0.0026946    0.355004    0.355004            0            0           0           0    0.0107  0.00707        1        0       13838      0.8
  0.0021557    0.350004    0.350004            0            0           0           0         0        0        1        0       14025      0.8
  0.0017246    0.350004    0.350004            0            0           0           0         0        0        1        0       14212      0.8
  0.0013797    0.350004    0.350004            0            0           0           0         0        0        1        0       14399      0.8
  0.0011037    0.350004    0.350004            0            0           0           0         0        0        1        0       14586      0.8
 0.00088298    0.350004    0.350004            0            0           0           0         0        0        1        0       14773      0.8
 0.00070638    0.350004    0.350004            0            0           0           0         0        0        1        0       14960      0.8
 0.00056511    0.350004    0.350004            0            0           0           0         0        0        1        0       15147      0.8
 0.00045208    0.350004    0.350004            0            0           0           0         0        0        1        0       15334      0.8
 0.00036167    0.350004    0.350004            0            0           0           0         0        0        1        0       15521      0.8
 0.00028933    0.350004    0.350004            0            0           0           0         0        0        1        0       15708      0.8
 0.00023147    0.350004    0.350004            0            0           0           0         0        0        1        0       15895      0.8
 0.00018517    0.350004    0.350004            0            0           0           0         0        0        1        0       16082      0.8
          0    0.350004    0.350004            0            0           0           0         0        0        1        0       16269  

BB estimate of min-dist (placement) wirelength is ;35
bb_cost recomputed from scratch is 0.35.

Completed placement consistency check successfully.

Placement. Cost: 0.350004  bb_cost: 0.350004  td_cost: 0  delay_cost: 0.
Placement took 0.01 seconds
build rr_graph took 0.01 seconds
Confirming Router Algorithm: DIRECTED_SEARCH.
mst took 0 seconds
routing iteration 1
routing iteration took 0 seconds
wirelength after first iteration 31, total available wirelength 7140, ratio 0.00434174
Successfully routed after 1 routing iterations by Directed Search.

Checking to ensure routing is legal ...
Completed routing consistency check successfully.

Serial number (magic cookie) for the routing is: -83424
Circuit successfully routed with a channel width factor of 17.


Average number of bends per net: 1.00000  Maximum # of bends: 2


The number of routed nets (nonglobal): 8
Wirelength results (all in units of 1 clb segments):
	Total wirelength: 31   Average net length: 3.87500
	Maximum net length: 8

Wirelength results in terms of physical segments:
	Total wiring segments used: 31   Av. wire segments per net: 3.87500
	Maximum segments used by a net: 8

	Total local nets with reserved CLB opins: 0


X - Directed channels:

j	max occ	av_occ		capacity
0	3	0.714286 	17
1	4	0.928571 	17
2	0	0.00000  	17
3	0	0.00000  	17
4	0	0.00000  	17
5	0	0.00000  	17
6	0	0.00000  	17
7	0	0.00000  	17
8	0	0.00000  	17
9	0	0.00000  	17
10	0	0.00000  	17
11	0	0.00000  	17
12	0	0.00000  	17
13	0	0.00000  	17
14	0	0.00000  	17

Y - Directed channels:

i	max occ	av_occ		capacity
0	0	0.00000  	17
1	0	0.00000  	17
2	0	0.00000  	17
3	0	0.00000  	17
4	0	0.00000  	17
5	0	0.00000  	17
6	0	0.00000  	17
7	0	0.00000  	17
8	2	0.142857 	17
9	3	0.214286 	17
10	1	0.0714286	17
11	0	0.00000  	17
12	0	0.00000  	17
13	2	0.142857 	17
14	0	0.00000  	17

Total Tracks in X-direction: 255  in Y-direction: 255

Logic Area (in minimum width transistor areas, excludes I/Os and empty grid tiles):
Total Logic Block Area (Warning, need to add pitch of routing to blocks with height > 3): 5.88e+06 
Total Used Logic Block Area: 150000 

Routing area (in minimum width transistor areas):
Assuming no buffer sharing (pessimistic). Total: 2.57432e+07  Per logic tile: 131343.
Assuming buffer sharing (slightly optimistic). Total: 9.81081e+06  Per logic tile: 50055.1


Segment usage by type (index):
Segment type       Fractional utilization
------------       ----------------------
       0                  0.00434

Segment usage by length:
Segment length       Fractional utilization
--------------       ----------------------
        1                   0.00434
Routing took 0.01 seconds
/home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper
.subckt tgate
['vcc', 'gnd', 'tg4logic_1']
tgate
.subckt tgate
['vcc', 'gnd', 'tg4logic_2']
tgate
.subckt tgate
['vcc', 'gnd', 'tg4logic_3']
tgate
.subckt ota
['net1_1', 'net2_1', 'net2_1', '0.000000000101']
ota
.subckt ota_buf
['net2_1', 'net3_1', '0.000002000000']
ota_buf
.subckt meas_volt_mite
['net4_1', 'out_mite_adc', '0.00001']
meas_volt_mite
vmm types: 4x4, 8x8, 12x12, 16x16: 0 0 0 0
/home/ubuntu/rasp30/vtr_release/vpr/vpr /home/ubuntu/rasp30/vpr2swcs/./arch/rasp3_arch.xml /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example -net_file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.net -place_file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.place -route_file /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.route  -route_chan_width 17 -fix_pins /home/ubuntu/RASP_Workspace/test_20161201_lowleveltool_paper/global_routing_example.pads -nodisp -timing_analysis off
net4_1
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
tg4logic_3
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
tg4logic_2
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
net3_1
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
net2_1
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
tg4logic_1
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
out_mite_adc
['open', 'open', 'open', 'open', 'open', 'open', 'open', 'open']
 ------------- (tg4logic_3) ------------- 
|  OPIN (11,1) --> CHANX (11,1) T/P:  6 20 |  cab [11, 1] CHANX  (356,657) T6 O4 SWC 
| CHANX (11,1) --> CHANX (10,1) T/P:  6 -1 | cab [11, 1] SBLOCK ew (356 865) SWC 
| CHANX (10,1) --> CHANX  (9,1) T/P:  6 -1 | cab [10, 1] SBLOCK ew (322 865) SWC 
| CHANX  (9,1) --> CHANY  (8,1) T/P:  6 -1 | clb [ 9, 1] SBLOCK es (286 945) SWC 
| CHANY  (8,1) -->  IPIN  (9,1) T/P:  6  0 |  clb [ 9, 1] CHANY  (286,529) T6 XI0 ~~~~ PIN SINK ~~~~ || net (tg4logic_3) -> pin 0 in 9 1
SWC 
 ------------- (net3_1) ------------- 
|  OPIN (10,1) --> CHANY  (9,1) T/P: 16 17 |  cab [10, 1] CHANY  (310,1025) T16 XO1 SWC 
| CHANY  (9,1) -->  IPIN  (9,1) T/P: 16  2 |  cab [10, 1] CHANY  (310,1041) T16 DXI2 ~~~~ PIN SINK ~~~~ || net (net3_1) -> pin 2 in 9 1
SWC 
 ------------- (tg4logic_1) ------------- 
|  OPIN (10,1) --> CHANX (10,1) T/P: 15 20 |  cab [10, 1] CHANX  (311,657) T15 O4 SWC 
| CHANX (10,1) --> CHANY  (9,1) T/P: 15 -1 | cab [10, 1] SBLOCK es (311 785) SWC 
| CHANY  (9,1) --> CHANX  (9,0) T/P: 15 -1 | io_sa [10, 0] SBLOCK nw (311 304) SWC 
| CHANX  (9,0) -->  IPIN  (9,1) T/P: 15  5 | io_sd [ 9, 0] CHANX  (284,384) T15 XI5 ~~~~ PIN SINK ~~~~ || net (tg4logic_1) -> pin 5 in 9 1
SWC 
 ------------- (tg4logic_2) ------------- 
|  OPIN  (7,1) --> CHANX  (7,1) T/P:  0 20 |  cab [ 7, 1] CHANX  (226,657) T0 O4 SWC 
| CHANX  (7,1) --> CHANX  (8,1) T/P:  0 -1 | clb [ 8, 1] SBLOCK we (258 1025) SWC 
| CHANX  (8,1) --> CHANX  (9,1) T/P:  0 -1 | clb [ 9, 1] SBLOCK we (292 1025) SWC 
| CHANX  (9,1) --> CHANY  (9,1) T/P:  0 -1 | cab [10, 1] SBLOCK ws (328 801) SWC 
| CHANY  (9,1) -->  IPIN  (9,1) T/P:  0  6 |  cab [10, 1] CHANY  (328,1057) T0 DXI6 ~~~~ PIN SINK ~~~~ || net (tg4logic_2) -> pin 6 in 9 1
SWC 
 ------------- (net4_1) ------------- 
|  OPIN  (9,1) --> CHANY  (8,1) T/P: 16 16 |  clb [ 9, 1] CHANY  (274,593) T16 XO0 SWC 
| CHANY  (8,1) --> CHANX  (9,1) T/P: 16 -1 | clb [ 9, 1] SBLOCK se (274 945) SWC 
| CHANX  (9,1) --> CHANX (10,1) T/P: 16 -1 | cab [10, 1] SBLOCK we (310 865) SWC 
| CHANX (10,1) --> CHANX (11,1) T/P: 16 -1 | cab [11, 1] SBLOCK we (344 865) SWC 
| CHANX (11,1) --> CHANX (12,1) T/P: 16 -1 | clb [12, 1] SBLOCK we (376 1025) SWC 
| CHANX (12,1) --> CHANX (13,1) T/P: 16 -1 | clb [13, 1] SBLOCK we (410 1025) SWC 
| CHANX (13,1) --> CHANY (13,1) T/P: 16 -1 | cab2 [14, 1] SBLOCK ws (446 801) SWC 
| CHANY (13,1) -->  IPIN (14,1) T/P: 16  0 | cab2 [14, 1] CHANY  (446,945) T16 XI0 ~~~~ PIN SINK ~~~~ || net (net4_1) -> pin 0 in 14 1
SWC 
 ------------- (vcc): ------------- 
 ------------- (net2_1) ------------- 
|  OPIN (10,1) --> CHANY (10,1) T/P: 12 19 |  cab [11, 1] CHANY  (349,1121) T12 O3 SWC 
| CHANY (10,1) --> CHANX (10,1) T/P: 12 -1 | cab [11, 1] SBLOCK sw (349 801) SWC 
| CHANX (10,1) -->  IPIN (10,1) T/P: 12  9 |  cab [10, 1] CHANX  (315,593) T12 I9 ~~~~ PIN SINK ~~~~ || net (net2_1) -> pin 9 in 10 1
SWC 
 ------------- (net1_1) ------------- 
|  OPIN  (9,0) --> CHANX  (9,0) T/P: 16  4 | io_sd [ 9, 0] CHANX  (283,288) T16 I7 SWC 
| CHANX  (9,0) --> CHANX (10,0) T/P: 16 -1 | io_sa [10, 0] SBLOCK we (310 352) SWC 
| CHANX (10,0) -->  IPIN (10,1) T/P: 16 10 | io_sa [10, 0] CHANX  (320,368) T16 XI10 ~~~~ PIN SINK ~~~~ || net (net1_1) -> pin 10 in 10 1
SWC 
 ------------- (out_mite_adc) ------------- 
|  OPIN (14,1) --> CHANY (13,1) T/P:  7 16 | cab2 [14, 1] CHANY  (456,945) T7 XI0 SWC 
| CHANY (13,1) --> CHANX (13,0) T/P:  7 -1 | io_sa [14, 0] SBLOCK nw (446 400) SWC 
| CHANX (13,0) --> CHANX (12,0) T/P:  7 -1 | io_sd [13, 0] SBLOCK ew (408 448) SWC 
| CHANX (12,0) --> CHANX (11,0) T/P:  7 -1 | io_sd [12, 0] SBLOCK ew (374 448) SWC 
| CHANX (11,0) --> CHANX (10,0) T/P:  7 -1 | io_sa [11, 0] SBLOCK ew (344 448) SWC 
| CHANX (10,0) --> CHANX  (9,0) T/P:  7 -1 | io_sa [10, 0] SBLOCK ew (310 448) SWC 
| CHANX  (9,0) --> CHANX  (8,0) T/P:  7 -1 | io_sd [ 9, 0] SBLOCK ew (272 448) SWC 
| CHANX  (8,0) --> CHANX  (7,0) T/P:  7 -1 | io_sd [ 8, 0] SBLOCK ew (238 448) SWC 
| CHANX  (7,0) -->  IPIN  (7,0) T/P:  7  0 | io_sa [ 7, 0] CHANX  (228,272) T7 I8 ~~~~ PIN SINK ~~~~ || net (out_mite_adc) -> pin 0 in 7 0
SWC 
class: complexBlock - name: out:out_mite_adc - type: #tgate[0] - num: 0 
I8 tgate[0] -> (13 7) -> (217 112)
I/O Blocks dev FGs
!!!!!!!!!!!!!!tgate[0] -->  DEV FGs  -> (22 13) -> (226 208)
!!!!!!!!!!!!!!tgate[0] -->  DEV FGs  -> (18 13) -> (222 208)
!!!!!!!!!!!!!!int[4] -->  DEV FGs  -> (16 12) -> (220 192)
!!!!!!!!!!!!!!int[5] -->  DEV FGs  -> (16 13) -> (220 208)
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
vcc
tgate[0].in[0]
local interconnect 1 vcc -> 19 tgate[0].in[0] (13 1) -> (217 17)
gnd
tgate[0].in[1]
local interconnect 0 gnd -> 20 tgate[0].in[1] (12 0) -> (216 1)
tgate[0].out[0]
cab.O[4]
local interconnect 76 tgate[0].out[0] -> 134 cab.O[4] (25 48) -> (229 769)
getting here!
I/O Blocks dev FGs
!!!!!!!!!!!!!!int[1] -->  DEV FGs  -> (12 9) -> (284 144)
0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
clb.I[5]
ble[0].in[0]
local interconnect 5 clb.I[5] -> 0 ble[0].in[0] (16 0) -> (288 1)
clb.I[0]
ble[0].in[1]
local interconnect 0 clb.I[0] -> 1 ble[0].in[1] (21 1) -> (293 17)
clb.I[2]
ble[0].in[2]
local interconnect 2 clb.I[2] -> 2 ble[0].in[2] (19 2) -> (291 33)
clb.I[6]
ble[0].in[3]
local interconnect 6 clb.I[6] -> 3 ble[0].in[3] (15 3) -> (287 49)
ble input re-ordered
['net3_1', 'tg4logic_1', 'tg4logic_2', 'tg4logic_3']
['tg4logic_1', 'tg4logic_3', 'net3_1', 'tg4logic_2']
999ble[0] 0110 -> (22 5) -> (294 81)
999ble[0] 0110 -> (25 6) -> (297 97)
999ble[0] 0111 -> (22 13) -> (294 209)
999ble[0] 0111 -> (25 14) -> (297 225)
999ble[0] 0011 -> (22 15) -> (294 241)
999ble[0] 0011 -> (25 12) -> (297 193)
999ble[0] 0010 -> (22 7) -> (294 113)
999ble[0] 0010 -> (25 4) -> (297 65)
999ble[0] 1111 -> (22 12) -> (294 193)
999ble[0] 1111 -> (25 15) -> (297 241)
999ble[0] 1110 -> (22 4) -> (294 65)
999ble[0] 1110 -> (25 7) -> (297 113)
999ble[0] 1010 -> (22 6) -> (294 97)
999ble[0] 1010 -> (25 5) -> (297 81)
999ble[0] 1011 -> (22 14) -> (294 225)
999ble[0] 1011 -> (25 13) -> (297 209)
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
cab.I[9]
ota_buf[0].in[0]
local interconnect 11 cab.I[9] -> 4 ota_buf[0].in[0] (29 11) -> (335 177)
ota[0].out[0]
ota_buf[0].in[0]
local interconnect 85 ota[0].out[0] -> 4 ota_buf[0].in[0] (29 18) -> (335 289)
cab.I[10]
ota[0].in[0]
local interconnect 12 cab.I[10] -> 5 ota[0].in[0] (27 12) -> (333 193)
cab.I[9]
ota[0].in[1]
local interconnect 11 cab.I[9] -> 6 ota[0].in[1] (26 11) -> (332 177)
ota[0].out[0]
ota[0].in[1]
local interconnect 85 ota[0].out[0] -> 6 ota[0].in[1] (26 18) -> (332 289)
vcc
tgate[0].in[0]
local interconnect 1 vcc -> 19 tgate[0].in[0] (13 1) -> (319 17)
gnd
tgate[0].in[1]
local interconnect 0 gnd -> 20 tgate[0].in[1] (12 0) -> (318 1)
ota_buf[0].out[0]
cab.O[1]
local interconnect 86 ota_buf[0].out[0] -> 131 cab.O[1] (28 38) -> (334 609)
tgate[0].out[0]
cab.O[4]
local interconnect 76 tgate[0].out[0] -> 134 cab.O[4] (25 48) -> (331 769)
getting here!
ota_buf[0] ota_biasfb[0] -> (32 62) -> (338 993)
ota_buf[0] ota_biasfb[0] -> (28 17) -> (334 273)
yo
ota[0] ota_bias[0] -> (32 63) -> (338 1009)
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
vcc
tgate[0].in[0]
local interconnect 1 vcc -> 19 tgate[0].in[0] (13 1) -> (353 17)
gnd
tgate[0].in[1]
local interconnect 0 gnd -> 20 tgate[0].in[1] (12 0) -> (352 1)
tgate[0].out[0]
cab.O[4]
local interconnect 76 tgate[0].out[0] -> 134 cab.O[4] (25 48) -> (365 769)
getting here!
0  1  2  3  4  5  6  7  8  9  10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 Hallelujah!
gnd vcc net4_1                                                       out_mite_adc                                                         
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     0 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     1 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     2 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     3 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     4 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     5 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     6 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     7 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     8 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     9 
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     10
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     11
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     12
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     13
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     14
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     15
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     16
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     17
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     18
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     19
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     20
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     21
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     22
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     23
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     24
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     25
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     26
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     27
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     28
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     29
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     30
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     31
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     32
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     33
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     34
.  .  X  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  net4_1 35
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     36
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     37
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     38
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     39
.  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .     40
                                                      .  .  .  X  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  out_mite_adc
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
                                                      .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  .  open
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
cab2.I[0]
meas_volt_mite[0].in
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (13 2) -> (455 33)
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (12 2) -> (454 33)
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (10 2) -> (452 33)
local interconnect 2 cab2.I[0] -> 35 meas_volt_mite[0].in (9 2) -> (451 33)
meas_volt_mite[0].out
cab2.O[0]
local interconnect 21 meas_volt_mite[0].out -> 41 cab2.O[0] (11 25) -> (453 401)
local interconnect 21 meas_volt_mite[0].out -> 41 cab2.O[0] (11 26) -> (453 417)
getting here!
ok here too22
[356, 657, 1, 0, 0, 0]
[356, 865, 1, 0, 0, 0]
[322, 865, 1, 0, 0, 0]
[286, 945, 0, 0]
[286, 529, 0, 0]
[310, 1025, 0, 0]
[310, 1041, 0, 0]
[311, 657, 1, 0, 0, 0]
[311, 785, 1, 0, 0, 0]
[311, 304, 0, 0]
[284, 384, 0, 0]
[226, 657, 1, 0, 0, 0]
[258, 1025, 0, 0]
[292, 1025, 0, 0]
[328, 801, 1, 0, 0, 0]
[328, 1057, 0, 0]
[274, 593, 0, 0]
[274, 945, 0, 0]
[310, 865, 1, 0, 0, 0]
[344, 865, 1, 0, 0, 0]
[376, 1025, 0, 0]
[410, 1025, 0, 0]
[446, 801, 1, 0, 0, 0]
[446, 945, 0, 0]
[349, 1121, 0, 0]
[349, 801, 1, 0, 0, 0]
[315, 593, 0, 0]
[283, 288, 0, 0]
[310, 352, 0, 0]
[320, 368, 0, 0]
[456, 945, 0, 0]
[446, 400, 0, 0]
[408, 448, 0, 0]
[374, 448, 0, 0]
[344, 448, 0, 0]
[310, 448, 0, 0]
[272, 448, 0, 0]
[238, 448, 0, 0]
[228, 272, 0, 0]
[217, 112, 0, 0]
[226, 208, 0, 0]
[222, 208, 0, 0]
[220, 192, 0, 0]
[220, 208, 0, 0]
[217, 17, 0, 0]
[216, 1, 0, 0]
[229, 769, 1, 0, 0, 0]
[284, 144, 0, 0]
[288, 1, 0, 0]
[293, 17, 0, 0]
[291, 33, 0, 0]
[287, 49, 0, 0]
[294, 81, 2, 0]
[297, 97, 2, 0]
[294, 209, 2, 0]
[297, 225, 2, 0]
[294, 241, 2, 0]
[297, 193, 2, 0]
[294, 113, 2, 0]
[297, 65, 2, 0]
[294, 193, 2, 0]
[297, 241, 2, 0]
[294, 65, 2, 0]
[297, 113, 2, 0]
[294, 97, 2, 0]
[297, 81, 2, 0]
[294, 225, 2, 0]
[297, 209, 2, 0]
[335, 177, 0, 0]
[335, 289, 0, 0]
[333, 193, 0, 0]
[332, 177, 0, 0]
[332, 289, 0, 0]
[319, 17, 0, 0]
[318, 1, 0, 0]
[334, 609, 0, 0]
[331, 769, 1, 0, 0, 0]
[338, 993, '0.000002000000', 2, 0, 0]
[334, 273, 0, 0]
[338, 1009, '0.000000000101', 2, 0, 0]
[353, 17, 0, 0]
[352, 1, 0, 0]
[365, 769, 1, 0, 0, 0]
[455, 33, 0, 0]
[454, 33, 0, 0]
[452, 33, 0, 0]
[451, 33, 0, 0]
[453, 401, 0, 0]
[453, 417, 0, 0]
[473, 977, '0.00001', 4, 4, 0, 0, 0]
[453, 17, 0, 0, 0, 0]
[450, 17, 0, 0, 0, 0]
