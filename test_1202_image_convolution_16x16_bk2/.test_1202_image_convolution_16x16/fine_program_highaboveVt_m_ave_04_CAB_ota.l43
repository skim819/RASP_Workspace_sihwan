GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	.include "chip_para.asm"
   1               	/*---------------------------------------------------------------------------*/
   2               	/*                       chip parameters for chip 10                         */ 
   3               	/*---------------------------------------------------------------------------*/
   4               	/*----------------*/
   5               	/* Switch program */
   6               	/*----------------*/
   7               	.set    TUN_TIME_SP,     3          /* tunneling time for switch programming (ms) */
   8               	.set    R_TUN_TIME_SP,     2          /* reverse tunneling time for switch programming (ms) */
   9               	.set    INJ_TIME_SP_1,     5000          /* injection time for switch programming (10us) (1st pulse
  10               	.set    INJ_TIME_SP_2,      500          /* injection time for switch programming (10us) (2nd pulse
  11               	.set    INJ_TIME_SP_3,      200          /* injection time for switch programming (10us) (3rd pulse
  12               	.set    INJ_TIME_SP_4,      200          /* injection time for switch programming (10us) (4th pulse
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 6


  13               	.set    INJ_TIME_SP_5,      200          /* injection time for switch programming (10us) (5th pulse
  14               	.set    INJ_TIME_SP_SUM,     61          /* injection time for switch programming (ms) (calculation
  15               	/*.set    INJ_TIME_SP_RUN,     1 */         /* injection time for switch programming in run-mode(10
  16               	.set    INJ_TIME_SP_RUN,     500          /* injection time for switch programming in run-mode(10us
  17               	
  18               	/*----------------*/
  19               	/* Target program */
  20               	/*----------------*/
  21               	.set    ADC_1nA,    4496          /* 1nA ADC value */
  22               	
  23               	/* Tunnel and Reverse Tunnel */
  24               	.set    TUN_TIME_TP_CAB,     40          /* tunneling time for target programming (ms) - CAB */
  25               	.set    R_TUN_TIME_TP_CAB,   40          /* Reverse tunneling time for target programming (ms) - CA
  26               	
  27               	/* Recover Inject (RI) */
  28               	.set    RI_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  29               	.set    RI_VC1_SWC,     5931          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V -
  30               	.set    RI_VC2_SWC,     5788          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V *
  31               	.set    RI_VC3_SWC,     5357           /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V 
  32               	.set    RI_VC4_SWC,     4496           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm=0V
  33               	.set    RI_VD1_SWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  34               	.set    RI_VD2_SWC,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  35               	.set    RI_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA recover injection = 2.5V @ IVDD
  36               	.set    RI_VC1_OTA,     6732           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0V 
  37               	.set    RI_VC2_OTA,     6508          /* Verify Current 1 for OTA recover injection =  nA @ Vgm=0V 
  38               	.set    RI_VC3_OTA,     5837           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0V 
  39               	.set    RI_VC4_OTA,     4496           /* Verify Current 1 for OTA recover injection = 5nA @ Vgm=0V
  40               	.set    RI_VD1_OTA,     0xea0e          /* Drain Voltage for recover injection final stage */
  41               	.set    RI_VD2_OTA,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  42               	.set    RI_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF recover injection = gnd *
  43               	.set    RI_VC1_OTAREF,  6135              /* Verify Current 1 for OTAREF recover injection = nA @ V
  44               	.set    RI_VC2_OTAREF,  5972             /* Verify Current 1 for OTAREF recover injection = nA @ Vg
  45               	.set    RI_VC3_OTAREF,  5480              /* Verify Current 1 for OTAREF recover injection = nA @ V
  46               	.set    RI_VC4_OTAREF,  4496              /* Verify Current 1 for OTAREF recover injection = 1nA @ 
  47               	.set    RI_VD1_OTAREF,  0xd00e          /* Drain Voltage for recover injection final stage */
  48               	.set    RI_VD2_OTAREF,  0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  49               	.set    RI_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE recover injection = 2.5V @ IV
  50               	.set    RI_VC1_MITE,    7035           /* Verify Current 1 for MITE recover injection = nA @ Vgm=0V
  51               	.set    RI_VC2_MITE,    6781           /* Verify Current 1 for MITE recover injection =  nA @ Vgm=0
  52               	.set    RI_VC3_MITE,    6020            /* Verify Current 1 for MITE recover injection = nA @ Vgm=0
  53               	.set    RI_VC4_MITE,    4496            /* Verify Current 1 for MITE recover injection = 1nA @ Vgm=
  54               	.set    RI_VD1_MITE,    0xea0e          /* Drain Voltage for recover injection final stage */
  55               	.set    RI_VD2_MITE,    0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  56               	;.set    RI_GATE_S_DIRSWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  57               	.set    RI_GATE_S_DIRSWC,     0x0000          /* Gate_S voltage for SWC recover injection = 2.5V @ 
  58               	.set    RI_VC1_DIRSWC,     6031          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0
  59               	.set    RI_VC2_DIRSWC,     5877          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0
  60               	.set    RI_VC3_DIRSWC,     4517           /* Verify Current 1 for SWC recover injection = nA @ Vgm=
  61               	;.set    RI_VC3_DIRSWC,     5117           /* Verify Current 1 for SWC recover injection = nA @ Vgm
  62               	.set    RI_VC4_DIRSWC,     4496           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm
  63               	.set    RI_VD1_DIRSWC,     0xc80e          /* Drain Voltage for recover injection final stage */
  64               	;.set    RI_VD1_DIRSWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  65               	.set    RI_VD2_DIRSWC,     0xd00e          /* Drain Voltage for recover injection pre-final stage *
  66               	;.set    RI_VD2_DIRSWC,     0xfe0e          /* Drain Voltage for recover injection pre-final stage 
  67               	
  68               	.set    RIH_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  69               	.set    RIH_VC1_SWC,     5931          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 7


  70               	.set    RIH_VC2_SWC,     5788          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V 
  71               	.set    RIH_VC3_SWC,     5357           /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V
  72               	.set    RIH_VC4_SWC,     4496           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm=0
  73               	.set    RIH_VD1_SWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  74               	.set    RIH_VD2_SWC,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  75               	.set    RIH_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA recover injection = 2.5V @ IVD
  76               	.set    RIH_VC1_OTA,     6732           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0.
  77               	.set    RIH_VC2_OTA,     6508          /* Verify Current 1 for OTA recover injection =  nA @ Vgm=0.
  78               	.set    RIH_VC3_OTA,     5837           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0.
  79               	.set    RIH_VC4_OTA,     4496           /* Verify Current 1 for OTA recover injection = 5nA @ Vgm=0
  80               	.set    RIH_VD1_OTA,     0xea0e          /* Drain Voltage for recover injection final stage */
  81               	.set    RIH_VD2_OTA,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  82               	
  83               	.set    RIL_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC low sub Vth recover injection
  84               	.set    RIL_VC1_SWC,     4496          /* Verify Current 1 for SWC low sub Vth recover injection = 
  85               	.set    RIL_VC2_SWC,     4163          /* Verify Current 1 for SWC low sub Vth recover injection = 
  86               	.set    RIL_VD1_SWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  87               	.set    RIL_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA low sub Vth recover injection 
  88               	.set    RIL_VC1_OTA,     4496           /* Verify Current 1 for OTA low sub Vth recover injection =
  89               	.set    RIL_VC2_OTA,     4171          /* Verify Current 1 for OTA low sub Vth recover injection = 
  90               	.set    RIL_VD1_OTA,     0xea0e          /* Drain Voltage for recover injection final stage */
  91               	.set    RIL_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF low sub Vth recover inje
  92               	.set    RIL_VC1_OTAREF,  4496              /* Verify Current 1 for OTAREF low sub Vth recover injec
  93               	.set    RIL_VC2_OTAREF,  4174             /* Verify Current 1 for OTAREF low sub Vth recover inject
  94               	.set    RIL_VD1_OTAREF,  0xd00e          /* Drain Voltage for recover injection final stage */
  95               	.set    RIL_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE low sub Vth recover injectio
  96               	.set    RIL_VC1_MITE,    4496           /* Verify Current 1 for MITE low sub Vth recover injection 
  97               	.set    RIL_VC2_MITE,    4185           /* Verify Current 1 for MITE rlow sub Vth ecover injection 
  98               	.set    RIL_VD1_MITE,    0xea0e          /* Drain Voltage for recover injection final stage */
  99               	.set    RIL_GATE_S_DIRSWC,     0x0040          /* Gate_S voltage for SWC low sub Vth recover inject
 100               	.set    RIL_VC1_DIRSWC,     4496          /* Verify Current 1 for SWC low sub Vth recover injection
 101               	.set    RIL_VC2_DIRSWC,     4163          /* Verify Current 1 for SWC low sub Vth recover injection
 102               	.set    RIL_VD1_DIRSWC,     0xea0e          /* Drain Voltage for recover injection final stage */
 103               	
 104               	/* First_Coarse_Program (FCP) */
 105               	.set    FCP_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC first coarese program = V @ IV
 106               	.set    FCP_INJ_T_SWC,    1          /* Injection time for SWC first coarese program = *10us */
 107               	.set    FCP_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA first coarese program = V @ IV
 108               	.set    FCP_INJ_T_OTA,    3          /* Injection time for OTA first coarese program = *10us */
 109               	.set    FCP_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF first coarese program = 
 110               	.set    FCP_INJ_T_OTAREF,    6          /* Injection time for OTAREF first coarese program = *10us 
 111               	.set    FCP_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE first coarese program = V @ 
 112               	.set    FCP_INJ_T_MITE,    3          /* Injection time for MITE first coarese program = *10us */
 113               	.set    FCP_GATE_S_DIRSWC,    0x6200          /* Gate_S voltage for SWC first coarese program = V @
 114               	.set    FCP_INJ_T_DIRSWC,    1          /* Injection time for SWC first coarese program = *10us */
 115               	
 116               	.set    FCPH_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC first coarese program = V @ I
 117               	.set    FCPH_INJ_T_SWC,    1          /* Injection time for SWC first coarese program = *10us */
 118               	.set    FCPH_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA high above Vth first coarese 
 119               	.set    FCPH_INJ_T_OTA,    3          /* Injection time for OTA first coarese program = *10us */
 120               	
 121               	.set    FCPL_GATE_S_SWC,    0x4400          /* Gate_S voltage for SWC low sub Vth first coarese pro
 122               	.set    FCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth first coarese program =
 123               	.set    FCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth first coarese pro
 124               	.set    FCPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth first coarese program =
 125               	.set    FCPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth measured co
 126               	.set    FCPL_INJ_T_OTAREF,    6          /* Injection time for OTAREF low sub Vth measured coarse p
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 8


 127               	.set    FCPL_GATE_S_MITE,    0x3200          /* Gate_S voltage for MITE low sub Vth first coarese p
 128               	.set    FCPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth first coarese program
 129               	.set    FCPL_GATE_S_DIRSWC,    0x4400          /* Gate_S voltage for SWC low sub Vth first coarese 
 130               	.set    FCPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth first coarese progra
 131               	
 132               	/* Measured_Coarse_Program (MCP) */
 133               	.set    MCP_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC sub Vth measured coarse progra
 134               	.set    MCP_INJ_T_SWC,    1          /* Injection time for SWC sub Vth measured coarse program = *1
 135               	.set    MCP_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA sub Vth measured coarse progra
 136               	.set    MCP_INJ_T_OTA,    3          /* Injection time for OTA sub Vth measured coarse program = *1
 137               	.set    MCP_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF sub Vth measured coarse 
 138               	.set    MCP_INJ_T_OTAREF,    6          /* Injection time for OTAREF sub Vth measured coarse progra
 139               	.set    MCP_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE sub Vth measured coarse prog
 140               	.set    MCP_INJ_T_MITE,    3          /* Injection time for MITE sub Vth measured coarse program = 
 141               	.set    MCP_GATE_S_DIRSWC,    0x6200          /* Gate_S voltage for SWC sub Vth measured coarse pro
 142               	.set    MCP_INJ_T_DIRSWC,    1          /* Injection time for SWC sub Vth measured coarse program =
 143               	
 144               	.set    MCPH_GATE_S_SWC,    0x5e00          /* Gate_S voltage for SWC sub Vth measured coarse progr
 145               	;.set    MCPH_GATE_S_SWC,    0x2000          /* Gate_S voltage for SWC sub Vth measured coarse prog
 146               	.set    MCPH_INJ_T_SWC,    1          /* Injection time for SWC sub Vth measured coarse program = *
 147               	.set    MCPH_GATE_S_OTA,    0x5600          /* Gate_S voltage for OTA high above Vth measured coars
 148               	.set    MCPH_INJ_T_OTA,    3          /* Injection time for OTA high above Vth measured coarse prog
 149               	
 150               	.set    MCPL_GATE_S_SWC,    0x4400          /* Gate_S voltage for SWC low sub Vth measured coarse p
 151               	.set    MCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth measured coarse program
 152               	.set    MCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth measured coarse p
 153               	.set    MCPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth measured coarse program
 154               	.set    MCPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth measured co
 155               	.set    MCPL_INJ_T_OTAREF,    6          /* Injection time for OTAREF low sub Vth measured coarse p
 156               	.set    MCPL_GATE_S_MITE,    0x3200          /* Gate_S voltage for MITE low sub Vth measured coarse
 157               	.set    MCPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth measured coarse progr
 158               	.set    MCPL_GATE_S_DIRSWC,    0x4400          /* Gate_S voltage for SWC low sub Vth measured coars
 159               	.set    MCPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth measured coarse prog
 160               	
 161               	/* Fine_Program (FP) */
 162               	.set    FPS_GATE_S_SWC,    0x4600          /* Gate_S voltage for SWC sub Vth fine program = V @ IVD
 163               	.set    FPS_INJ_T_SWC,    1          /* Injection time for SWC sub Vth fine program = *10us */
 164               	.set    FPS_VD_OS_SWC,    46         /* Vd table offset */
 165               	.set    FPS_GATE_S_OTA,    0x4600          /* Gate_S voltage for OTA sub Vth fine program = V @ IVD
 166               	.set    FPS_INJ_T_OTA,    3          /* Injection time for OTA sub Vth fine program = *10us */
 167               	.set    FPS_VD_OS_OTA,    46         /* Vd table offset */
 168               	.set    FPS_GATE_S_OTAREF,    0x4400          /* Gate_S voltage for OTAREF sub Vth fine program = V
 169               	.set    FPS_INJ_T_OTAREF,    6          /* Injection time for OTAREF sub Vth fine program = *10us *
 170               	.set    FPS_VD_OS_OTAREF,    46         /* Vd table offset */
 171               	.set    FPS_GATE_S_MITE,    0x4600          /* Gate_S voltage for MITE sub Vth fine program = V @ I
 172               	.set    FPS_INJ_T_MITE,    3          /* Injection time for MITE sub Vth fine program = *10us */
 173               	.set    FPS_VD_OS_MITE,    46         /* Vd table offset */
 174               	.set    FPS_GATE_S_DIRSWC,    0x6000          /* Gate_S voltage for SWC sub Vth fine program = V @ 
 175               	.set    FPS_INJ_T_DIRSWC,    1          /* Injection time for SWC sub Vth fine program = *10us */
 176               	.set    FPS_VD_OS_DIRSWC,    46         /* Vd table offset */
 177               	
 178               	.set    FPA_GATE_S_SWC,    0x4800          /* Gate_S voltage for SWC above Vth fine program = V @ I
 179               	.set    FPA_INJ_T_SWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 180               	.set    FPA_VD_OS_SWC,    21         /* Vd table offset */
 181               	.set    FPA_GATE_S_OTA,    0x4000          /* Gate_S voltage for OTA above Vth fine program = V @ I
 182               	.set    FPA_INJ_T_OTA,    3          /* Injection time for OTA above Vth fine program = *10us */
 183               	.set    FPA_VD_OS_OTA,    21         /* Vd table offset */
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 9


 184               	.set    FPA_GATE_S_OTAREF,    0x3e00          /* Gate_S voltage for OTAREF above Vth fine program =
 185               	.set    FPA_INJ_T_OTAREF,    6          /* Injection time for OTAREF above Vth fine program = *10us
 186               	.set    FPA_VD_OS_OTAREF,    21         /* Vd table offset */
 187               	.set    FPA_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE above Vth fine program = V @
 188               	.set    FPA_INJ_T_MITE,    3          /* Injection time for MITE above Vth fine program = *10us */
 189               	.set    FPA_VD_OS_MITE,    21         /* Vd table offset */
 190               	.set    FPA_GATE_S_DIRSWC,    0x6e00          /* Gate_S voltage for SWC above Vth fine program = V 
 191               	.set    FPA_INJ_T_DIRSWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 192               	.set    FPA_VD_OS_DIRSWC,    25         /* Vd table offset */
 193               	;.set    FPA_VD_OS_DIRSWC,    21         /* Vd table offset */
 194               	
 195               	;.set    FPH_GATE_S_SWC,    0x7000          /* Gate_S voltage for SWC above Vth fine program = V @ 
 196               	.set    FPH_GATE_S_SWC,    0x3000          /* Gate_S voltage for SWC above Vth fine program = V @ I
 197               	.set    FPH_INJ_T_SWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 198               	.set    FPH_VD_OS_SWC,    21         /* Vd table offset */
 199               	.set    FPH_GATE_S_OTA,    0x4000          /* Gate_S voltage for OTA high above Vth fine program = 
 200               	.set    FPH_INJ_T_OTA,    1          /* Injection time for OTA high above Vth fine program = *10us 
 201               	.set    FPH_VD_OS_OTA,    21         /* Vd table offset */
 202               	
 203               	.set    FPL_GATE_S_SWC,    0x3c00          /* Gate_S voltage for SWC low sub Vth fine program = V @
 204               	.set    FPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth fine program = *10us */
 205               	.set    FPL_VD_OS_SWC,    46         /* Vd table offset */
 206               	.set    FPL_GATE_S_OTA,    0x2c00          /* Gate_S voltage for OTA low sub Vth fine program = V @
 207               	.set    FPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth fine program = *10us */
 208               	.set    FPL_VD_OS_OTA,    46         /* Vd table offset */
 209               	.set    FPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth fine program
 210               	.set    FPL_INJ_T_OTAREF,    7          /* Injection time for OTAREF low sub Vth fine program = *10
 211               	.set    FPL_VD_OS_OTAREF,    46         /* Vd table offset */
 212               	.set    FPL_GATE_S_MITE,    0x2e00          /* Gate_S voltage for MITE low sub Vth fine program = V
 213               	.set    FPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth fine program = *10us *
 214               	.set    FPL_VD_OS_MITE,    46         /* Vd table offset */
 215               	.set    FPL_GATE_S_DIRSWC,    0x3c00          /* Gate_S voltage for SWC low sub Vth fine program = 
 216               	.set    FPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth fine program = *10us 
 217               	.set    FPL_VD_OS_DIRSWC,    46         /* Vd table offset */
 218               	
   3               	
   4               	.global main
   5               	
   6               	main:
   7 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
   8 0004 3740 0050 		mov	#0x5000, r7
   9 0008 0A43      		mov	#0, r10			; Initialize time
  10 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  11               	init_wait:
  12 000e 1583      	        dec.w   r5 
  13 0010 FE23      	        jnz     init_wait
  14 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  14      5800 
  15 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  15      2001 
  16 001e 32C2      		dint
  17 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  18 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  18      6401 
  19 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  19      000B 
  20 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 10


  20      6001 
  21 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  21      0C0B 
  22 003c 8243 080B 		mov     #0,    &ROW_SEL
  23 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  24 0044 874A 0000 		mov	r10, @r7
  25 0048 2753      		incd	r7
  26 004a 874A 0000 		mov	r10, @r7
  27 004e 2753      		incd	r7
  28               	;	mov	#0xC000, r13		;gate_s = 1.2V @ IVDD 2.5V
  29 0050 3D40 00A0 		mov	#0xA000, r13		;gate_s = 0.8V @ IVDD 2.5V
  30 0054 B012 0000 		call	#block_measure
  31               	
  32               		;mov	#1, r15
  33               		;mov	#10, r15
  34               		;mov	#30, r15
  35               		;mov	#40, r15
  36 0058 3F40 3200 		mov	#50, r15
  37               		;mov	#100, r15
  38               	fine_loop_s:
  39               	;	mov	#0xC000, r13		;gate_s = 1.2V @ IVDD 2.5V
  40 005c 3D40 00A0 		mov	#0xA000, r13		;gate_s = 0.8V @ IVDD 2.5V
  41 0060 B012 0000 		call	#measure_verify
  42 0064 B012 0000 		call	#Vd_calculate
  43 0068 B012 0000 		call	#fine_inject
  44               	;	mov     #0x3333, @r7	        ; Record Injection 0x3333 
  45               	;	incd	r7
  46               	;	mov     r10, @r7	        ; Record time 
  47               	;	incd	r7
  48               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  49               	;	call	#block_measure
  50 006c 1F83      	        dec.w   r15
  51 006e 0124      	        jz      fine_loop_e
  52 0070 F53F      		jmp	fine_loop_s
  53               	fine_loop_e:
  54               	
  55               	;	mov	#31, r15
  56 0072 1F43      		mov	#1, r15
  57               	last_measure_loop_s:
  58 0074 B740 3333 		mov     #0x3333, @r7	        ; Record Injection 0x3333 
  58      0000 
  59 007a 2753      		incd	r7
  60 007c 874A 0000 		mov     r10, @r7	        ; Record time 
  61 0080 2753      		incd	r7
  62               	;	mov	#0xC000, r13		;gate_s = 1.2V @ IVDD 2.5V
  63 0082 3D40 00A0 		mov	#0xA000, r13		;gate_s = 0.8V @ IVDD 2.5V
  64 0086 B012 0000 		call	#block_measure
  65 008a 1F83      	        dec.w   r15
  66 008c 0124      	        jz      last_measure_loop_e
  67 008e F23F      		jmp	last_measure_loop_s
  68               	last_measure_loop_e:
  69               	
  70 0090 B743 0000 		mov	#0xFFFF, @r7		; Data End
  71 0094 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
  72 0098 523D      		jmp     end_of_test
  73               	
  74               	fine_inject:
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 11


  75 009a 3B40 0070 		mov	#0x7000, r11
  76 009e 2C4B      		mov	@r11, r12		; No. of FGs 
  77 00a0 B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  77      0C0B 
  78 00a6 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  78      6401 
  79 00ac B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  79      6001 
  80 00b2 B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  81               	fine_inject_set_s:
  82 00b6 2B53      		incd	r11
  83 00b8 A24B 080B 		mov     @r11,    &ROW_SEL
  84 00bc 2B53      		incd	r11
  85 00be A24B 0A0B 	        mov     @r11,    &COL_SEL
  86 00c2 2B53      		incd	r11
  87 00c4 2B53      		incd	r11
  88 00c6 2B53      		incd	r11
  89 00c8 284B      	        mov     @r11,    r8		; Read Vd
  90 00ca 0893      		cmp	#0x0000, r8
  91 00cc 1E24      		jeq	fine_inject_skip
  92 00ce B240 0040 		mov	#FPH_GATE_S_OTA, &GATE_S	; gate_s 
  92      020B 
  93 00d4 B240 6000 		mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
  93      100B 
  94 00da B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
  94      120B 
  95 00e0 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  95      000B 
  96 00e6 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
  96      6001 
  97 00ec 2543      		mov     #2, r5             	; Number of ms
  98 00ee B012 0000 		call    #wait_ms                ; Call the waiting function
  99               		;mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e:
 100 00f2 8248 000B 		mov 	r8, &DRAIN_CTRL	
 101 00f6 1543      	        mov     #FPH_INJ_T_OTA, r5    	; Number of 10us to inject
 102 00f8 B012 0000 		call    #wait_10us             	; Call the waiting function
 103 00fc 1A53      		add     #FPH_INJ_T_OTA, r10    	; Calculate time
 104 00fe B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 104      000B 
 105 0104 1543      		mov     #1, r5             	; Number of ms
 106 0106 B012 0000 		call    #wait_ms                ; Call the waiting function
 107               	fine_inject_skip:
 108 010a 1C83      	       	dec.w   r12
 109 010c 0124      	        jz      fine_inject_e
 110 010e D33F      	 	jmp	fine_inject_set_s
 111               	fine_inject_e:
 112 0110 A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
 113 0114 2543      		mov     #2, r5             	; Number of ms
 114 0116 B012 0000 		call    #wait_ms                ; Call the waiting function
 115 011a B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 115      6001 
 116 0120 1543      		mov     #1, r5             	; Number of ms
 117 0122 B012 0000 		call    #wait_ms                ; Call the waiting function
 118 0126 A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 119 012a B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 119      100B 
 120 0130 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 12


 120      120B 
 121 0136 1543      		mov     #1, r5             	; Number of ms
 122 0138 B012 0000 		call    #wait_ms                ; Call the waiting function
 123 013c 3041      		ret
 124               	
 125               	measure_verify:
 126 013e 3B40 0070 		mov	#0x7000, r11
 127 0142 2C4B      		mov	@r11, r12		; No. of FGs 
 128 0144 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 128      0C0B 
 129 014a B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 129      6401 
 130 0150 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 130      6001 
 131 0156 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 132               	measure_verify_s:
 133 015a 2B53      		incd	r11
 134 015c A24B 080B 		mov     @r11,    &ROW_SEL
 135 0160 2B53      		incd	r11
 136 0162 A24B 0A0B 	        mov     @r11,    &COL_SEL
 137 0166 2B53      		incd	r11
 138               	;	mov	@r11, r8
 139 0168 2B53      		incd	r11
 140 016a 2B53      		incd	r11
 141 016c 294B      		mov	@r11, r9		; Read Vd
 142 016e 0993      		cmp	#0x0000, r9
 143 0170 3F24      		jeq	measure_verify_skip
 144 0172 824D 020B 		mov 	r13, &GATE_S
 145 0176 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 145      100B 
 146 017c B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 146      120B 
 147 0182 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 147      000B 
 148 0188 2543      	        mov     #2, r5             	; Number of ms
 149 018a B012 0000 		call    #wait_ms                ; Call the waiting function
 150 018e B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 150      000B 
 151 0194 3540 0A00 	        mov     #10, r5             	; Number of ms
 152 0198 B012 0000 	        call    #wait_ms                ; Call the waiting function
 153               	
 154 019c 2E42      		mov	#4, r14			; # for current measure average 
 155 019e 0943      		mov	#0, r9
 156               	measure_v9_average_s:
 157 01a0 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 157      0C0B 
 158 01a6 3540 0500 	        mov     #5, r5             	; Number of ms
 159 01aa B012 0000 		call    #wait_ms                ; Call the waiting function
 160 01ae 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 161               		;mov     &ADC, r9	        ; Get value in counter
 162 01b2 1952 040B 		add     &ADC, r9	        ; Get value in counter
 163 01b6 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 163      0C0B 
 164 01bc 3540 0A00 	        mov     #10, r5             	; Number of ms
 165 01c0 B012 0000 	        call    #wait_10us                ; Call the waiting function
 166 01c4 1E83      		dec.w   r14
 167 01c6 0124      	        jz      measure_v9_average_e
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 13


 168 01c8 EB3F      		jmp	measure_v9_average_s
 169               	measure_v9_average_e:
 170 01ca 0910      		rrc	r9
 171 01cc 0910      		rrc	r9
 172 01ce 39C0 00C0 		bic	#0xc000, r9
 173               	
 174 01d2 2B83      		decd	r11
 175 01d4 2B83      		decd	r11
 176 01d6 284B      		mov	@r11, r8
 177 01d8 2B53      		incd	r11
 178 01da 2B53      		incd	r11
 179               	
 180 01dc 0998      		cmp	r8, r9
 181 01de 0330      		jn	status_1
 182 01e0 8B43 0000 		mov	#0x0000, @r11		; Injection over
 183 01e4 053C      		jmp	measure_verify_skip	
 184               	status_1:
 185 01e6 2B83      		decd	r11
 186 01e8 0889      		sub	r9, r8
 187 01ea 8B48 0000 		mov	r8, @r11
 188 01ee 2B53      		incd	r11
 189               	measure_verify_skip:
 190 01f0 1C83      	        dec.w   r12
 191 01f2 0124      	        jz      measure_verify_e
 192 01f4 B23F      		jmp	measure_verify_s
 193               	measure_verify_e:
 194 01f6 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 194      000B 
 195 01fc B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 195      6001 
 196 0202 3041      		ret
 197               	
 198               	Vd_calculate:
 199 0204 3B40 0070 		mov	#0x7000, r11
 200 0208 2C4B      		mov	@r11, r12		; No. of FGs 
 201               	Vd_cal_s:
 202 020a 2B53      		incd	r11			; @ Row_Sel
 203 020c 2B53      		incd	r11			; @ Col_Sel
 204 020e 2B53      		incd	r11	
 205 0210 284B      		mov	@r11, r8		; @ Target
 206 0212 2B53      		incd	r11	
 207 0214 294B      		mov	@r11, r9		; @ diff_for_Vd2
 208 0216 2B53      		incd	r11		
 209 0218 2E4B      		mov	@r11, r14		; @ Vd 
 210 021a 0E93      		cmp	#0x0000, r14
 211 021c 2624      		jeq	No_calculation
 212 021e 0889      		sub	r9, r8			; r8 = r8(target)-r9(diff) = Istart
 213 0220 3880 9011 		sub	#ADC_1nA, r8		; r8 = r8(Istart)-ADC_1nA(1nA) = diff_for_Vd1
 214 0224 0893      		cmp	#0, r8		        ; If r8(Vd1) < 0,
 215 0226 0134      		jge	Jump_r8_0
 216 0228 0843      		mov	#0, r8  		; r8 = 0
 217               	Jump_r8_0:
 218 022a 0810      		rrc	r8
 219 022c 0810      		rrc	r8
 220 022e 0810      		rrc	r8
 221 0230 0810      		rrc	r8
 222 0232 0810      		rrc	r8
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 14


 223 0234 0810      		rrc	r8
 224 0236 0810      		rrc	r8
 225 0238 0810      		rrc	r8
 226 023a 38C0 C0FF 		bic	#0xffc0, r8
 227 023e 0910      		rrc	r9
 228 0240 0910      		rrc	r9
 229 0242 0910      		rrc	r9
 230 0244 39C0 00FF 		bic	#0xff00, r9
 231 0248 3950 1500 		add	#FPH_VD_OS_OTA, r9                 ; Vd table offset
 232               	        ;sub     r8, r9
 233 024c 0958      	        add     r8, r9
 234 024e 0993      	        cmp	#0, r9		        ; If r8(Vd1) < 0,
 235 0250 0134      		jge	Jump_r9_0
 236 0252 0943      		mov	#0, r9  		; r8 = 0
 237               	Jump_r9_0:
 238 0254 0969      	        rlc	r9
 239 0256 19C3      		bic	#0x0001, r9
 240 0258 3950 0068 		add	#0x6800, r9
 241               	
 242 025c 2B83      		decd	r11
 243 025e 8B49 0000 		mov	r9, @r11
 244               	;	decd	r11
 245               	;	mov	r8, @r11
 246               	;	incd	r11
 247 0262 2B53      		incd	r11
 248               	
 249 0264 2E49      	 	mov	@r9, r14
 250 0266 8B4E 0000 		mov	r14, @r11
 251               	No_calculation:
 252 026a 1C83      	        dec.w   r12
 253 026c 0124      	        jz      Vd_cal_e
 254 026e CD3F      		jmp	Vd_cal_s
 255               	Vd_cal_e:
 256 0270 3041      		ret
 257               	
 258               	block_measure:
 259 0272 3B40 0070 		mov	#0x7000, r11
 260 0276 2C4B      		mov	@r11, r12		; No. of FGs 
 261 0278 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 261      0C0B 
 262 027e B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 262      6401 
 263 0284 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 263      6001 
 264 028a A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 265               	block_measure_s:
 266 028e 2B53      		incd	r11
 267 0290 A24B 080B 		mov     @r11,    &ROW_SEL
 268 0294 2B53      		incd	r11
 269 0296 A24B 0A0B 	        mov     @r11,    &COL_SEL
 270 029a 2B53      		incd	r11
 271 029c 2B53      		incd	r11
 272 029e 2B53      		incd	r11
 273 02a0 824D 020B 		mov 	r13, &GATE_S
 274 02a4 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 274      100B 
 275 02aa B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 15


 275      120B 
 276 02b0 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 276      000B 
 277 02b6 2543      	        mov     #2, r5             	; Number of ms
 278 02b8 B012 0000 		call    #wait_ms                ; Call the waiting function
 279 02bc B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 279      000B 
 280 02c2 3540 0A00 	        mov     #10, r5             	; Number of ms
 281 02c6 B012 0000 	        call    #wait_ms                ; Call the waiting function
 282               	
 283 02ca 2E42      		mov	#4, r14			; # for current measure average 
 284 02cc 0943      		mov	#0, r9
 285               	measure_9_average_s:
 286 02ce B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 286      0C0B 
 287 02d4 3540 0500 	        mov     #5, r5             	; Number of ms
 288 02d8 B012 0000 		call    #wait_ms                ; Call the waiting function
 289 02dc 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 290               		;mov     &ADC, r9	        ; Get value in counter
 291 02e0 1952 040B 		add     &ADC, r9	        ; Get value in counter
 292 02e4 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 292      0C0B 
 293 02ea 3540 0A00 	        mov     #10, r5             	; Number of ms
 294 02ee B012 0000 	        call    #wait_10us                ; Call the waiting function
 295 02f2 1E83      		dec.w   r14
 296 02f4 0124      	        jz      measure_9_average_e
 297 02f6 EB3F      		jmp	measure_9_average_s
 298               	measure_9_average_e:
 299 02f8 0910      		rrc	r9
 300 02fa 0910      		rrc	r9
 301 02fc 39C0 00C0 		bic	#0xc000, r9
 302               	
 303 0300 8749 0000 		mov     r9, @r7			; Get value in counter
 304 0304 2753      		incd	r7
 305 0306 1C83      	        dec.w   r12
 306 0308 0124      	        jz      block_measure_e
 307 030a C13F      		jmp	block_measure_s
 308               	block_measure_e:
 309 030c B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 309      000B 
 310 0312 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 310      6001 
 311 0318 3041      		ret
 312               	
 313               	wait_ms:
 314 031a 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 315 031e 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 316               	wait_ms_loop:
 317 0320 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 318 0322 FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 319 0324 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 320 0326 1583      	        dec.w   r5                      ; Decrement number of ms total
 321 0328 FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
 322 032a 3041      	        ret    
 323               	 
 324               	wait_10us:
 325 032c 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 16


 326 0330 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 327               	wait_10us_loop:
 328 0332 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 329 0334 FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 330 0336 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 331 0338 1583      	        dec.w   r5                      ; Decrement number of ms total
 332 033a FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 333 033c 3041      	        ret   
 334               	
 335               	end_of_test:
 336 033e 8243 5800 		mov	#0x0000, &BCSCTL2
 337 0342 0343      		nop
 338 0344 3043      		br #0xffff
 339               	
 340               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 341               	.section .vectors, "a"
 342 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 343 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 344 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 345 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 346 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 347 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 348 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 349 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 350 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
 351 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 352 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 353 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 354 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 355 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
 356 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
 357 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 17


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 18


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 19


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 20


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
       chip_para.asm:7      *ABS*:00000003 TUN_TIME_SP
       chip_para.asm:8      *ABS*:00000002 R_TUN_TIME_SP
       chip_para.asm:9      *ABS*:00001388 INJ_TIME_SP_1
       chip_para.asm:10     *ABS*:000001f4 INJ_TIME_SP_2
       chip_para.asm:11     *ABS*:000000c8 INJ_TIME_SP_3
       chip_para.asm:12     *ABS*:000000c8 INJ_TIME_SP_4
       chip_para.asm:13     *ABS*:000000c8 INJ_TIME_SP_5
       chip_para.asm:14     *ABS*:0000003d INJ_TIME_SP_SUM
       chip_para.asm:16     *ABS*:000001f4 INJ_TIME_SP_RUN
       chip_para.asm:21     *ABS*:00001190 ADC_1nA
       chip_para.asm:24     *ABS*:00000028 TUN_TIME_TP_CAB
       chip_para.asm:25     *ABS*:00000028 R_TUN_TIME_TP_CAB
       chip_para.asm:28     *ABS*:00000040 RI_GATE_S_SWC
       chip_para.asm:29     *ABS*:0000172b RI_VC1_SWC
       chip_para.asm:30     *ABS*:0000169c RI_VC2_SWC
       chip_para.asm:31     *ABS*:000014ed RI_VC3_SWC
       chip_para.asm:32     *ABS*:00001190 RI_VC4_SWC
       chip_para.asm:33     *ABS*:0000ea0e RI_VD1_SWC
       chip_para.asm:34     *ABS*:0000fe0e RI_VD2_SWC
       chip_para.asm:35     *ABS*:00000000 RI_GATE_S_OTA
       chip_para.asm:36     *ABS*:00001a4c RI_VC1_OTA
       chip_para.asm:37     *ABS*:0000196c RI_VC2_OTA
       chip_para.asm:38     *ABS*:000016cd RI_VC3_OTA
       chip_para.asm:39     *ABS*:00001190 RI_VC4_OTA
       chip_para.asm:40     *ABS*:0000ea0e RI_VD1_OTA
       chip_para.asm:41     *ABS*:0000fe0e RI_VD2_OTA
       chip_para.asm:42     *ABS*:00000040 RI_GATE_S_OTAREF
       chip_para.asm:43     *ABS*:000017f7 RI_VC1_OTAREF
       chip_para.asm:44     *ABS*:00001754 RI_VC2_OTAREF
       chip_para.asm:45     *ABS*:00001568 RI_VC3_OTAREF
       chip_para.asm:46     *ABS*:00001190 RI_VC4_OTAREF
       chip_para.asm:47     *ABS*:0000d00e RI_VD1_OTAREF
       chip_para.asm:48     *ABS*:0000fe0e RI_VD2_OTAREF
       chip_para.asm:49     *ABS*:00000000 RI_GATE_S_MITE
       chip_para.asm:50     *ABS*:00001b7b RI_VC1_MITE
       chip_para.asm:51     *ABS*:00001a7d RI_VC2_MITE
       chip_para.asm:52     *ABS*:00001784 RI_VC3_MITE
       chip_para.asm:53     *ABS*:00001190 RI_VC4_MITE
       chip_para.asm:54     *ABS*:0000ea0e RI_VD1_MITE
       chip_para.asm:55     *ABS*:0000fe0e RI_VD2_MITE
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 21


       chip_para.asm:57     *ABS*:00000000 RI_GATE_S_DIRSWC
       chip_para.asm:58     *ABS*:0000178f RI_VC1_DIRSWC
       chip_para.asm:59     *ABS*:000016f5 RI_VC2_DIRSWC
       chip_para.asm:60     *ABS*:000011a5 RI_VC3_DIRSWC
       chip_para.asm:62     *ABS*:00001190 RI_VC4_DIRSWC
       chip_para.asm:63     *ABS*:0000c80e RI_VD1_DIRSWC
       chip_para.asm:65     *ABS*:0000d00e RI_VD2_DIRSWC
       chip_para.asm:68     *ABS*:00000040 RIH_GATE_S_SWC
       chip_para.asm:69     *ABS*:0000172b RIH_VC1_SWC
       chip_para.asm:70     *ABS*:0000169c RIH_VC2_SWC
       chip_para.asm:71     *ABS*:000014ed RIH_VC3_SWC
       chip_para.asm:72     *ABS*:00001190 RIH_VC4_SWC
       chip_para.asm:73     *ABS*:0000ea0e RIH_VD1_SWC
       chip_para.asm:74     *ABS*:0000fe0e RIH_VD2_SWC
       chip_para.asm:75     *ABS*:00000000 RIH_GATE_S_OTA
       chip_para.asm:76     *ABS*:00001a4c RIH_VC1_OTA
       chip_para.asm:77     *ABS*:0000196c RIH_VC2_OTA
       chip_para.asm:78     *ABS*:000016cd RIH_VC3_OTA
       chip_para.asm:79     *ABS*:00001190 RIH_VC4_OTA
       chip_para.asm:80     *ABS*:0000ea0e RIH_VD1_OTA
       chip_para.asm:81     *ABS*:0000fe0e RIH_VD2_OTA
       chip_para.asm:83     *ABS*:00000040 RIL_GATE_S_SWC
       chip_para.asm:84     *ABS*:00001190 RIL_VC1_SWC
       chip_para.asm:85     *ABS*:00001043 RIL_VC2_SWC
       chip_para.asm:86     *ABS*:0000ea0e RIL_VD1_SWC
       chip_para.asm:87     *ABS*:00000000 RIL_GATE_S_OTA
       chip_para.asm:88     *ABS*:00001190 RIL_VC1_OTA
       chip_para.asm:89     *ABS*:0000104b RIL_VC2_OTA
       chip_para.asm:90     *ABS*:0000ea0e RIL_VD1_OTA
       chip_para.asm:91     *ABS*:00000040 RIL_GATE_S_OTAREF
       chip_para.asm:92     *ABS*:00001190 RIL_VC1_OTAREF
       chip_para.asm:93     *ABS*:0000104e RIL_VC2_OTAREF
       chip_para.asm:94     *ABS*:0000d00e RIL_VD1_OTAREF
       chip_para.asm:95     *ABS*:00000000 RIL_GATE_S_MITE
       chip_para.asm:96     *ABS*:00001190 RIL_VC1_MITE
       chip_para.asm:97     *ABS*:00001059 RIL_VC2_MITE
       chip_para.asm:98     *ABS*:0000ea0e RIL_VD1_MITE
       chip_para.asm:99     *ABS*:00000040 RIL_GATE_S_DIRSWC
       chip_para.asm:100    *ABS*:00001190 RIL_VC1_DIRSWC
       chip_para.asm:101    *ABS*:00001043 RIL_VC2_DIRSWC
       chip_para.asm:102    *ABS*:0000ea0e RIL_VD1_DIRSWC
       chip_para.asm:105    *ABS*:00005800 FCP_GATE_S_SWC
       chip_para.asm:106    *ABS*:00000001 FCP_INJ_T_SWC
       chip_para.asm:107    *ABS*:00004a00 FCP_GATE_S_OTA
       chip_para.asm:108    *ABS*:00000003 FCP_INJ_T_OTA
       chip_para.asm:109    *ABS*:00004a00 FCP_GATE_S_OTAREF
       chip_para.asm:110    *ABS*:00000006 FCP_INJ_T_OTAREF
       chip_para.asm:111    *ABS*:00004a00 FCP_GATE_S_MITE
       chip_para.asm:112    *ABS*:00000003 FCP_INJ_T_MITE
       chip_para.asm:113    *ABS*:00006200 FCP_GATE_S_DIRSWC
       chip_para.asm:114    *ABS*:00000001 FCP_INJ_T_DIRSWC
       chip_para.asm:116    *ABS*:00005800 FCPH_GATE_S_SWC
       chip_para.asm:117    *ABS*:00000001 FCPH_INJ_T_SWC
       chip_para.asm:118    *ABS*:00004a00 FCPH_GATE_S_OTA
       chip_para.asm:119    *ABS*:00000003 FCPH_INJ_T_OTA
       chip_para.asm:121    *ABS*:00004400 FCPL_GATE_S_SWC
       chip_para.asm:122    *ABS*:00000001 FCPL_INJ_T_SWC
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 22


       chip_para.asm:123    *ABS*:00003200 FCPL_GATE_S_OTA
       chip_para.asm:124    *ABS*:00000003 FCPL_INJ_T_OTA
       chip_para.asm:125    *ABS*:00003400 FCPL_GATE_S_OTAREF
       chip_para.asm:126    *ABS*:00000006 FCPL_INJ_T_OTAREF
       chip_para.asm:127    *ABS*:00003200 FCPL_GATE_S_MITE
       chip_para.asm:128    *ABS*:00000003 FCPL_INJ_T_MITE
       chip_para.asm:129    *ABS*:00004400 FCPL_GATE_S_DIRSWC
       chip_para.asm:130    *ABS*:00000001 FCPL_INJ_T_DIRSWC
       chip_para.asm:133    *ABS*:00005800 MCP_GATE_S_SWC
       chip_para.asm:134    *ABS*:00000001 MCP_INJ_T_SWC
       chip_para.asm:135    *ABS*:00004a00 MCP_GATE_S_OTA
       chip_para.asm:136    *ABS*:00000003 MCP_INJ_T_OTA
       chip_para.asm:137    *ABS*:00004a00 MCP_GATE_S_OTAREF
       chip_para.asm:138    *ABS*:00000006 MCP_INJ_T_OTAREF
       chip_para.asm:139    *ABS*:00004a00 MCP_GATE_S_MITE
       chip_para.asm:140    *ABS*:00000003 MCP_INJ_T_MITE
       chip_para.asm:141    *ABS*:00006200 MCP_GATE_S_DIRSWC
       chip_para.asm:142    *ABS*:00000001 MCP_INJ_T_DIRSWC
       chip_para.asm:144    *ABS*:00005e00 MCPH_GATE_S_SWC
       chip_para.asm:146    *ABS*:00000001 MCPH_INJ_T_SWC
       chip_para.asm:147    *ABS*:00005600 MCPH_GATE_S_OTA
       chip_para.asm:148    *ABS*:00000003 MCPH_INJ_T_OTA
       chip_para.asm:150    *ABS*:00004400 MCPL_GATE_S_SWC
       chip_para.asm:151    *ABS*:00000001 MCPL_INJ_T_SWC
       chip_para.asm:152    *ABS*:00003200 MCPL_GATE_S_OTA
       chip_para.asm:153    *ABS*:00000003 MCPL_INJ_T_OTA
       chip_para.asm:154    *ABS*:00003400 MCPL_GATE_S_OTAREF
       chip_para.asm:155    *ABS*:00000006 MCPL_INJ_T_OTAREF
       chip_para.asm:156    *ABS*:00003200 MCPL_GATE_S_MITE
       chip_para.asm:157    *ABS*:00000003 MCPL_INJ_T_MITE
       chip_para.asm:158    *ABS*:00004400 MCPL_GATE_S_DIRSWC
       chip_para.asm:159    *ABS*:00000001 MCPL_INJ_T_DIRSWC
       chip_para.asm:162    *ABS*:00004600 FPS_GATE_S_SWC
       chip_para.asm:163    *ABS*:00000001 FPS_INJ_T_SWC
       chip_para.asm:164    *ABS*:0000002e FPS_VD_OS_SWC
       chip_para.asm:165    *ABS*:00004600 FPS_GATE_S_OTA
       chip_para.asm:166    *ABS*:00000003 FPS_INJ_T_OTA
       chip_para.asm:167    *ABS*:0000002e FPS_VD_OS_OTA
       chip_para.asm:168    *ABS*:00004400 FPS_GATE_S_OTAREF
       chip_para.asm:169    *ABS*:00000006 FPS_INJ_T_OTAREF
       chip_para.asm:170    *ABS*:0000002e FPS_VD_OS_OTAREF
       chip_para.asm:171    *ABS*:00004600 FPS_GATE_S_MITE
       chip_para.asm:172    *ABS*:00000003 FPS_INJ_T_MITE
       chip_para.asm:173    *ABS*:0000002e FPS_VD_OS_MITE
       chip_para.asm:174    *ABS*:00006000 FPS_GATE_S_DIRSWC
       chip_para.asm:175    *ABS*:00000001 FPS_INJ_T_DIRSWC
       chip_para.asm:176    *ABS*:0000002e FPS_VD_OS_DIRSWC
       chip_para.asm:178    *ABS*:00004800 FPA_GATE_S_SWC
       chip_para.asm:179    *ABS*:00000001 FPA_INJ_T_SWC
       chip_para.asm:180    *ABS*:00000015 FPA_VD_OS_SWC
       chip_para.asm:181    *ABS*:00004000 FPA_GATE_S_OTA
       chip_para.asm:182    *ABS*:00000003 FPA_INJ_T_OTA
       chip_para.asm:183    *ABS*:00000015 FPA_VD_OS_OTA
       chip_para.asm:184    *ABS*:00003e00 FPA_GATE_S_OTAREF
       chip_para.asm:185    *ABS*:00000006 FPA_INJ_T_OTAREF
       chip_para.asm:186    *ABS*:00000015 FPA_VD_OS_OTAREF
       chip_para.asm:187    *ABS*:00004a00 FPA_GATE_S_MITE
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 23


       chip_para.asm:188    *ABS*:00000003 FPA_INJ_T_MITE
       chip_para.asm:189    *ABS*:00000015 FPA_VD_OS_MITE
       chip_para.asm:190    *ABS*:00006e00 FPA_GATE_S_DIRSWC
       chip_para.asm:191    *ABS*:00000001 FPA_INJ_T_DIRSWC
       chip_para.asm:192    *ABS*:00000019 FPA_VD_OS_DIRSWC
       chip_para.asm:196    *ABS*:00003000 FPH_GATE_S_SWC
       chip_para.asm:197    *ABS*:00000001 FPH_INJ_T_SWC
       chip_para.asm:198    *ABS*:00000015 FPH_VD_OS_SWC
       chip_para.asm:199    *ABS*:00004000 FPH_GATE_S_OTA
       chip_para.asm:200    *ABS*:00000001 FPH_INJ_T_OTA
       chip_para.asm:201    *ABS*:00000015 FPH_VD_OS_OTA
       chip_para.asm:203    *ABS*:00003c00 FPL_GATE_S_SWC
       chip_para.asm:204    *ABS*:00000001 FPL_INJ_T_SWC
       chip_para.asm:205    *ABS*:0000002e FPL_VD_OS_SWC
       chip_para.asm:206    *ABS*:00002c00 FPL_GATE_S_OTA
       chip_para.asm:207    *ABS*:00000003 FPL_INJ_T_OTA
       chip_para.asm:208    *ABS*:0000002e FPL_VD_OS_OTA
       chip_para.asm:209    *ABS*:00003400 FPL_GATE_S_OTAREF
       chip_para.asm:210    *ABS*:00000007 FPL_INJ_T_OTAREF
       chip_para.asm:211    *ABS*:0000002e FPL_VD_OS_OTAREF
       chip_para.asm:212    *ABS*:00002e00 FPL_GATE_S_MITE
       chip_para.asm:213    *ABS*:00000003 FPL_INJ_T_MITE
       chip_para.asm:214    *ABS*:0000002e FPL_VD_OS_MITE
       chip_para.asm:215    *ABS*:00003c00 FPL_GATE_S_DIRSWC
       chip_para.asm:216    *ABS*:00000001 FPL_INJ_T_DIRSWC
       chip_para.asm:217    *ABS*:0000002e FPL_VD_OS_DIRSWC
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:6      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:11     .text:0000000e init_wait
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:258    .text:00000272 block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:38     .text:0000005c fine_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:125    .text:0000013e measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:198    .text:00000204 Vd_calculate
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:74     .text:0000009a fine_inject
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:53     .text:00000072 fine_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:57     .text:00000074 last_measure_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:68     .text:00000090 last_measure_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:335    .text:0000033e end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:81     .text:000000b6 fine_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:107    .text:0000010a fine_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:313    .text:0000031a wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:324    .text:0000032c wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:111    .text:00000110 fine_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:132    .text:0000015a measure_verify_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:189    .text:000001f0 measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:156    .text:000001a0 measure_v9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:169    .text:000001ca measure_v9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:184    .text:000001e6 status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:193    .text:000001f6 measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:201    .text:0000020a Vd_cal_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:251    .text:0000026a No_calculation
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:217    .text:0000022a Jump_r8_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:237    .text:00000254 Jump_r9_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:255    .text:00000270 Vd_cal_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:265    .text:0000028e block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:285    .text:000002ce measure_9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:298    .text:000002f8 measure_9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:308    .text:0000030c block_measure_e
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43 			page 24


/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:316    .text:00000320 wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_highaboveVt_m_ave_04_CAB_ota.s43:327    .text:00000332 wait_10us_loop

NO UNDEFINED SYMBOLS

fine_program_highaboveVt_m_ave_04_CAB_ota.o:     file format elf32-msp430
fine_program_highaboveVt_m_ave_04_CAB_ota.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000346  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  0000037a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000037a  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  0000037a  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
00000003 l       *ABS*	00000000 TUN_TIME_SP
00000002 l       *ABS*	00000000 R_TUN_TIME_SP
00001388 l       *ABS*	00000000 INJ_TIME_SP_1
000001f4 l       *ABS*	00000000 INJ_TIME_SP_2
000000c8 l       *ABS*	00000000 INJ_TIME_SP_3
000000c8 l       *ABS*	00000000 INJ_TIME_SP_4
000000c8 l       *ABS*	00000000 INJ_TIME_SP_5
0000003d l       *ABS*	00000000 INJ_TIME_SP_SUM
000001f4 l       *ABS*	00000000 INJ_TIME_SP_RUN
00001190 l       *ABS*	00000000 ADC_1nA
00000028 l       *ABS*	00000000 TUN_TIME_TP_CAB
00000028 l       *ABS*	00000000 R_TUN_TIME_TP_CAB
00000040 l       *ABS*	00000000 RI_GATE_S_SWC
0000172b l       *ABS*	00000000 RI_VC1_SWC
0000169c l       *ABS*	00000000 RI_VC2_SWC
000014ed l       *ABS*	00000000 RI_VC3_SWC
00001190 l       *ABS*	00000000 RI_VC4_SWC
0000ea0e l       *ABS*	00000000 RI_VD1_SWC
0000fe0e l       *ABS*	00000000 RI_VD2_SWC
00000000 l       *ABS*	00000000 RI_GATE_S_OTA
00001a4c l       *ABS*	00000000 RI_VC1_OTA
0000196c l       *ABS*	00000000 RI_VC2_OTA
000016cd l       *ABS*	00000000 RI_VC3_OTA
00001190 l       *ABS*	00000000 RI_VC4_OTA
0000ea0e l       *ABS*	00000000 RI_VD1_OTA
0000fe0e l       *ABS*	00000000 RI_VD2_OTA
00000040 l       *ABS*	00000000 RI_GATE_S_OTAREF
000017f7 l       *ABS*	00000000 RI_VC1_OTAREF
00001754 l       *ABS*	00000000 RI_VC2_OTAREF
00001568 l       *ABS*	00000000 RI_VC3_OTAREF
00001190 l       *ABS*	00000000 RI_VC4_OTAREF
0000d00e l       *ABS*	00000000 RI_VD1_OTAREF
0000fe0e l       *ABS*	00000000 RI_VD2_OTAREF
00000000 l       *ABS*	00000000 RI_GATE_S_MITE
00001b7b l       *ABS*	00000000 RI_VC1_MITE
00001a7d l       *ABS*	00000000 RI_VC2_MITE
00001784 l       *ABS*	00000000 RI_VC3_MITE
00001190 l       *ABS*	00000000 RI_VC4_MITE
0000ea0e l       *ABS*	00000000 RI_VD1_MITE
0000fe0e l       *ABS*	00000000 RI_VD2_MITE
00000000 l       *ABS*	00000000 RI_GATE_S_DIRSWC
0000178f l       *ABS*	00000000 RI_VC1_DIRSWC
000016f5 l       *ABS*	00000000 RI_VC2_DIRSWC
000011a5 l       *ABS*	00000000 RI_VC3_DIRSWC
00001190 l       *ABS*	00000000 RI_VC4_DIRSWC
0000c80e l       *ABS*	00000000 RI_VD1_DIRSWC
0000d00e l       *ABS*	00000000 RI_VD2_DIRSWC
00000040 l       *ABS*	00000000 RIH_GATE_S_SWC
0000172b l       *ABS*	00000000 RIH_VC1_SWC
0000169c l       *ABS*	00000000 RIH_VC2_SWC
000014ed l       *ABS*	00000000 RIH_VC3_SWC
00001190 l       *ABS*	00000000 RIH_VC4_SWC
0000ea0e l       *ABS*	00000000 RIH_VD1_SWC
0000fe0e l       *ABS*	00000000 RIH_VD2_SWC
00000000 l       *ABS*	00000000 RIH_GATE_S_OTA
00001a4c l       *ABS*	00000000 RIH_VC1_OTA
0000196c l       *ABS*	00000000 RIH_VC2_OTA
000016cd l       *ABS*	00000000 RIH_VC3_OTA
00001190 l       *ABS*	00000000 RIH_VC4_OTA
0000ea0e l       *ABS*	00000000 RIH_VD1_OTA
0000fe0e l       *ABS*	00000000 RIH_VD2_OTA
00000040 l       *ABS*	00000000 RIL_GATE_S_SWC
00001190 l       *ABS*	00000000 RIL_VC1_SWC
00001043 l       *ABS*	00000000 RIL_VC2_SWC
0000ea0e l       *ABS*	00000000 RIL_VD1_SWC
00000000 l       *ABS*	00000000 RIL_GATE_S_OTA
00001190 l       *ABS*	00000000 RIL_VC1_OTA
0000104b l       *ABS*	00000000 RIL_VC2_OTA
0000ea0e l       *ABS*	00000000 RIL_VD1_OTA
00000040 l       *ABS*	00000000 RIL_GATE_S_OTAREF
00001190 l       *ABS*	00000000 RIL_VC1_OTAREF
0000104e l       *ABS*	00000000 RIL_VC2_OTAREF
0000d00e l       *ABS*	00000000 RIL_VD1_OTAREF
00000000 l       *ABS*	00000000 RIL_GATE_S_MITE
00001190 l       *ABS*	00000000 RIL_VC1_MITE
00001059 l       *ABS*	00000000 RIL_VC2_MITE
0000ea0e l       *ABS*	00000000 RIL_VD1_MITE
00000040 l       *ABS*	00000000 RIL_GATE_S_DIRSWC
00001190 l       *ABS*	00000000 RIL_VC1_DIRSWC
00001043 l       *ABS*	00000000 RIL_VC2_DIRSWC
0000ea0e l       *ABS*	00000000 RIL_VD1_DIRSWC
00005800 l       *ABS*	00000000 FCP_GATE_S_SWC
00000001 l       *ABS*	00000000 FCP_INJ_T_SWC
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTA
00000003 l       *ABS*	00000000 FCP_INJ_T_OTA
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FCP_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 FCP_GATE_S_MITE
00000003 l       *ABS*	00000000 FCP_INJ_T_MITE
00006200 l       *ABS*	00000000 FCP_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FCP_INJ_T_DIRSWC
00005800 l       *ABS*	00000000 FCPH_GATE_S_SWC
00000001 l       *ABS*	00000000 FCPH_INJ_T_SWC
00004a00 l       *ABS*	00000000 FCPH_GATE_S_OTA
00000003 l       *ABS*	00000000 FCPH_INJ_T_OTA
00004400 l       *ABS*	00000000 FCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 FCPL_GATE_S_OTA
00000003 l       *ABS*	00000000 FCPL_INJ_T_OTA
00003400 l       *ABS*	00000000 FCPL_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FCPL_INJ_T_OTAREF
00003200 l       *ABS*	00000000 FCPL_GATE_S_MITE
00000003 l       *ABS*	00000000 FCPL_INJ_T_MITE
00004400 l       *ABS*	00000000 FCPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FCPL_INJ_T_DIRSWC
00005800 l       *ABS*	00000000 MCP_GATE_S_SWC
00000001 l       *ABS*	00000000 MCP_INJ_T_SWC
00004a00 l       *ABS*	00000000 MCP_GATE_S_OTA
00000003 l       *ABS*	00000000 MCP_INJ_T_OTA
00004a00 l       *ABS*	00000000 MCP_GATE_S_OTAREF
00000006 l       *ABS*	00000000 MCP_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 MCP_GATE_S_MITE
00000003 l       *ABS*	00000000 MCP_INJ_T_MITE
00006200 l       *ABS*	00000000 MCP_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 MCP_INJ_T_DIRSWC
00005e00 l       *ABS*	00000000 MCPH_GATE_S_SWC
00000001 l       *ABS*	00000000 MCPH_INJ_T_SWC
00005600 l       *ABS*	00000000 MCPH_GATE_S_OTA
00000003 l       *ABS*	00000000 MCPH_INJ_T_OTA
00004400 l       *ABS*	00000000 MCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 MCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 MCPL_GATE_S_OTA
00000003 l       *ABS*	00000000 MCPL_INJ_T_OTA
00003400 l       *ABS*	00000000 MCPL_GATE_S_OTAREF
00000006 l       *ABS*	00000000 MCPL_INJ_T_OTAREF
00003200 l       *ABS*	00000000 MCPL_GATE_S_MITE
00000003 l       *ABS*	00000000 MCPL_INJ_T_MITE
00004400 l       *ABS*	00000000 MCPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 MCPL_INJ_T_DIRSWC
00004600 l       *ABS*	00000000 FPS_GATE_S_SWC
00000001 l       *ABS*	00000000 FPS_INJ_T_SWC
0000002e l       *ABS*	00000000 FPS_VD_OS_SWC
00004600 l       *ABS*	00000000 FPS_GATE_S_OTA
00000003 l       *ABS*	00000000 FPS_INJ_T_OTA
0000002e l       *ABS*	00000000 FPS_VD_OS_OTA
00004400 l       *ABS*	00000000 FPS_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FPS_INJ_T_OTAREF
0000002e l       *ABS*	00000000 FPS_VD_OS_OTAREF
00004600 l       *ABS*	00000000 FPS_GATE_S_MITE
00000003 l       *ABS*	00000000 FPS_INJ_T_MITE
0000002e l       *ABS*	00000000 FPS_VD_OS_MITE
00006000 l       *ABS*	00000000 FPS_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPS_INJ_T_DIRSWC
0000002e l       *ABS*	00000000 FPS_VD_OS_DIRSWC
00004800 l       *ABS*	00000000 FPA_GATE_S_SWC
00000001 l       *ABS*	00000000 FPA_INJ_T_SWC
00000015 l       *ABS*	00000000 FPA_VD_OS_SWC
00004000 l       *ABS*	00000000 FPA_GATE_S_OTA
00000003 l       *ABS*	00000000 FPA_INJ_T_OTA
00000015 l       *ABS*	00000000 FPA_VD_OS_OTA
00003e00 l       *ABS*	00000000 FPA_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FPA_INJ_T_OTAREF
00000015 l       *ABS*	00000000 FPA_VD_OS_OTAREF
00004a00 l       *ABS*	00000000 FPA_GATE_S_MITE
00000003 l       *ABS*	00000000 FPA_INJ_T_MITE
00000015 l       *ABS*	00000000 FPA_VD_OS_MITE
00006e00 l       *ABS*	00000000 FPA_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPA_INJ_T_DIRSWC
00000019 l       *ABS*	00000000 FPA_VD_OS_DIRSWC
00003000 l       *ABS*	00000000 FPH_GATE_S_SWC
00000001 l       *ABS*	00000000 FPH_INJ_T_SWC
00000015 l       *ABS*	00000000 FPH_VD_OS_SWC
00004000 l       *ABS*	00000000 FPH_GATE_S_OTA
00000001 l       *ABS*	00000000 FPH_INJ_T_OTA
00000015 l       *ABS*	00000000 FPH_VD_OS_OTA
00003c00 l       *ABS*	00000000 FPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FPL_INJ_T_SWC
0000002e l       *ABS*	00000000 FPL_VD_OS_SWC
00002c00 l       *ABS*	00000000 FPL_GATE_S_OTA
00000003 l       *ABS*	00000000 FPL_INJ_T_OTA
0000002e l       *ABS*	00000000 FPL_VD_OS_OTA
00003400 l       *ABS*	00000000 FPL_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FPL_INJ_T_OTAREF
0000002e l       *ABS*	00000000 FPL_VD_OS_OTAREF
00002e00 l       *ABS*	00000000 FPL_GATE_S_MITE
00000003 l       *ABS*	00000000 FPL_INJ_T_MITE
0000002e l       *ABS*	00000000 FPL_VD_OS_MITE
00003c00 l       *ABS*	00000000 FPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPL_INJ_T_DIRSWC
0000002e l       *ABS*	00000000 FPL_VD_OS_DIRSWC
0000000e l       .text	00000000 init_wait
00000272 l       .text	00000000 block_measure
0000005c l       .text	00000000 fine_loop_s
0000013e l       .text	00000000 measure_verify
00000204 l       .text	00000000 Vd_calculate
0000009a l       .text	00000000 fine_inject
00000072 l       .text	00000000 fine_loop_e
00000074 l       .text	00000000 last_measure_loop_s
00000090 l       .text	00000000 last_measure_loop_e
0000033e l       .text	00000000 end_of_test
000000b6 l       .text	00000000 fine_inject_set_s
0000010a l       .text	00000000 fine_inject_skip
0000031a l       .text	00000000 wait_ms
0000032c l       .text	00000000 wait_10us
00000110 l       .text	00000000 fine_inject_e
0000015a l       .text	00000000 measure_verify_s
000001f0 l       .text	00000000 measure_verify_skip
000001a0 l       .text	00000000 measure_v9_average_s
000001ca l       .text	00000000 measure_v9_average_e
000001e6 l       .text	00000000 status_1
000001f6 l       .text	00000000 measure_verify_e
0000020a l       .text	00000000 Vd_cal_s
0000026a l       .text	00000000 No_calculation
0000022a l       .text	00000000 Jump_r8_0
00000254 l       .text	00000000 Jump_r9_0
00000270 l       .text	00000000 Vd_cal_e
0000028e l       .text	00000000 block_measure_s
000002ce l       .text	00000000 measure_9_average_s
000002f8 l       .text	00000000 measure_9_average_e
0000030c l       .text	00000000 block_measure_e
00000320 l       .text	00000000 wait_ms_loop
00000332 l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 3d4000a0 b0120000 3f403200 3d4000a0  =@......?@2.=@..
 0060 b0120000 b0120000 b0120000 1f830124  ...............$
 0070 f53f1f43 b7403333 00002753 874a0000  .?.C.@33..'S.J..
 0080 27533d40 00a0b012 00001f83 0124f23f  'S=@.........$.?
 0090 b7430000 82435800 523d3b40 00702c4b  .C...CX.R=;@.p,K
 00a0 b2400080 0c0bb240 04be6401 b2402400  .@.....@..d..@$.
 00b0 6001b243 0e0b2b53 a24b080b 2b53a24b  `..C..+S.K..+S.K
 00c0 0a0b2b53 2b532b53 284b0893 1e24b240  ..+S+S+S(K...$.@
 00d0 0040020b b2406000 100bb240 6000120b  .@...@`....@`...
 00e0 b2406600 000bb240 14006001 2543b012  .@f....@..`.%C..
 00f0 00008248 000b1543 b0120000 1a53b240  ...H...C.....S.@
 0100 6600000b 1543b012 00001c83 0124d33f  f....C.......$.?
 0110 a2426001 2543b012 0000b240 24006001  .B`.%C.....@$.`.
 0120 1543b012 0000a243 0e0bb240 4000100b  .C.....C...@@...
 0130 b2404000 120b1543 b0120000 30413b40  .@@....C....0A;@
 0140 00702c4b b2400080 0c0bb240 04be6401  .p,K.@.....@..d.
 0150 b2402400 6001a243 0e0b2b53 a24b080b  .@$.`..C..+S.K..
 0160 2b53a24b 0a0b2b53 2b532b53 294b0993  +S.K..+S+S+S)K..
 0170 3f24824d 020bb240 4000100b b2404000  ?$.M...@@....@@.
 0180 120bb240 6600000b 2543b012 0000b240  ...@f...%C.....@
 0190 a400000b 35400a00 b0120000 2e420943  ....5@.......B.C
 01a0 b24000b0 0c0b3540 0500b012 00008243  .@....5@.......C
 01b0 040b1952 040bb240 00800c0b 35400a00  ...R...@....5@..
 01c0 b0120000 1e830124 eb3f0910 091039c0  .......$.?....9.
 01d0 00c02b83 2b83284b 2b532b53 09980330  ..+.+.(K+S+S...0
 01e0 8b430000 053c2b83 08898b48 00002b53  .C...<+....H..+S
 01f0 1c830124 b23fb240 6600000b b2402400  ...$.?.@f....@$.
 0200 60013041 3b400070 2c4b2b53 2b532b53  `.0A;@.p,K+S+S+S
 0210 284b2b53 294b2b53 2e4b0e93 26240889  (K+S)K+S.K..&$..
 0220 38809011 08930134 08430810 08100810  8......4.C......
 0230 08100810 08100810 081038c0 c0ff0910  ..........8.....
 0240 09100910 39c000ff 39501500 09580993  ....9...9P...X..
 0250 01340943 096919c3 39500068 2b838b49  .4.C.i..9P.h+..I
 0260 00002b53 2e498b4e 00001c83 0124cd3f  ..+S.I.N.....$.?
 0270 30413b40 00702c4b b2400080 0c0bb240  0A;@.p,K.@.....@
 0280 04be6401 b2402400 6001a243 0e0b2b53  ..d..@$.`..C..+S
 0290 a24b080b 2b53a24b 0a0b2b53 2b532b53  .K..+S.K..+S+S+S
 02a0 824d020b b2404000 100bb240 4000120b  .M...@@....@@...
 02b0 b2406600 000b2543 b0120000 b240a400  .@f...%C.....@..
 02c0 000b3540 0a00b012 00002e42 0943b240  ..5@.......B.C.@
 02d0 00b00c0b 35400500 b0120000 8243040b  ....5@.......C..
 02e0 1952040b b2400080 0c0b3540 0a00b012  .R...@....5@....
 02f0 00001e83 0124eb3f 09100910 39c000c0  .....$.?....9...
 0300 87490000 27531c83 0124c13f b2406600  .I..'S...$.?.@f.
 0310 000bb240 24006001 30413440 fc0c0644  ...@$.`.0A4@...D
 0320 1683fe23 06441583 fb233041 34402200  ...#.D...#0A4@".
 0330 06441683 fe230644 1583fb23 30418243  .D...#.D...#0A.C
 0340 58000343 3043                        X..C0C          
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	3d 40 00 a0 	mov	#-24576,r13	;#0xa000
  54:	b0 12 00 00 	call	#0x0000	
			56: R_MSP430_16_BYTE	.text+0x272
  58:	3f 40 32 00 	mov	#50,	r15	;#0x0032

0000005c <fine_loop_s>:
  5c:	3d 40 00 a0 	mov	#-24576,r13	;#0xa000
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x13e
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0x204
  68:	b0 12 00 00 	call	#0x0000	
			6a: R_MSP430_16_BYTE	.text+0x9a
  6c:	1f 83       	dec	r15		
  6e:	01 24       	jz	$+4      	;abs 0x72
  70:	f5 3f       	jmp	$-20     	;abs 0x5c

00000072 <fine_loop_e>:
  72:	1f 43       	mov	#1,	r15	;r3 As==01

00000074 <last_measure_loop_s>:
  74:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  78:	00 00 
  7a:	27 53       	incd	r7		
  7c:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  80:	27 53       	incd	r7		
  82:	3d 40 00 a0 	mov	#-24576,r13	;#0xa000
  86:	b0 12 00 00 	call	#0x0000	
			88: R_MSP430_16_BYTE	.text+0x272
  8a:	1f 83       	dec	r15		
  8c:	01 24       	jz	$+4      	;abs 0x90
  8e:	f2 3f       	jmp	$-26     	;abs 0x74

00000090 <last_measure_loop_e>:
  90:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  94:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  98:	52 3d       	jmp	$+678    	;abs 0x33e

0000009a <fine_inject>:
  9a:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  9e:	2c 4b       	mov	@r11,	r12	
  a0:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  a4:	0c 0b 
  a6:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  aa:	64 01 
  ac:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  b0:	60 01 
  b2:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000b6 <fine_inject_set_s>:
  b6:	2b 53       	incd	r11		
  b8:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  bc:	2b 53       	incd	r11		
  be:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  c2:	2b 53       	incd	r11		
  c4:	2b 53       	incd	r11		
  c6:	2b 53       	incd	r11		
  c8:	28 4b       	mov	@r11,	r8	
  ca:	08 93       	tst	r8		
  cc:	1e 24       	jz	$+62     	;abs 0x10a
  ce:	b2 40 00 40 	mov	#16384,	&0x0b02	;#0x4000
  d2:	02 0b 
  d4:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  d8:	10 0b 
  da:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  de:	12 0b 
  e0:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  e4:	00 0b 
  e6:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  ea:	60 01 
  ec:	25 43       	mov	#2,	r5	;r3 As==10
  ee:	b0 12 00 00 	call	#0x0000	
			f0: R_MSP430_16_BYTE	.text+0x31a
  f2:	82 48 00 0b 	mov	r8,	&0x0b00	
  f6:	15 43       	mov	#1,	r5	;r3 As==01
  f8:	b0 12 00 00 	call	#0x0000	
			fa: R_MSP430_16_BYTE	.text+0x32c
  fc:	1a 53       	inc	r10		
  fe:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 102:	00 0b 
 104:	15 43       	mov	#1,	r5	;r3 As==01
 106:	b0 12 00 00 	call	#0x0000	
			108: R_MSP430_16_BYTE	.text+0x31a

0000010a <fine_inject_skip>:
 10a:	1c 83       	dec	r12		
 10c:	01 24       	jz	$+4      	;abs 0x110
 10e:	d3 3f       	jmp	$-88     	;abs 0xb6

00000110 <fine_inject_e>:
 110:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 114:	25 43       	mov	#2,	r5	;r3 As==10
 116:	b0 12 00 00 	call	#0x0000	
			118: R_MSP430_16_BYTE	.text+0x31a
 11a:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 11e:	60 01 
 120:	15 43       	mov	#1,	r5	;r3 As==01
 122:	b0 12 00 00 	call	#0x0000	
			124: R_MSP430_16_BYTE	.text+0x31a
 126:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 12a:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 12e:	10 0b 
 130:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 134:	12 0b 
 136:	15 43       	mov	#1,	r5	;r3 As==01
 138:	b0 12 00 00 	call	#0x0000	
			13a: R_MSP430_16_BYTE	.text+0x31a
 13c:	30 41       	ret			

0000013e <measure_verify>:
 13e:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 142:	2c 4b       	mov	@r11,	r12	
 144:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 148:	0c 0b 
 14a:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 14e:	64 01 
 150:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 154:	60 01 
 156:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000015a <measure_verify_s>:
 15a:	2b 53       	incd	r11		
 15c:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 160:	2b 53       	incd	r11		
 162:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 166:	2b 53       	incd	r11		
 168:	2b 53       	incd	r11		
 16a:	2b 53       	incd	r11		
 16c:	29 4b       	mov	@r11,	r9	
 16e:	09 93       	tst	r9		
 170:	3f 24       	jz	$+128    	;abs 0x1f0
 172:	82 4d 02 0b 	mov	r13,	&0x0b02	
 176:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 17a:	10 0b 
 17c:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 180:	12 0b 
 182:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 186:	00 0b 
 188:	25 43       	mov	#2,	r5	;r3 As==10
 18a:	b0 12 00 00 	call	#0x0000	
			18c: R_MSP430_16_BYTE	.text+0x31a
 18e:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 192:	00 0b 
 194:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 198:	b0 12 00 00 	call	#0x0000	
			19a: R_MSP430_16_BYTE	.text+0x31a
 19c:	2e 42       	mov	#4,	r14	;r2 As==10
 19e:	09 43       	clr	r9		

000001a0 <measure_v9_average_s>:
 1a0:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 1a4:	0c 0b 
 1a6:	35 40 05 00 	mov	#5,	r5	;#0x0005
 1aa:	b0 12 00 00 	call	#0x0000	
			1ac: R_MSP430_16_BYTE	.text+0x31a
 1ae:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1b2:	19 52 04 0b 	add	&0x0b04,r9	
 1b6:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1ba:	0c 0b 
 1bc:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1c0:	b0 12 00 00 	call	#0x0000	
			1c2: R_MSP430_16_BYTE	.text+0x32c
 1c4:	1e 83       	dec	r14		
 1c6:	01 24       	jz	$+4      	;abs 0x1ca
 1c8:	eb 3f       	jmp	$-40     	;abs 0x1a0

000001ca <measure_v9_average_e>:
 1ca:	09 10       	rrc	r9		
 1cc:	09 10       	rrc	r9		
 1ce:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 1d2:	2b 83       	decd	r11		
 1d4:	2b 83       	decd	r11		
 1d6:	28 4b       	mov	@r11,	r8	
 1d8:	2b 53       	incd	r11		
 1da:	2b 53       	incd	r11		
 1dc:	09 98       	cmp	r8,	r9	
 1de:	03 30       	jn	$+8      	;abs 0x1e6
 1e0:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1e4:	05 3c       	jmp	$+12     	;abs 0x1f0

000001e6 <status_1>:
 1e6:	2b 83       	decd	r11		
 1e8:	08 89       	sub	r9,	r8	
 1ea:	8b 48 00 00 	mov	r8,	0(r11)	;0x0000(r11)
 1ee:	2b 53       	incd	r11		

000001f0 <measure_verify_skip>:
 1f0:	1c 83       	dec	r12		
 1f2:	01 24       	jz	$+4      	;abs 0x1f6
 1f4:	b2 3f       	jmp	$-154    	;abs 0x15a

000001f6 <measure_verify_e>:
 1f6:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1fa:	00 0b 
 1fc:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 200:	60 01 
 202:	30 41       	ret			

00000204 <Vd_calculate>:
 204:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 208:	2c 4b       	mov	@r11,	r12	

0000020a <Vd_cal_s>:
 20a:	2b 53       	incd	r11		
 20c:	2b 53       	incd	r11		
 20e:	2b 53       	incd	r11		
 210:	28 4b       	mov	@r11,	r8	
 212:	2b 53       	incd	r11		
 214:	29 4b       	mov	@r11,	r9	
 216:	2b 53       	incd	r11		
 218:	2e 4b       	mov	@r11,	r14	
 21a:	0e 93       	tst	r14		
 21c:	26 24       	jz	$+78     	;abs 0x26a
 21e:	08 89       	sub	r9,	r8	
 220:	38 80 90 11 	sub	#4496,	r8	;#0x1190
 224:	08 93       	tst	r8		
 226:	01 34       	jge	$+4      	;abs 0x22a
 228:	08 43       	clr	r8		

0000022a <Jump_r8_0>:
 22a:	08 10       	rrc	r8		
 22c:	08 10       	rrc	r8		
 22e:	08 10       	rrc	r8		
 230:	08 10       	rrc	r8		
 232:	08 10       	rrc	r8		
 234:	08 10       	rrc	r8		
 236:	08 10       	rrc	r8		
 238:	08 10       	rrc	r8		
 23a:	38 c0 c0 ff 	bic	#-64,	r8	;#0xffc0
 23e:	09 10       	rrc	r9		
 240:	09 10       	rrc	r9		
 242:	09 10       	rrc	r9		
 244:	39 c0 00 ff 	bic	#-256,	r9	;#0xff00
 248:	39 50 15 00 	add	#21,	r9	;#0x0015
 24c:	09 58       	add	r8,	r9	
 24e:	09 93       	tst	r9		
 250:	01 34       	jge	$+4      	;abs 0x254
 252:	09 43       	clr	r9		

00000254 <Jump_r9_0>:
 254:	09 69       	rlc	r9		
 256:	19 c3       	bic	#1,	r9	;r3 As==01
 258:	39 50 00 68 	add	#26624,	r9	;#0x6800
 25c:	2b 83       	decd	r11		
 25e:	8b 49 00 00 	mov	r9,	0(r11)	;0x0000(r11)
 262:	2b 53       	incd	r11		
 264:	2e 49       	mov	@r9,	r14	
 266:	8b 4e 00 00 	mov	r14,	0(r11)	;0x0000(r11)

0000026a <No_calculation>:
 26a:	1c 83       	dec	r12		
 26c:	01 24       	jz	$+4      	;abs 0x270
 26e:	cd 3f       	jmp	$-100    	;abs 0x20a

00000270 <Vd_cal_e>:
 270:	30 41       	ret			

00000272 <block_measure>:
 272:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 276:	2c 4b       	mov	@r11,	r12	
 278:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 27c:	0c 0b 
 27e:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 282:	64 01 
 284:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 288:	60 01 
 28a:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000028e <block_measure_s>:
 28e:	2b 53       	incd	r11		
 290:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 294:	2b 53       	incd	r11		
 296:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 29a:	2b 53       	incd	r11		
 29c:	2b 53       	incd	r11		
 29e:	2b 53       	incd	r11		
 2a0:	82 4d 02 0b 	mov	r13,	&0x0b02	
 2a4:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 2a8:	10 0b 
 2aa:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 2ae:	12 0b 
 2b0:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 2b4:	00 0b 
 2b6:	25 43       	mov	#2,	r5	;r3 As==10
 2b8:	b0 12 00 00 	call	#0x0000	
			2ba: R_MSP430_16_BYTE	.text+0x31a
 2bc:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 2c0:	00 0b 
 2c2:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2c6:	b0 12 00 00 	call	#0x0000	
			2c8: R_MSP430_16_BYTE	.text+0x31a
 2ca:	2e 42       	mov	#4,	r14	;r2 As==10
 2cc:	09 43       	clr	r9		

000002ce <measure_9_average_s>:
 2ce:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 2d2:	0c 0b 
 2d4:	35 40 05 00 	mov	#5,	r5	;#0x0005
 2d8:	b0 12 00 00 	call	#0x0000	
			2da: R_MSP430_16_BYTE	.text+0x31a
 2dc:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 2e0:	19 52 04 0b 	add	&0x0b04,r9	
 2e4:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 2e8:	0c 0b 
 2ea:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2ee:	b0 12 00 00 	call	#0x0000	
			2f0: R_MSP430_16_BYTE	.text+0x32c
 2f2:	1e 83       	dec	r14		
 2f4:	01 24       	jz	$+4      	;abs 0x2f8
 2f6:	eb 3f       	jmp	$-40     	;abs 0x2ce

000002f8 <measure_9_average_e>:
 2f8:	09 10       	rrc	r9		
 2fa:	09 10       	rrc	r9		
 2fc:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 300:	87 49 00 00 	mov	r9,	0(r7)	;0x0000(r7)
 304:	27 53       	incd	r7		
 306:	1c 83       	dec	r12		
 308:	01 24       	jz	$+4      	;abs 0x30c
 30a:	c1 3f       	jmp	$-124    	;abs 0x28e

0000030c <block_measure_e>:
 30c:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 310:	00 0b 
 312:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 316:	60 01 
 318:	30 41       	ret			

0000031a <wait_ms>:
 31a:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 31e:	06 44       	mov	r4,	r6	

00000320 <wait_ms_loop>:
 320:	16 83       	dec	r6		
 322:	fe 23       	jnz	$-2      	;abs 0x320
 324:	06 44       	mov	r4,	r6	
 326:	15 83       	dec	r5		
 328:	fb 23       	jnz	$-8      	;abs 0x320
 32a:	30 41       	ret			

0000032c <wait_10us>:
 32c:	34 40 22 00 	mov	#34,	r4	;#0x0022
 330:	06 44       	mov	r4,	r6	

00000332 <wait_10us_loop>:
 332:	16 83       	dec	r6		
 334:	fe 23       	jnz	$-2      	;abs 0x332
 336:	06 44       	mov	r4,	r6	
 338:	15 83       	dec	r5		
 33a:	fb 23       	jnz	$-8      	;abs 0x332
 33c:	30 41       	ret			

0000033e <end_of_test>:
 33e:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 342:	03 43       	nop			
 344:	30 43       	br	#-1		;r3 As==11
