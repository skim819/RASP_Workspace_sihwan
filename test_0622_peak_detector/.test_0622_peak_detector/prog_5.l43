GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	
   3               	.global main
   4               	
   5               	main:
   6 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
   7 0004 3740 0050 		mov	#0x5000, r7
   8 0008 0A43      		mov	#0, r10			; Initialize time
   9 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  10               	init_wait:
  11 000e 1583      	        dec.w   r5 
  12 0010 FE23      	        jnz     init_wait
  13 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  13      5800 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 6


  14 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  14      2001 
  15 001e 32C2      		dint
  16 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  17 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  17      6401 
  18 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  18      000B 
  19 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  19      6001 
  20 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  20      0C0B 
  21 003c 8243 080B 		mov     #0,    &ROW_SEL
  22 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  23 0044 874A 0000 		mov	r10, @r7
  24 0048 2753      		incd	r7
  25 004a 874A 0000 		mov	r10, @r7
  26 004e 2753      		incd	r7
  27 0050 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  28 0052 B012 0000 		call	#block_measure
  29               	
  30               		;mov	#1, r15
  31               		;mov	#10, r15
  32               		;mov	#30, r15
  33               		;mov	#40, r15
  34 0056 3F40 3200 		mov	#50, r15
  35               		;mov	#100, r15
  36               	fine_loop_s:
  37 005a 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  38 005c B012 0000 		call	#measure_verify
  39 0060 B012 0000 		call	#Vd_calculate
  40 0064 B012 0000 		call	#fine_inject
  41               	;	mov     #0x3333, @r7	        ; Record Injection 0x3333 
  42               	;	incd	r7
  43               	;	mov     r10, @r7	        ; Record time 
  44               	;	incd	r7
  45               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  46               	;	call	#block_measure
  47 0068 1F83      	        dec.w   r15
  48 006a 0124      	        jz      fine_loop_e
  49 006c F63F      		jmp	fine_loop_s
  50               	fine_loop_e:
  51               	
  52               	;	mov	#31, r15
  53 006e 1F43      		mov	#1, r15
  54               	last_measure_loop_s:
  55 0070 B740 3333 		mov     #0x3333, @r7	        ; Record Injection 0x3333 
  55      0000 
  56 0076 2753      		incd	r7
  57 0078 874A 0000 		mov     r10, @r7	        ; Record time 
  58 007c 2753      		incd	r7
  59 007e 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  60 0080 B012 0000 		call	#block_measure
  61 0084 1F83      	        dec.w   r15
  62 0086 0124      	        jz      last_measure_loop_e
  63 0088 F33F      		jmp	last_measure_loop_s
  64               	last_measure_loop_e:
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 7


  65               	
  66 008a B743 0000 		mov	#0xFFFF, @r7		; Data End
  67 008e 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
  68 0092 533D      		jmp     end_of_test
  69               	
  70               	fine_inject:
  71 0094 3B40 0070 		mov	#0x7000, r11
  72 0098 2C4B      		mov	@r11, r12		; No. of FGs 
  73 009a B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  73      0C0B 
  74 00a0 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  74      6401 
  75 00a6 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  75      6001 
  76 00ac B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  77               	fine_inject_set_s:
  78 00b0 2B53      		incd	r11
  79 00b2 A24B 080B 		mov     @r11,    &ROW_SEL
  80 00b6 2B53      		incd	r11
  81 00b8 A24B 0A0B 	        mov     @r11,    &COL_SEL
  82 00bc 2B53      		incd	r11
  83 00be 2B53      		incd	r11
  84 00c0 2B53      		incd	r11
  85 00c2 284B      	        mov     @r11,    r8		; Read Vd
  86 00c4 0893      		cmp	#0x0000, r8
  87 00c6 1F24      		jeq	fine_inject_skip
  88               		;mov	#0x0040, &GATE_S	; gate_s = 0V	
  89               		;mov	#0x0000, &GATE_S	; gate_s = 2.5V @ IVDD 6.0V	
  90               		;mov	#0x0800, &GATE_S	; gate_s = 2.6V @ IVDD 6.0V	
  91               		;mov	#0x1000, &GATE_S	; gate_s = 2.7V @ IVDD 6.0V	
  92               		;mov	#0x1800, &GATE_S	; gate_s = 2.8V @ IVDD 6.0V	
  93               		;mov	#0x2200, &GATE_S	; gate_s = 2.9V @ IVDD 6.0V	
  94               		;mov	#0x2a00, &GATE_S	; gate_s = 3.0V @ IVDD 6.0V	
  95               		;mov	#0x3200, &GATE_S	; gate_s = 3.1V @ IVDD 6.0V	
  96               		;mov	#0x3600, &GATE_S	; gate_s = 3.15V @ IVDD 6.0V	
  97               		;mov	#0x3a00, &GATE_S	; gate_s = 3.2V @ IVDD 6.0V	
  98               		;mov	#0x4000, &GATE_S	; gate_s = 3.26V @ IVDD 6.0V	
  99               		;mov	#0x4200, &GATE_S	; gate_s = 3.3V @ IVDD 6.0V	
 100 00c8 B240 004A 		mov	#0x4a00, &GATE_S	; gate_s = 3.4V @ IVDD 6.0V	
 100      020B 
 101               		;mov	#0x4c00, &GATE_S
 102               		;mov	#0x4e00, &GATE_S
 103               		;mov	#0x5000, &GATE_S	; gate_s = 3.5V @ IVDD 6.0V	
 104               		;mov	#0x5200, &GATE_S
 105               		;mov	#0x5a00, &GATE_S	; gate_s = 3.6V @ IVDD 6.0V	
 106               		;mov	#0x6200, &GATE_S	; gate_s = 3.7V @ IVDD 6.0V	
 107               		;mov	#0x6a00, &GATE_S	; gate_s = 3.8V @ IVDD 6.0V	
 108 00ce B240 6000 		mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
 108      100B 
 109 00d4 B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
 109      120B 
 110 00da B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 110      000B 
 111 00e0 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
 111      6001 
 112 00e6 2543      		mov     #2, r5             	; Number of ms
 113 00e8 B012 0000 		call    #wait_ms                ; Call the waiting function
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 8


 114               		;mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e:
 115 00ec 8248 000B 		mov 	r8, &DRAIN_CTRL	
 116               	        ;mov     #1, r5         		; Number of 10us to inject
 117 00f0 3540 0700 	        mov     #7, r5         		; Number of 10us to inject
 118 00f4 B012 0000 		call    #wait_10us             	; Call the waiting function
 119 00f8 1A53      		add     #1, r10	        	; Calculate time
 120 00fa B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 120      000B 
 121 0100 1543      		mov     #1, r5             	; Number of ms
 122 0102 B012 0000 		call    #wait_ms                ; Call the waiting function
 123               	fine_inject_skip:
 124 0106 1C83      	       	dec.w   r12
 125 0108 0124      	        jz      fine_inject_e
 126 010a D23F      	 	jmp	fine_inject_set_s
 127               	fine_inject_e:
 128 010c A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
 129 0110 2543      		mov     #2, r5             	; Number of ms
 130 0112 B012 0000 		call    #wait_ms                ; Call the waiting function
 131 0116 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 131      6001 
 132 011c 1543      		mov     #1, r5             	; Number of ms
 133 011e B012 0000 		call    #wait_ms                ; Call the waiting function
 134 0122 A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 135 0126 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 135      100B 
 136 012c B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 136      120B 
 137 0132 1543      		mov     #1, r5             	; Number of ms
 138 0134 B012 0000 		call    #wait_ms                ; Call the waiting function
 139 0138 3041      		ret
 140               	
 141               	measure_verify:
 142 013a 3B40 0070 		mov	#0x7000, r11
 143 013e 2C4B      		mov	@r11, r12		; No. of FGs 
 144 0140 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 144      0C0B 
 145 0146 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 145      6401 
 146 014c B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 146      6001 
 147 0152 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 148               	measure_verify_s:
 149 0156 2B53      		incd	r11
 150 0158 A24B 080B 		mov     @r11,    &ROW_SEL
 151 015c 2B53      		incd	r11
 152 015e A24B 0A0B 	        mov     @r11,    &COL_SEL
 153 0162 2B53      		incd	r11
 154               	;	mov	@r11, r8
 155 0164 2B53      		incd	r11
 156 0166 2B53      		incd	r11
 157 0168 294B      		mov	@r11, r9		; Read Vd
 158 016a 0993      		cmp	#0x0000, r9
 159 016c 3F24      		jeq	measure_verify_skip
 160 016e 824D 020B 		mov 	r13, &GATE_S
 161 0172 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 161      100B 
 162 0178 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 9


 162      120B 
 163 017e B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 163      000B 
 164 0184 2543      	        mov     #2, r5             	; Number of ms
 165 0186 B012 0000 		call    #wait_ms                ; Call the waiting function
 166 018a B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 166      000B 
 167 0190 3540 0A00 	        mov     #10, r5             	; Number of ms
 168 0194 B012 0000 	        call    #wait_ms                ; Call the waiting function
 169               	
 170 0198 2E42      		mov	#4, r14			; # for current measure average 
 171 019a 0943      		mov	#0, r9
 172               	measure_v9_average_s:
 173 019c B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 173      0C0B 
 174 01a2 3540 0500 	        mov     #5, r5             	; Number of ms
 175 01a6 B012 0000 		call    #wait_ms                ; Call the waiting function
 176 01aa 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 177               		;mov     &ADC, r9	        ; Get value in counter
 178 01ae 1952 040B 		add     &ADC, r9	        ; Get value in counter
 179 01b2 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 179      0C0B 
 180 01b8 3540 0A00 	        mov     #10, r5             	; Number of ms
 181 01bc B012 0000 	        call    #wait_10us                ; Call the waiting function
 182 01c0 1E83      		dec.w   r14
 183 01c2 0124      	        jz      measure_v9_average_e
 184 01c4 EB3F      		jmp	measure_v9_average_s
 185               	measure_v9_average_e:
 186 01c6 0910      		rrc	r9
 187 01c8 0910      		rrc	r9
 188 01ca 39C0 00C0 		bic	#0xc000, r9
 189               	
 190 01ce 2B83      		decd	r11
 191 01d0 2B83      		decd	r11
 192 01d2 284B      		mov	@r11, r8
 193 01d4 2B53      		incd	r11
 194 01d6 2B53      		incd	r11
 195               	
 196 01d8 0998      		cmp	r8, r9
 197 01da 0330      		jn	status_1
 198 01dc 8B43 0000 		mov	#0x0000, @r11		; Injection over
 199 01e0 053C      		jmp	measure_verify_skip	
 200               	status_1:
 201 01e2 2B83      		decd	r11
 202 01e4 0889      		sub	r9, r8
 203 01e6 8B48 0000 		mov	r8, @r11
 204 01ea 2B53      		incd	r11
 205               	measure_verify_skip:
 206 01ec 1C83      	        dec.w   r12
 207 01ee 0124      	        jz      measure_verify_e
 208 01f0 B23F      		jmp	measure_verify_s
 209               	measure_verify_e:
 210 01f2 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 210      000B 
 211 01f8 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 211      6001 
 212 01fe 3041      		ret
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 10


 213               	
 214               	Vd_calculate:
 215 0200 3B40 0070 		mov	#0x7000, r11
 216 0204 2C4B      		mov	@r11, r12		; No. of FGs 
 217               	Vd_cal_s:
 218 0206 2B53      		incd	r11			; @ Row_Sel
 219 0208 2B53      		incd	r11			; @ Col_Sel
 220 020a 2B53      		incd	r11	
 221 020c 284B      		mov	@r11, r8		; @ Target
 222 020e 2B53      		incd	r11	
 223 0210 294B      		mov	@r11, r9		; @ diff_for_Vd2
 224 0212 2B53      		incd	r11		
 225 0214 2E4B      		mov	@r11, r14		; @ Vd 
 226 0216 0E93      		cmp	#0x0000, r14
 227 0218 2624      		jeq	No_calculation
 228 021a 0889      		sub	r9, r8			; r8 = r8(target)-r9(diff) = Istart
 229 021c 3880 9011 		sub	#0x1190, r8		; r8 = r8(Istart)-0x1190(1nA) = diff_for_Vd1
 230 0220 0893      		cmp	#0, r8		        ; If r8(Vd1) < 0,
 231 0222 0134      		jge	Jump_r8_0
 232 0224 0843      		mov	#0, r8  		; r8 = 0
 233               	Jump_r8_0:
 234 0226 0810      		rrc	r8
 235 0228 0810      		rrc	r8
 236 022a 0810      		rrc	r8
 237 022c 0810      		rrc	r8
 238 022e 0810      		rrc	r8
 239 0230 0810      		rrc	r8
 240 0232 0810      		rrc	r8
 241 0234 0810      		rrc	r8
 242 0236 38C0 C0FF 		bic	#0xffc0, r8
 243 023a 0910      		rrc	r9
 244 023c 0910      		rrc	r9
 245 023e 0910      		rrc	r9
 246 0240 39C0 00FF 		bic	#0xff00, r9
 247               		;add	#45, r9                 ; Vd table offset
 248 0244 3950 1500 		add	#21, r9                 ; Vd table offset
 249               	        ;sub     r8, r9
 250 0248 0958      	        add     r8, r9
 251 024a 0993      	        cmp	#0, r9		        ; If r8(Vd1) < 0,
 252 024c 0134      		jge	Jump_r9_0
 253 024e 0943      		mov	#0, r9  		; r8 = 0
 254               	Jump_r9_0:
 255 0250 0969      	        rlc	r9
 256 0252 19C3      		bic	#0x0001, r9
 257 0254 3950 0068 		add	#0x6800, r9
 258               	
 259 0258 2B83      		decd	r11
 260 025a 8B49 0000 		mov	r9, @r11
 261               	;	decd	r11
 262               	;	mov	r8, @r11
 263               	;	incd	r11
 264 025e 2B53      		incd	r11
 265               	
 266 0260 2E49      	 	mov	@r9, r14
 267 0262 8B4E 0000 		mov	r14, @r11
 268               	No_calculation:
 269 0266 1C83      	        dec.w   r12
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 11


 270 0268 0124      	        jz      Vd_cal_e
 271 026a CD3F      		jmp	Vd_cal_s
 272               	Vd_cal_e:
 273 026c 3041      		ret
 274               	
 275               	block_measure:
 276 026e 3B40 0070 		mov	#0x7000, r11
 277 0272 2C4B      		mov	@r11, r12		; No. of FGs 
 278 0274 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 278      0C0B 
 279 027a B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 279      6401 
 280 0280 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 280      6001 
 281 0286 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 282               	block_measure_s:
 283 028a 2B53      		incd	r11
 284 028c A24B 080B 		mov     @r11,    &ROW_SEL
 285 0290 2B53      		incd	r11
 286 0292 A24B 0A0B 	        mov     @r11,    &COL_SEL
 287 0296 2B53      		incd	r11
 288 0298 2B53      		incd	r11
 289 029a 2B53      		incd	r11
 290 029c 824D 020B 		mov 	r13, &GATE_S
 291 02a0 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 291      100B 
 292 02a6 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 292      120B 
 293 02ac B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 293      000B 
 294 02b2 2543      	        mov     #2, r5             	; Number of ms
 295 02b4 B012 0000 		call    #wait_ms                ; Call the waiting function
 296 02b8 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 296      000B 
 297 02be 3540 0A00 	        mov     #10, r5             	; Number of ms
 298 02c2 B012 0000 	        call    #wait_ms                ; Call the waiting function
 299               	
 300 02c6 2E42      		mov	#4, r14			; # for current measure average 
 301 02c8 0943      		mov	#0, r9
 302               	measure_9_average_s:
 303 02ca B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 303      0C0B 
 304 02d0 3540 0500 	        mov     #5, r5             	; Number of ms
 305 02d4 B012 0000 		call    #wait_ms                ; Call the waiting function
 306 02d8 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 307               		;mov     &ADC, r9	        ; Get value in counter
 308 02dc 1952 040B 		add     &ADC, r9	        ; Get value in counter
 309 02e0 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 309      0C0B 
 310 02e6 3540 0A00 	        mov     #10, r5             	; Number of ms
 311 02ea B012 0000 	        call    #wait_10us                ; Call the waiting function
 312 02ee 1E83      		dec.w   r14
 313 02f0 0124      	        jz      measure_9_average_e
 314 02f2 EB3F      		jmp	measure_9_average_s
 315               	measure_9_average_e:
 316 02f4 0910      		rrc	r9
 317 02f6 0910      		rrc	r9
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 12


 318 02f8 39C0 00C0 		bic	#0xc000, r9
 319               	
 320 02fc 8749 0000 		mov     r9, @r7			; Get value in counter
 321 0300 2753      		incd	r7
 322 0302 1C83      	        dec.w   r12
 323 0304 0124      	        jz      block_measure_e
 324 0306 C13F      		jmp	block_measure_s
 325               	block_measure_e:
 326 0308 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 326      000B 
 327 030e B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 327      6001 
 328 0314 3041      		ret
 329               	
 330               	wait_ms:
 331 0316 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 332 031a 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 333               	wait_ms_loop:
 334 031c 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 335 031e FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 336 0320 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 337 0322 1583      	        dec.w   r5                      ; Decrement number of ms total
 338 0324 FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
 339 0326 3041      	        ret    
 340               	 
 341               	wait_10us:
 342 0328 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
 343 032c 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 344               	wait_10us_loop:
 345 032e 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 346 0330 FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 347 0332 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 348 0334 1583      	        dec.w   r5                      ; Decrement number of ms total
 349 0336 FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 350 0338 3041      	        ret   
 351               	
 352               	end_of_test:
 353 033a 8243 5800 		mov	#0x0000, &BCSCTL2
 354 033e 0343      		nop
 355 0340 3043      		br #0xffff
 356               	
 357               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 358               	.section .vectors, "a"
 359 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 360 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 361 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 362 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 363 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 364 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 365 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 366 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 367 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
 368 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 369 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 370 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 371 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 372 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 13


 373 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
 374 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 14


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 15


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 16


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 17


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:5      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:10     .text:0000000e init_wait
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:275    .text:0000026e block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:36     .text:0000005a fine_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:141    .text:0000013a measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:214    .text:00000200 Vd_calculate
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:70     .text:00000094 fine_inject
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:50     .text:0000006e fine_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:54     .text:00000070 last_measure_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:64     .text:0000008a last_measure_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:352    .text:0000033a end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:77     .text:000000b0 fine_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:123    .text:00000106 fine_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:330    .text:00000316 wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:341    .text:00000328 wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:127    .text:0000010c fine_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:148    .text:00000156 measure_verify_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:205    .text:000001ec measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:172    .text:0000019c measure_v9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:185    .text:000001c6 measure_v9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:200    .text:000001e2 status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:209    .text:000001f2 measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:217    .text:00000206 Vd_cal_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:268    .text:00000266 No_calculation
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:233    .text:00000226 Jump_r8_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:254    .text:00000250 Jump_r9_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:272    .text:0000026c Vd_cal_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:282    .text:0000028a block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:302    .text:000002ca measure_9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:315    .text:000002f4 measure_9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:325    .text:00000308 block_measure_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:333    .text:0000031c wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:344    .text:0000032e wait_10us_loop

NO UNDEFINED SYMBOLS

prog_5.o:     file format elf32-msp430
prog_5.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000342  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000376  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000376  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  00000376  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
0000000e l       .text	00000000 init_wait
0000026e l       .text	00000000 block_measure
0000005a l       .text	00000000 fine_loop_s
0000013a l       .text	00000000 measure_verify
00000200 l       .text	00000000 Vd_calculate
00000094 l       .text	00000000 fine_inject
0000006e l       .text	00000000 fine_loop_e
00000070 l       .text	00000000 last_measure_loop_s
0000008a l       .text	00000000 last_measure_loop_e
0000033a l       .text	00000000 end_of_test
000000b0 l       .text	00000000 fine_inject_set_s
00000106 l       .text	00000000 fine_inject_skip
00000316 l       .text	00000000 wait_ms
00000328 l       .text	00000000 wait_10us
0000010c l       .text	00000000 fine_inject_e
00000156 l       .text	00000000 measure_verify_s
000001ec l       .text	00000000 measure_verify_skip
0000019c l       .text	00000000 measure_v9_average_s
000001c6 l       .text	00000000 measure_v9_average_e
000001e2 l       .text	00000000 status_1
000001f2 l       .text	00000000 measure_verify_e
00000206 l       .text	00000000 Vd_cal_s
00000266 l       .text	00000000 No_calculation
00000226 l       .text	00000000 Jump_r8_0
00000250 l       .text	00000000 Jump_r9_0
0000026c l       .text	00000000 Vd_cal_e
0000028a l       .text	00000000 block_measure_s
000002ca l       .text	00000000 measure_9_average_s
000002f4 l       .text	00000000 measure_9_average_e
00000308 l       .text	00000000 block_measure_e
0000031c l       .text	00000000 wait_ms_loop
0000032e l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 0d43b012 00003f40 32000d43 b0120000  .C....?@2..C....
 0060 b0120000 b0120000 1f830124 f63f1f43  ...........$.?.C
 0070 b7403333 00002753 874a0000 27530d43  .@33..'S.J..'S.C
 0080 b0120000 1f830124 f33fb743 00008243  .......$.?.C...C
 0090 5800533d 3b400070 2c4bb240 00800c0b  X.S=;@.p,K.@....
 00a0 b24004be 6401b240 24006001 b2430e0b  .@..d..@$.`..C..
 00b0 2b53a24b 080b2b53 a24b0a0b 2b532b53  +S.K..+S.K..+S+S
 00c0 2b53284b 08931f24 b240004a 020bb240  +S(K...$.@.J...@
 00d0 6000100b b2406000 120bb240 6600000b  `....@`....@f...
 00e0 b2401400 60012543 b0120000 8248000b  .@..`.%C.....H..
 00f0 35400700 b0120000 1a53b240 6600000b  5@.......S.@f...
 0100 1543b012 00001c83 0124d23f a2426001  .C.......$.?.B`.
 0110 2543b012 0000b240 24006001 1543b012  %C.....@$.`..C..
 0120 0000a243 0e0bb240 4000100b b2404000  ...C...@@....@@.
 0130 120b1543 b0120000 30413b40 00702c4b  ...C....0A;@.p,K
 0140 b2400080 0c0bb240 04be6401 b2402400  .@.....@..d..@$.
 0150 6001a243 0e0b2b53 a24b080b 2b53a24b  `..C..+S.K..+S.K
 0160 0a0b2b53 2b532b53 294b0993 3f24824d  ..+S+S+S)K..?$.M
 0170 020bb240 4000100b b2404000 120bb240  ...@@....@@....@
 0180 6600000b 2543b012 0000b240 a400000b  f...%C.....@....
 0190 35400a00 b0120000 2e420943 b24000b0  5@.......B.C.@..
 01a0 0c0b3540 0500b012 00008243 040b1952  ..5@.......C...R
 01b0 040bb240 00800c0b 35400a00 b0120000  ...@....5@......
 01c0 1e830124 eb3f0910 091039c0 00c02b83  ...$.?....9...+.
 01d0 2b83284b 2b532b53 09980330 8b430000  +.(K+S+S...0.C..
 01e0 053c2b83 08898b48 00002b53 1c830124  .<+....H..+S...$
 01f0 b23fb240 6600000b b2402400 60013041  .?.@f....@$.`.0A
 0200 3b400070 2c4b2b53 2b532b53 284b2b53  ;@.p,K+S+S+S(K+S
 0210 294b2b53 2e4b0e93 26240889 38809011  )K+S.K..&$..8...
 0220 08930134 08430810 08100810 08100810  ...4.C..........
 0230 08100810 081038c0 c0ff0910 09100910  ......8.........
 0240 39c000ff 39501500 09580993 01340943  9...9P...X...4.C
 0250 096919c3 39500068 2b838b49 00002b53  .i..9P.h+..I..+S
 0260 2e498b4e 00001c83 0124cd3f 30413b40  .I.N.....$.?0A;@
 0270 00702c4b b2400080 0c0bb240 04be6401  .p,K.@.....@..d.
 0280 b2402400 6001a243 0e0b2b53 a24b080b  .@$.`..C..+S.K..
 0290 2b53a24b 0a0b2b53 2b532b53 824d020b  +S.K..+S+S+S.M..
 02a0 b2404000 100bb240 4000120b b2406600  .@@....@@....@f.
 02b0 000b2543 b0120000 b240a400 000b3540  ..%C.....@....5@
 02c0 0a00b012 00002e42 0943b240 00b00c0b  .......B.C.@....
 02d0 35400500 b0120000 8243040b 1952040b  5@.......C...R..
 02e0 b2400080 0c0b3540 0a00b012 00001e83  .@....5@........
 02f0 0124eb3f 09100910 39c000c0 87490000  .$.?....9....I..
 0300 27531c83 0124c13f b2406600 000bb240  'S...$.?.@f....@
 0310 24006001 30413440 fc0c0644 1683fe23  $.`.0A4@...D...#
 0320 06441583 fb233041 34402200 06441683  .D...#0A4@"..D..
 0330 fe230644 1583fb23 30418243 58000343  .#.D...#0A.CX..C
 0340 3043                                 0C              
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	0d 43       	clr	r13		
  52:	b0 12 00 00 	call	#0x0000	
			54: R_MSP430_16_BYTE	.text+0x26e
  56:	3f 40 32 00 	mov	#50,	r15	;#0x0032

0000005a <fine_loop_s>:
  5a:	0d 43       	clr	r13		
  5c:	b0 12 00 00 	call	#0x0000	
			5e: R_MSP430_16_BYTE	.text+0x13a
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x200
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0x94
  68:	1f 83       	dec	r15		
  6a:	01 24       	jz	$+4      	;abs 0x6e
  6c:	f6 3f       	jmp	$-18     	;abs 0x5a

0000006e <fine_loop_e>:
  6e:	1f 43       	mov	#1,	r15	;r3 As==01

00000070 <last_measure_loop_s>:
  70:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  74:	00 00 
  76:	27 53       	incd	r7		
  78:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  7c:	27 53       	incd	r7		
  7e:	0d 43       	clr	r13		
  80:	b0 12 00 00 	call	#0x0000	
			82: R_MSP430_16_BYTE	.text+0x26e
  84:	1f 83       	dec	r15		
  86:	01 24       	jz	$+4      	;abs 0x8a
  88:	f3 3f       	jmp	$-24     	;abs 0x70

0000008a <last_measure_loop_e>:
  8a:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  8e:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  92:	53 3d       	jmp	$+680    	;abs 0x33a

00000094 <fine_inject>:
  94:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  98:	2c 4b       	mov	@r11,	r12	
  9a:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  9e:	0c 0b 
  a0:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  a4:	64 01 
  a6:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  aa:	60 01 
  ac:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000b0 <fine_inject_set_s>:
  b0:	2b 53       	incd	r11		
  b2:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  b6:	2b 53       	incd	r11		
  b8:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  bc:	2b 53       	incd	r11		
  be:	2b 53       	incd	r11		
  c0:	2b 53       	incd	r11		
  c2:	28 4b       	mov	@r11,	r8	
  c4:	08 93       	tst	r8		
  c6:	1f 24       	jz	$+64     	;abs 0x106
  c8:	b2 40 00 4a 	mov	#18944,	&0x0b02	;#0x4a00
  cc:	02 0b 
  ce:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  d2:	10 0b 
  d4:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  d8:	12 0b 
  da:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  de:	00 0b 
  e0:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  e4:	60 01 
  e6:	25 43       	mov	#2,	r5	;r3 As==10
  e8:	b0 12 00 00 	call	#0x0000	
			ea: R_MSP430_16_BYTE	.text+0x316
  ec:	82 48 00 0b 	mov	r8,	&0x0b00	
  f0:	35 40 07 00 	mov	#7,	r5	;#0x0007
  f4:	b0 12 00 00 	call	#0x0000	
			f6: R_MSP430_16_BYTE	.text+0x328
  f8:	1a 53       	inc	r10		
  fa:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  fe:	00 0b 
 100:	15 43       	mov	#1,	r5	;r3 As==01
 102:	b0 12 00 00 	call	#0x0000	
			104: R_MSP430_16_BYTE	.text+0x316

00000106 <fine_inject_skip>:
 106:	1c 83       	dec	r12		
 108:	01 24       	jz	$+4      	;abs 0x10c
 10a:	d2 3f       	jmp	$-90     	;abs 0xb0

0000010c <fine_inject_e>:
 10c:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 110:	25 43       	mov	#2,	r5	;r3 As==10
 112:	b0 12 00 00 	call	#0x0000	
			114: R_MSP430_16_BYTE	.text+0x316
 116:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 11a:	60 01 
 11c:	15 43       	mov	#1,	r5	;r3 As==01
 11e:	b0 12 00 00 	call	#0x0000	
			120: R_MSP430_16_BYTE	.text+0x316
 122:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 126:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 12a:	10 0b 
 12c:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 130:	12 0b 
 132:	15 43       	mov	#1,	r5	;r3 As==01
 134:	b0 12 00 00 	call	#0x0000	
			136: R_MSP430_16_BYTE	.text+0x316
 138:	30 41       	ret			

0000013a <measure_verify>:
 13a:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 13e:	2c 4b       	mov	@r11,	r12	
 140:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 144:	0c 0b 
 146:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 14a:	64 01 
 14c:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 150:	60 01 
 152:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

00000156 <measure_verify_s>:
 156:	2b 53       	incd	r11		
 158:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 15c:	2b 53       	incd	r11		
 15e:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 162:	2b 53       	incd	r11		
 164:	2b 53       	incd	r11		
 166:	2b 53       	incd	r11		
 168:	29 4b       	mov	@r11,	r9	
 16a:	09 93       	tst	r9		
 16c:	3f 24       	jz	$+128    	;abs 0x1ec
 16e:	82 4d 02 0b 	mov	r13,	&0x0b02	
 172:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 176:	10 0b 
 178:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 17c:	12 0b 
 17e:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 182:	00 0b 
 184:	25 43       	mov	#2,	r5	;r3 As==10
 186:	b0 12 00 00 	call	#0x0000	
			188: R_MSP430_16_BYTE	.text+0x316
 18a:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 18e:	00 0b 
 190:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 194:	b0 12 00 00 	call	#0x0000	
			196: R_MSP430_16_BYTE	.text+0x316
 198:	2e 42       	mov	#4,	r14	;r2 As==10
 19a:	09 43       	clr	r9		

0000019c <measure_v9_average_s>:
 19c:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 1a0:	0c 0b 
 1a2:	35 40 05 00 	mov	#5,	r5	;#0x0005
 1a6:	b0 12 00 00 	call	#0x0000	
			1a8: R_MSP430_16_BYTE	.text+0x316
 1aa:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1ae:	19 52 04 0b 	add	&0x0b04,r9	
 1b2:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1b6:	0c 0b 
 1b8:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1bc:	b0 12 00 00 	call	#0x0000	
			1be: R_MSP430_16_BYTE	.text+0x328
 1c0:	1e 83       	dec	r14		
 1c2:	01 24       	jz	$+4      	;abs 0x1c6
 1c4:	eb 3f       	jmp	$-40     	;abs 0x19c

000001c6 <measure_v9_average_e>:
 1c6:	09 10       	rrc	r9		
 1c8:	09 10       	rrc	r9		
 1ca:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 1ce:	2b 83       	decd	r11		
 1d0:	2b 83       	decd	r11		
 1d2:	28 4b       	mov	@r11,	r8	
 1d4:	2b 53       	incd	r11		
 1d6:	2b 53       	incd	r11		
 1d8:	09 98       	cmp	r8,	r9	
 1da:	03 30       	jn	$+8      	;abs 0x1e2
 1dc:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1e0:	05 3c       	jmp	$+12     	;abs 0x1ec

000001e2 <status_1>:
 1e2:	2b 83       	decd	r11		
 1e4:	08 89       	sub	r9,	r8	
 1e6:	8b 48 00 00 	mov	r8,	0(r11)	;0x0000(r11)
 1ea:	2b 53       	incd	r11		

000001ec <measure_verify_skip>:
 1ec:	1c 83       	dec	r12		
 1ee:	01 24       	jz	$+4      	;abs 0x1f2
 1f0:	b2 3f       	jmp	$-154    	;abs 0x156

000001f2 <measure_verify_e>:
 1f2:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1f6:	00 0b 
 1f8:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 1fc:	60 01 
 1fe:	30 41       	ret			

00000200 <Vd_calculate>:
 200:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 204:	2c 4b       	mov	@r11,	r12	

00000206 <Vd_cal_s>:
 206:	2b 53       	incd	r11		
 208:	2b 53       	incd	r11		
 20a:	2b 53       	incd	r11		
 20c:	28 4b       	mov	@r11,	r8	
 20e:	2b 53       	incd	r11		
 210:	29 4b       	mov	@r11,	r9	
 212:	2b 53       	incd	r11		
 214:	2e 4b       	mov	@r11,	r14	
 216:	0e 93       	tst	r14		
 218:	26 24       	jz	$+78     	;abs 0x266
 21a:	08 89       	sub	r9,	r8	
 21c:	38 80 90 11 	sub	#4496,	r8	;#0x1190
 220:	08 93       	tst	r8		
 222:	01 34       	jge	$+4      	;abs 0x226
 224:	08 43       	clr	r8		

00000226 <Jump_r8_0>:
 226:	08 10       	rrc	r8		
 228:	08 10       	rrc	r8		
 22a:	08 10       	rrc	r8		
 22c:	08 10       	rrc	r8		
 22e:	08 10       	rrc	r8		
 230:	08 10       	rrc	r8		
 232:	08 10       	rrc	r8		
 234:	08 10       	rrc	r8		
 236:	38 c0 c0 ff 	bic	#-64,	r8	;#0xffc0
 23a:	09 10       	rrc	r9		
 23c:	09 10       	rrc	r9		
 23e:	09 10       	rrc	r9		
 240:	39 c0 00 ff 	bic	#-256,	r9	;#0xff00
 244:	39 50 15 00 	add	#21,	r9	;#0x0015
 248:	09 58       	add	r8,	r9	
 24a:	09 93       	tst	r9		
 24c:	01 34       	jge	$+4      	;abs 0x250
 24e:	09 43       	clr	r9		

00000250 <Jump_r9_0>:
 250:	09 69       	rlc	r9		
 252:	19 c3       	bic	#1,	r9	;r3 As==01
 254:	39 50 00 68 	add	#26624,	r9	;#0x6800
 258:	2b 83       	decd	r11		
 25a:	8b 49 00 00 	mov	r9,	0(r11)	;0x0000(r11)
 25e:	2b 53       	incd	r11		
 260:	2e 49       	mov	@r9,	r14	
 262:	8b 4e 00 00 	mov	r14,	0(r11)	;0x0000(r11)

00000266 <No_calculation>:
 266:	1c 83       	dec	r12		
 268:	01 24       	jz	$+4      	;abs 0x26c
 26a:	cd 3f       	jmp	$-100    	;abs 0x206

0000026c <Vd_cal_e>:
 26c:	30 41       	ret			

0000026e <block_measure>:
 26e:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 272:	2c 4b       	mov	@r11,	r12	
 274:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 278:	0c 0b 
 27a:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 27e:	64 01 
 280:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 284:	60 01 
 286:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000028a <block_measure_s>:
 28a:	2b 53       	incd	r11		
 28c:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 290:	2b 53       	incd	r11		
 292:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 296:	2b 53       	incd	r11		
 298:	2b 53       	incd	r11		
 29a:	2b 53       	incd	r11		
 29c:	82 4d 02 0b 	mov	r13,	&0x0b02	
 2a0:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 2a4:	10 0b 
 2a6:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 2aa:	12 0b 
 2ac:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 2b0:	00 0b 
 2b2:	25 43       	mov	#2,	r5	;r3 As==10
 2b4:	b0 12 00 00 	call	#0x0000	
			2b6: R_MSP430_16_BYTE	.text+0x316
 2b8:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 2bc:	00 0b 
 2be:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2c2:	b0 12 00 00 	call	#0x0000	
			2c4: R_MSP430_16_BYTE	.text+0x316
 2c6:	2e 42       	mov	#4,	r14	;r2 As==10
 2c8:	09 43       	clr	r9		

000002ca <measure_9_average_s>:
 2ca:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 2ce:	0c 0b 
 2d0:	35 40 05 00 	mov	#5,	r5	;#0x0005
 2d4:	b0 12 00 00 	call	#0x0000	
			2d6: R_MSP430_16_BYTE	.text+0x316
 2d8:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 2dc:	19 52 04 0b 	add	&0x0b04,r9	
 2e0:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 2e4:	0c 0b 
 2e6:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2ea:	b0 12 00 00 	call	#0x0000	
			2ec: R_MSP430_16_BYTE	.text+0x328
 2ee:	1e 83       	dec	r14		
 2f0:	01 24       	jz	$+4      	;abs 0x2f4
 2f2:	eb 3f       	jmp	$-40     	;abs 0x2ca

000002f4 <measure_9_average_e>:
 2f4:	09 10       	rrc	r9		
 2f6:	09 10       	rrc	r9		
 2f8:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 2fc:	87 49 00 00 	mov	r9,	0(r7)	;0x0000(r7)
 300:	27 53       	incd	r7		
 302:	1c 83       	dec	r12		
 304:	01 24       	jz	$+4      	;abs 0x308
 306:	c1 3f       	jmp	$-124    	;abs 0x28a

00000308 <block_measure_e>:
 308:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 30c:	00 0b 
 30e:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 312:	60 01 
 314:	30 41       	ret			

00000316 <wait_ms>:
 316:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 31a:	06 44       	mov	r4,	r6	

0000031c <wait_ms_loop>:
 31c:	16 83       	dec	r6		
 31e:	fe 23       	jnz	$-2      	;abs 0x31c
 320:	06 44       	mov	r4,	r6	
 322:	15 83       	dec	r5		
 324:	fb 23       	jnz	$-8      	;abs 0x31c
 326:	30 41       	ret			

00000328 <wait_10us>:
 328:	34 40 22 00 	mov	#34,	r4	;#0x0022
 32c:	06 44       	mov	r4,	r6	

0000032e <wait_10us_loop>:
 32e:	16 83       	dec	r6		
 330:	fe 23       	jnz	$-2      	;abs 0x32e
 332:	06 44       	mov	r4,	r6	
 334:	15 83       	dec	r5		
 336:	fb 23       	jnz	$-8      	;abs 0x32e
 338:	30 41       	ret			

0000033a <end_of_test>:
 33a:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 33e:	03 43       	nop			
 340:	30 43       	br	#-1		;r3 As==11
