GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	.include "chip_para.asm"
   1               	/*---------------------------------------------------------------------------*/
   2               	/*                       chip parameters for chip 02                         */ 
   3               	/*---------------------------------------------------------------------------*/
   4               	/*----------------*/
   5               	/* Switch program */
   6               	/*----------------*/
   7               	.set    TUN_TIME_SP,     3          /* tunneling time for switch programming (ms) */
   8               	.set    R_TUN_TIME_SP,     2          /* reverse tunneling time for switch programming (ms) */
   9               	.set    INJ_TIME_SP_1,     8000          /* injection time for switch programming (10us) (1st pulse
  10               	/*.set    INJ_TIME_SP_1,     100          /* injection time for switch programming (10us) (1st puls
  11               	.set    INJ_TIME_SP_2,     500          /* injection time for switch programming (10us) (2nd pulse)
  12               	/*.set    INJ_TIME_SP_2,     100          /* injection time for switch programming (10us) (2nd puls
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 6


  13               	.set    INJ_TIME_SP_3,     200          /* injection time for switch programming (10us) (3rd pulse)
  14               	/*.set    INJ_TIME_SP_3,     100          /* injection time for switch programming (10us) (3rd puls
  15               	.set    INJ_TIME_SP_4,     200          /* injection time for switch programming (10us) (4th pulse)
  16               	/*.set    INJ_TIME_SP_4,     100          /* injection time for switch programming (10us) (4th puls
  17               	.set    INJ_TIME_SP_5,     200          /* injection time for switch programming (10us) (5th pulse)
  18               	/*.set    INJ_TIME_SP_5,     100          /* injection time for switch programming (10us) (5th puls
  19               	.set    INJ_TIME_SP_SUM,     61          /* injection time for switch programming (ms) (calculation
  20               	.set    INJ_TIME_SP_RUN,     1          /* injection time for switch programming in run-mode(10us)*
  21               	/*.set    INJ_TIME_SP_RUN,     500  */        /* injection time for switch programming in run-mode(
  22               	
  23               	/*----------------*/
  24               	/* Target program */
  25               	/*----------------*/
  26               	.set    ADC_1nA,    0x1190          /* 1nA ADC value */
  27               	
  28               	/* Tunnel and Reverse Tunnel */
  29               	.set    TUN_TIME_TP_CAB,     40          /* tunneling time for target programming (ms) - CAB */
  30               	.set    R_TUN_TIME_TP_CAB,   40          /* Reverse tunneling time for target programming (ms) - CA
  31               	
  32               	/* Recover Inject (RI) */
  33               	.set    RI_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  34               	.set    RI_VC1_SWC,     0x177f          /* Verify Current 1 for SWC recover injection = 30nA @ Vgm=
  35               	.set    RI_VC2_SWC,     0x16c6          /* Verify Current 1 for SWC recover injection = 20nA @ Vgm=
  36               	.set    RI_VC3_SWC,     0x145c           /* Verify Current 1 for SWC recover injection = 5nA @ Vgm=
  37               	.set    RI_VC4_SWC,     0x1190           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm=
  38               	.set    RI_VD1_SWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  39               	.set    RI_VD2_SWC,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  40               	.set    RI_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA recover injection = 2.5V @ IVDD
  41               	.set    RI_VC1_OTA,     0x1a2f           /* Verify Current 1 for OTA recover injection = 129nA @ Vg
  42               	.set    RI_VC2_OTA,     0x1976          /* Verify Current 1 for OTA recover injection =  88nA @ Vgm
  43               	.set    RI_VC3_OTA,     0x170c           /* Verify Current 1 for OTA recover injection = 23nA @ Vgm
  44               	.set    RI_VC4_OTA,     0x1440           /* Verify Current 1 for OTA recover injection = 5nA @ Vgm=
  45               	.set    RI_VD1_OTA,     0xea0e          /* Drain Voltage for recover injection final stage */
  46               	.set    RI_VD2_OTA,     0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  47               	.set    RI_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF recover injection = gnd *
  48               	.set    RI_VC1_OTAREF,  0x177f              /* Verify Current 1 for OTAREF recover injection = 30nA
  49               	.set    RI_VC2_OTAREF,  0x16c6             /* Verify Current 1 for OTAREF recover injection = 20nA 
  50               	.set    RI_VC3_OTAREF,  0x145c              /* Verify Current 1 for OTAREF recover injection = 5nA 
  51               	.set    RI_VC4_OTAREF,  0x1190              /* Verify Current 1 for OTAREF recover injection = 1nA 
  52               	.set    RI_VD1_OTAREF,  0xea0e          /* Drain Voltage for recover injection final stage */
  53               	.set    RI_VD2_OTAREF,  0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  54               	.set    RI_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE recover injection = 2.5V @ IV
  55               	.set    RI_VC1_MITE,    0x1b2f           /* Verify Current 1 for MITE recover injection = 215nA @ V
  56               	.set    RI_VC2_MITE,    0x1a76           /* Verify Current 1 for MITE recover injection =  149nA @ 
  57               	.set    RI_VC3_MITE,    0x180c            /* Verify Current 1 for MITE recover injection = 41nA @ V
  58               	.set    RI_VC4_MITE,    0x1540            /* Verify Current 1 for MITE recover injection = 8nA @ Vg
  59               	.set    RI_VD1_MITE,    0xea0e          /* Drain Voltage for recover injection final stage */
  60               	.set    RI_VD2_MITE,    0xfe0e          /* Drain Voltage for recover injection pre-final stage */
  61               	.set    RI_GATE_S_DIRSWC,     0x0000          /* Gate_S voltage for SWC recover injection = 2.5V */
  62               	;.set    RI_GATE_S_DIRSWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  63               	.set    RI_VC1_DIRSWC,     5970          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0
  64               	.set    RI_VC2_DIRSWC,     5822          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0
  65               	.set    RI_VC3_DIRSWC,     4779           /* Verify Current 1 for SWC recover injection = nA @ Vgm=
  66               	;.set    RI_VC3_DIRSWC,     5379           /* Verify Current 1 for SWC recover injection = nA @ Vgm
  67               	.set    RI_VC4_DIRSWC,     4493           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm
  68               	.set    RI_VD1_DIRSWC,     0xbe0e          /* Drain Voltage for recover injection final stage */
  69               	;.set    RI_VD1_DIRSWC,     0xea0e          /* Drain Voltage for recover injection final stage */
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 7


  70               	.set    RI_VD2_DIRSWC,     0xd00e          /* Drain Voltage for recover injection pre-final stage *
  71               	;.set    RI_VD2_DIRSWC,     0xfe0e          /* Drain Voltage for recover injection pre-final stage 
  72               	
  73               	.set    RIL_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC low sub Vth recover injection
  74               	.set    RIL_VC1_SWC,     0x1190          /* Verify Current 1 for SWC low sub Vth recover injection 
  75               	.set    RIL_VC2_SWC,     0x10d0          /* Verify Current 1 for SWC low sub Vth recover injection 
  76               	.set    RIL_VD1_SWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  77               	.set    RIL_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA low sub Vth recover injection 
  78               	.set    RIL_VC1_OTA,     0x1190           /* Verify Current 1 for OTA low sub Vth recover injection
  79               	.set    RIL_VC2_OTA,     0x1100          /* Verify Current 1 for OTA low sub Vth recover injection 
  80               	.set    RIL_VD1_OTA,     0xea0e          /* Drain Voltage for recover injection final stage */
  81               	.set    RIL_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF low sub Vth recover inje
  82               	.set    RIL_VC1_OTAREF,  0x1190              /* Verify Current 1 for OTAREF low sub Vth recover inj
  83               	.set    RIL_VC2_OTAREF,  0x1100             /* Verify Current 1 for OTAREF low sub Vth recover inje
  84               	.set    RIL_VD1_OTAREF,  0xea0e          /* Drain Voltage for recover injection final stage */
  85               	.set    RIL_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE low sub Vth recover injectio
  86               	.set    RIL_VC1_MITE,    0x1190           /* Verify Current 1 for MITE low sub Vth recover injectio
  87               	.set    RIL_VC2_MITE,    0x1100           /* Verify Current 1 for MITE rlow sub Vth ecover injectio
  88               	.set    RIL_VD1_MITE,    0xea0e          /* Drain Voltage for recover injection final stage */
  89               	.set    RIL_GATE_S_DIRSWC,     0x0040          /* Gate_S voltage for SWC low sub Vth recover inject
  90               	.set    RIL_VC1_DIRSWC,     4493          /* Verify Current 1 for SWC low sub Vth recover injection
  91               	.set    RIL_VC2_DIRSWC,     4383          /* Verify Current 1 for SWC low sub Vth recover injection
  92               	.set    RIL_VD1_DIRSWC,     0xea0e          /* Drain Voltage for recover injection final stage */
  93               	
  94               	/* First_Coarse_Program (FCP) */
  95               	.set    FCP_GATE_S_SWC,    0x5000          /* Gate_S voltage for SWC first coarese program = 3.5V @
  96               	.set    FCP_INJ_T_SWC,    1          /* Injection time for SWC first coarese program = *10us */
  97               	.set    FCP_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA first coarese program = 3.4V @
  98               	.set    FCP_INJ_T_OTA,    2          /* Injection time for OTA first coarese program = *10us */
  99               	.set    FCP_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF first coarese program = 
 100               	.set    FCP_INJ_T_OTAREF,    7          /* Injection time for OTAREF first coarese program = *10us 
 101               	.set    FCP_GATE_S_MITE,    0x4200          /* Gate_S voltage for MITE first coarese program = 3.3V
 102               	.set    FCP_INJ_T_MITE,    2          /* Injection time for MITE first coarese program = *10us */
 103               	.set    FCP_GATE_S_DIRSWC,    0x6200          /* Gate_S voltage for SWC first coarese program = 3.5
 104               	.set    FCP_INJ_T_DIRSWC,    1          /* Injection time for SWC first coarese program = *10us */
 105               	
 106               	.set    FCPL_GATE_S_SWC,    0x4000          /* Gate_S voltage for SWC low sub Vth first coarese pro
 107               	.set    FCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth first coarese program =
 108               	.set    FCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth first coarese pro
 109               	.set    FCPL_INJ_T_OTA,    2          /* Injection time for OTA low sub Vth first coarese program =
 110               	.set    FCPL_GATE_S_OTAREF,    0x3200          /* Gate_S voltage for OTAREF low sub Vth measured co
 111               	.set    FCPL_INJ_T_OTAREF,    7          /* Injection time for OTAREF low sub Vth measured coarse p
 112               	.set    FCPL_GATE_S_MITE,    0x0900          /* Gate_S voltage for MITE low sub Vth first coarese p
 113               	.set    FCPL_INJ_T_MITE,    1          /* Injection time for MITE low sub Vth first coarese program
 114               	.set    FCPL_GATE_S_DIRSWC,    0x4000          /* Gate_S voltage for SWC low sub Vth first coarese 
 115               	.set    FCPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth first coarese progra
 116               	
 117               	/* Measured_Coarse_Program (MCP) */
 118               	.set    MCP_GATE_S_SWC,    0x5000          /* Gate_S voltage for SWC sub Vth measured coarse progra
 119               	.set    MCP_INJ_T_SWC,    1          /* Injection time for SWC sub Vth measured coarse program = *1
 120               	.set    MCP_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA sub Vth measured coarse progra
 121               	.set    MCP_INJ_T_OTA,    2          /* Injection time for OTA sub Vth measured coarse program = *1
 122               	.set    MCP_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF sub Vth measured coarse 
 123               	.set    MCP_INJ_T_OTAREF,    7          /* Injection time for OTAREF sub Vth measured coarse progra
 124               	.set    MCP_GATE_S_MITE,    0x4200          /* Gate_S voltage for MITE sub Vth measured coarse prog
 125               	.set    MCP_INJ_T_MITE,    2          /* Injection time for MITE sub Vth measured coarse program = 
 126               	.set    MCP_GATE_S_DIRSWC,    0x6200          /* Gate_S voltage for SWC sub Vth measured coarse pro
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 8


 127               	.set    MCP_INJ_T_DIRSWC,    1          /* Injection time for SWC sub Vth measured coarse program =
 128               	
 129               	.set    MCPL_GATE_S_SWC,    0x4000          /* Gate_S voltage for SWC low sub Vth measured coarse p
 130               	.set    MCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth measured coarse program
 131               	.set    MCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth measured coarse p
 132               	.set    MCPL_INJ_T_OTA,    2          /* Injection time for OTA low sub Vth measured coarse program
 133               	.set    MCPL_GATE_S_OTAREF,    0x3200          /* Gate_S voltage for OTAREF low sub Vth measured co
 134               	.set    MCPL_INJ_T_OTAREF,    7          /* Injection time for OTAREF low sub Vth measured coarse p
 135               	.set    MCPL_GATE_S_MITE,    0x0900          /* Gate_S voltage for MITE low sub Vth measured coarse
 136               	.set    MCPL_INJ_T_MITE,    2          /* Injection time for MITE low sub Vth measured coarse progr
 137               	.set    MCPL_GATE_S_DIRSWC,    0x4000          /* Gate_S voltage for SWC low sub Vth measured coars
 138               	.set    MCPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth measured coarse prog
 139               	
 140               	/* Fine_Program (FP) */
 141               	.set    FPS_GATE_S_SWC,    0x5000          /* Gate_S voltage for SWC sub Vth fine program = 3.5V @ 
 142               	.set    FPS_INJ_T_SWC,    1          /* Injection time for SWC sub Vth fine program = *10us */
 143               	.set    FPS_VD_OS_SWC,    46         /* Vd table offset */
 144               	.set    FPS_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA sub Vth fine program = 3.4V @ 
 145               	.set    FPS_INJ_T_OTA,    2          /* Injection time for OTA sub Vth fine program = *10us */
 146               	.set    FPS_VD_OS_OTA,    46         /* Vd table offset */
 147               	.set    FPS_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF sub Vth fine program = 3
 148               	.set    FPS_INJ_T_OTAREF,    7          /* Injection time for OTAREF sub Vth fine program = *10us *
 149               	.set    FPS_VD_OS_OTAREF,    46         /* Vd table offset */
 150               	.set    FPS_GATE_S_MITE,    0x4200          /* Gate_S voltage for MITE sub Vth fine program = 3.3V 
 151               	.set    FPS_INJ_T_MITE,    2          /* Injection time for MITE sub Vth fine program = *10us */
 152               	.set    FPS_VD_OS_MITE,    46         /* Vd table offset */
 153               	.set    FPS_GATE_S_DIRSWC,    0x5c00          /* Gate_S voltage for SWC sub Vth fine program = 3.5V
 154               	.set    FPS_INJ_T_DIRSWC,    1          /* Injection time for SWC sub Vth fine program = *10us */
 155               	.set    FPS_VD_OS_DIRSWC,    46         /* Vd table offset */
 156               	
 157               	.set    FPA_GATE_S_SWC,    0x5000          /* Gate_S voltage for SWC above Vth fine program = 3.5V 
 158               	.set    FPA_INJ_T_SWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 159               	.set    FPA_VD_OS_SWC,    21         /* Vd table offset */
 160               	.set    FPA_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA above Vth fine program = 3.4V 
 161               	.set    FPA_INJ_T_OTA,    2          /* Injection time for OTA above Vth fine program = *10us */
 162               	.set    FPA_VD_OS_OTA,    21         /* Vd table offset */
 163               	.set    FPA_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF above Vth fine program =
 164               	.set    FPA_INJ_T_OTAREF,    7          /* Injection time for OTAREF above Vth fine program = *10us
 165               	.set    FPA_VD_OS_OTAREF,    21         /* Vd table offset */
 166               	.set    FPA_GATE_S_MITE,    0x4200          /* Gate_S voltage for MITE above Vth fine program = 3.3
 167               	.set    FPA_INJ_T_MITE,    2          /* Injection time for MITE above Vth fine program = *10us */
 168               	.set    FPA_VD_OS_MITE,    21         /* Vd table offset */
 169               	.set    FPA_GATE_S_DIRSWC,    0x7000          /* Gate_S voltage for SWC above Vth fine program = 3.
 170               	.set    FPA_INJ_T_DIRSWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 171               	.set    FPA_VD_OS_DIRSWC,    25         /* Vd table offset */
 172               	;.set    FPA_VD_OS_DIRSWC,    21         /* Vd table offset */
 173               	
 174               	.set    FPL_GATE_S_SWC,    0x4000          /* Gate_S voltage for SWC low sub Vth fine program = 3.2
 175               	.set    FPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth fine program = *10us */
 176               	.set    FPL_VD_OS_SWC,    46         /* Vd table offset */
 177               	.set    FPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth fine program = 3.1
 178               	.set    FPL_INJ_T_OTA,    2          /* Injection time for OTA low sub Vth fine program = *10us */
 179               	.set    FPL_VD_OS_OTA,    46         /* Vd table offset */
 180               	.set    FPL_GATE_S_OTAREF,    0x3200          /* Gate_S voltage for OTAREF low sub Vth fine program
 181               	.set    FPL_INJ_T_OTAREF,    7          /* Injection time for OTAREF low sub Vth fine program = *10
 182               	.set    FPL_VD_OS_OTAREF,    46         /* Vd table offset */
 183               	.set    FPL_GATE_S_MITE,    0x0a00          /* Gate_S voltage for MITE low sub Vth fine program = 2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 9


 184               	.set    FPL_INJ_T_MITE,    2          /* Injection time for MITE low sub Vth fine program = *10us *
 185               	.set    FPL_VD_OS_MITE,    46         /* Vd table offset */
 186               	.set    FPL_GATE_S_DIRSWC,    0x4600          /* Gate_S voltage for SWC low sub Vth fine program = 
 187               	.set    FPL_INJ_T_DIRSWC,    1          /* Injection time for SWC low sub Vth fine program = *10us 
 188               	.set    FPL_VD_OS_DIRSWC,    46         /* Vd table offset */
 189               	
   3               	
   4               	.global main
   5               	
   6               	main:
   7 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
   8 0004 3740 0050 		mov	#0x5000, r7
   9 0008 0A43      		mov	#0, r10			; Initialize time
  10 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  11               	init_wait:
  12 000e 1583      	        dec.w   r5 
  13 0010 FE23      	        jnz     init_wait
  14 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  14      5800 
  15 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  15      2001 
  16 001e 32C2      		dint
  17 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  18 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  18      6401 
  19 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  19      000B 
  20 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  20      6001 
  21 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  21      0C0B 
  22 003c 8243 080B 		mov     #0,    &ROW_SEL
  23 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  24 0044 874A 0000 		mov	r10, @r7
  25 0048 2753      		incd	r7
  26 004a 874A 0000 		mov	r10, @r7
  27 004e 2753      		incd	r7
  28               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  29 0050 3D40 4000 		mov	#0x0040, r13		;gate_s = gnd
  30 0054 B012 0000 		call	#block_measure
  31               	
  32 0058 3F40 2C01 		mov	#300, r15
  33               		;mov	#100, r15
  34               		;mov	#50, r15
  35               	coarse_loop_s:
  36               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  37 005c 3D40 4000 		mov	#0x0040, r13		;gate_s = gnd
  38 0060 B012 0000 		call	#measure_verify
  39 0064 B012 0000 	        call	#coarse_inject
  40               	;        mov     #0x3333, @r7	        ; Record Injection 0x3333 
  41               	;	incd	r7
  42               	;	mov     r10, @r7	        ; Record time 
  43               	;	incd	r7
  44               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  45               	;	mov	#0x0040, r13		;gate_s = gnd
  46               	;	call	#block_measure
  47 0068 1F83      	        dec.w   r15
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 10


  48 006a 0124      	        jz      coarse_loop_e
  49 006c F73F      		jmp	coarse_loop_s
  50               	coarse_loop_e:
  51               	
  52 006e B740 3333 	        mov     #0x3333, @r7	        ; Record Injection 0x3333 
  52      0000 
  53 0074 2753      		incd	r7
  54 0076 874A 0000 		mov     r10, @r7	        ; Record time 
  55 007a 2753      		incd	r7
  56               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  57 007c 3D40 4000 		mov	#0x0040, r13		;gate_s = gnd
  58 0080 B012 0000 		call	#block_measure
  59               	
  60 0084 B743 0000 		mov	#0xFFFF, @r7		; Data End
  61 0088 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
  62 008c 033D      		jmp     end_of_test
  63               	
  64               	coarse_inject:
  65 008e 3B40 0070 		mov	#0x7000, r11
  66 0092 2C4B      		mov	@r11, r12		; No. of FGs 
  67 0094 B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  67      0C0B 
  68 009a B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  68      6401 
  69 00a0 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  69      6001 
  70 00a6 B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  71               	coarse_inject_set_s:
  72 00aa 2B53      		incd	r11
  73 00ac A24B 080B 		mov     @r11,    &ROW_SEL
  74 00b0 2B53      		incd	r11
  75 00b2 A24B 0A0B 	        mov     @r11,    &COL_SEL
  76 00b6 2B53      		incd	r11
  77 00b8 2B53      		incd	r11
  78 00ba 2B53      		incd	r11
  79 00bc 284B      	        mov     @r11,    r8		; Read # of pulses
  80 00be 0893      		cmp	#0x0000, r8
  81 00c0 2424      		jeq	coarse_inject_skip
  82 00c2 8243 020B 		mov	#RIL_GATE_S_OTA, &GATE_S	; gate_s = gnd
  83 00c6 B240 6000 		mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
  83      100B 
  84 00cc B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
  84      120B 
  85 00d2 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  85      000B 
  86 00d8 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
  86      6001 
  87 00de 2543      		mov     #2, r5             	; Number of ms
  88 00e0 B012 0000 		call    #wait_ms                ; Call the waiting function
  89 00e4 B240 0EEA 		mov 	#RIL_VD1_OTA, &DRAIN_CTRL	; Vd  ~ 0.6V
  89      000B 
  90 00ea 3890 CCCC 		cmp	#0xcccc, r8
  91 00ee 0324      		jeq	injection_pulse
  92               	;	mov 	#0xfe0e, &DRAIN_CTRL	; Vd = 0.415V
  93               	;	cmp	#0xdddd, r8
  94               	;	jeq	injection_pulse
  95 00f0 B240 2600 		mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e: 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 11


  95      000B 
  96               	injection_pulse:
  97 00f6 1543      	       	mov     #1, r5         		; Number of 10us to inject
  98 00f8 B012 0000 		call    #wait_10us             	; Call the waiting function
  99 00fc 1A53      		add     #1, r10	        	; Calculate time
 100               	;	cmp	#0xffff, r8
 101               	;	jne	pulse_width_10us
 102               	;      	mov     #1, r5         		; Number of 10us to inject
 103               	;	call    #wait_10us             	; Call the waiting function
 104               	;	add     #1, r10	        	; Calculate time
 105               	;pulse_width_10us:
 106 00fe B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 106      000B 
 107 0104 1543      		mov     #1, r5             	; Number of ms
 108 0106 B012 0000 		call    #wait_ms                ; Call the waiting function
 109               	coarse_inject_skip:
 110 010a 1C83      	       	dec.w   r12
 111 010c 0124      	        jz      coarse_inject_e
 112 010e CD3F      	 	jmp	coarse_inject_set_s
 113               	coarse_inject_e:
 114 0110 A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
 115 0114 2543      		mov     #2, r5             	; Number of ms
 116 0116 B012 0000 		call    #wait_ms                ; Call the waiting function
 117 011a B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 117      6001 
 118 0120 1543      		mov     #1, r5             	; Number of ms
 119 0122 B012 0000 		call    #wait_ms                ; Call the waiting function
 120 0126 A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 121 012a B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 121      100B 
 122 0130 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 122      120B 
 123 0136 1543      		mov     #1, r5             	; Number of ms
 124 0138 B012 0000 		call    #wait_ms                ; Call the waiting function
 125 013c 3041      		ret
 126               	
 127               	measure_verify:
 128 013e 3B40 0070 		mov	#0x7000, r11
 129 0142 2C4B      		mov	@r11, r12		; No. of FGs 
 130 0144 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 130      0C0B 
 131 014a B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 131      6401 
 132 0150 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 132      6001 
 133 0156 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 134               	measure_verify_s:
 135 015a 2B53      		incd	r11
 136 015c A24B 080B 		mov     @r11,    &ROW_SEL
 137 0160 2B53      		incd	r11
 138 0162 A24B 0A0B 	        mov     @r11,    &COL_SEL
 139 0166 2B53      		incd	r11
 140               	;	mov	@r11, r8
 141 0168 2B53      		incd	r11
 142 016a 2B53      		incd	r11
 143 016c 294B      		mov	@r11, r9		; Read # of pulses
 144 016e 0993      		cmp	#0x0000, r9
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 12


 145 0170 2F24      		jeq	measure_verify_skip
 146 0172 824D 020B 		mov 	r13, &GATE_S
 147 0176 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 147      100B 
 148 017c B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 148      120B 
 149 0182 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 149      000B 
 150 0188 2543      	        mov     #2, r5             	; Number of ms
 151 018a B012 0000 		call    #wait_ms                ; Call the waiting function
 152 018e B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 152      000B 
 153 0194 3540 0A00 	        mov     #10, r5             	; Number of ms
 154 0198 B012 0000 	        call    #wait_ms                ; Call the waiting function
 155 019c B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 155      0C0B 
 156 01a2 3540 0500 	        mov     #5, r5             	; Number of ms
 157 01a6 B012 0000 		call    #wait_ms                ; Call the waiting function
 158 01aa 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 159 01ae 1942 040B 		mov     &ADC, r9	        ; Get value in counter
 160 01b2 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 160      0C0B 
 161               	;	cmp	r8, r9
 162 01b8 3990 9011 		cmp	#RIL_VC1_OTA, r9		; 129nA @ Vgm=0V -> 1nA @ Vgm = 0.6V
 163 01bc 0330      		jn	status_1
 164 01be 8B43 0000 		mov	#0x0000, @r11		; Injection over
 165 01c2 063C      		jmp	measure_verify_skip	
 166               	status_1:
 167 01c4 3990 0011 		cmp	#RIL_VC2_OTA, r9		; 88nA @ Vgm=0V
 168               	;	jn	status_2
 169 01c8 0330      		jn	measure_verify_skip	
 170 01ca BB40 CCCC 		mov	#0xcccc, @r11		; Vd =0.6V, time resolution = 10us
 170      0000 
 171               	;	jmp	measure_verify_skip	
 172               	;status_2:
 173               	;	cmp	#RI_VC3_OTA, r9		; 23nA @ Vgm=0V
 174               	;	jn	status_3
 175               	;	mov	#0xdddd, @r11		; Vd =0.4V, time resolution = 10us
 176               	;	jmp	measure_verify_skip	
 177               	;status_3:
 178               	;	cmp	#RI_VC4_OTA, r9		; 5nA @ Vgm=0V
 179               	;	jn	measure_verify_skip
 180               	;	mov	#0xeeee, @r11		; time resolution = 10us
 181               	measure_verify_skip:
 182 01d0 1C83      	        dec.w   r12
 183 01d2 0124      	        jz      measure_verify_e
 184 01d4 C23F      		jmp	measure_verify_s
 185               	measure_verify_e:
 186 01d6 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 186      000B 
 187 01dc B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 187      6001 
 188 01e2 3041      		ret
 189               	
 190               	block_measure:
 191 01e4 3B40 0070 		mov	#0x7000, r11
 192 01e8 2C4B      		mov	@r11, r12		; No. of FGs 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 13


 193 01ea B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 193      0C0B 
 194 01f0 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 194      6401 
 195 01f6 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 195      6001 
 196 01fc A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 197               	block_measure_s:
 198 0200 2B53      		incd	r11
 199 0202 A24B 080B 		mov     @r11,    &ROW_SEL
 200 0206 2B53      		incd	r11
 201 0208 A24B 0A0B 	        mov     @r11,    &COL_SEL
 202 020c 2B53      		incd	r11
 203 020e 2B53      		incd	r11
 204 0210 2B53      		incd	r11
 205 0212 824D 020B 		mov 	r13, &GATE_S
 206 0216 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 206      100B 
 207 021c B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 207      120B 
 208 0222 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 208      000B 
 209 0228 2543      	        mov     #2, r5             	; Number of ms
 210 022a B012 0000 		call    #wait_ms                ; Call the waiting function
 211 022e B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 211      000B 
 212 0234 3540 0A00 	        mov     #10, r5             	; Number of ms
 213 0238 B012 0000 	        call    #wait_ms                ; Call the waiting function
 214 023c B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 214      0C0B 
 215 0242 3540 0500 	        mov     #5, r5             	; Number of ms
 216 0246 B012 0000 		call    #wait_ms                ; Call the waiting function
 217 024a 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 218 024e 9742 040B 		mov     &ADC, @r7		; Get value in counter
 218      0000 
 219 0254 2753      		incd	r7
 220 0256 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 220      0C0B 
 221 025c 1C83      	        dec.w   r12
 222 025e 0124      	        jz      block_measure_e
 223 0260 CF3F      		jmp	block_measure_s
 224               	block_measure_e:
 225 0262 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 225      000B 
 226 0268 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 226      6001 
 227 026e 3041      		ret
 228               	
 229               	wait_ms:
 230 0270 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 231 0274 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 232               	wait_ms_loop:
 233 0276 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 234 0278 FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 235 027a 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 236 027c 1583      	        dec.w   r5                      ; Decrement number of ms total
 237 027e FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 14


 238 0280 3041      	        ret    
 239               	 
 240               	wait_10us:
 241 0282 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
 242 0286 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 243               	wait_10us_loop:
 244 0288 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 245 028a FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 246 028c 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 247 028e 1583      	        dec.w   r5                      ; Decrement number of ms total
 248 0290 FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 249 0292 3041      	        ret   
 250               	
 251               	end_of_test:
 252 0294 8243 5800 		mov	#0x0000, &BCSCTL2
 253 0298 0343      		nop
 254 029a 3043      		br #0xffff
 255               	
 256               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 257               	.section .vectors, "a"
 258 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 259 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 260 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 261 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 262 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 263 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 264 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 265 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 266 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
 267 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 268 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 269 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 270 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 271 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
 272 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
 273 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 15


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 16


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 17


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 18


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
       chip_para.asm:7      *ABS*:00000003 TUN_TIME_SP
       chip_para.asm:8      *ABS*:00000002 R_TUN_TIME_SP
       chip_para.asm:9      *ABS*:00001f40 INJ_TIME_SP_1
       chip_para.asm:11     *ABS*:000001f4 INJ_TIME_SP_2
       chip_para.asm:13     *ABS*:000000c8 INJ_TIME_SP_3
       chip_para.asm:15     *ABS*:000000c8 INJ_TIME_SP_4
       chip_para.asm:17     *ABS*:000000c8 INJ_TIME_SP_5
       chip_para.asm:19     *ABS*:0000003d INJ_TIME_SP_SUM
       chip_para.asm:20     *ABS*:00000001 INJ_TIME_SP_RUN
       chip_para.asm:26     *ABS*:00001190 ADC_1nA
       chip_para.asm:29     *ABS*:00000028 TUN_TIME_TP_CAB
       chip_para.asm:30     *ABS*:00000028 R_TUN_TIME_TP_CAB
       chip_para.asm:33     *ABS*:00000040 RI_GATE_S_SWC
       chip_para.asm:34     *ABS*:0000177f RI_VC1_SWC
       chip_para.asm:35     *ABS*:000016c6 RI_VC2_SWC
       chip_para.asm:36     *ABS*:0000145c RI_VC3_SWC
       chip_para.asm:37     *ABS*:00001190 RI_VC4_SWC
       chip_para.asm:38     *ABS*:0000ea0e RI_VD1_SWC
       chip_para.asm:39     *ABS*:0000fe0e RI_VD2_SWC
       chip_para.asm:40     *ABS*:00000000 RI_GATE_S_OTA
       chip_para.asm:41     *ABS*:00001a2f RI_VC1_OTA
       chip_para.asm:42     *ABS*:00001976 RI_VC2_OTA
       chip_para.asm:43     *ABS*:0000170c RI_VC3_OTA
       chip_para.asm:44     *ABS*:00001440 RI_VC4_OTA
       chip_para.asm:45     *ABS*:0000ea0e RI_VD1_OTA
       chip_para.asm:46     *ABS*:0000fe0e RI_VD2_OTA
       chip_para.asm:47     *ABS*:00000040 RI_GATE_S_OTAREF
       chip_para.asm:48     *ABS*:0000177f RI_VC1_OTAREF
       chip_para.asm:49     *ABS*:000016c6 RI_VC2_OTAREF
       chip_para.asm:50     *ABS*:0000145c RI_VC3_OTAREF
       chip_para.asm:51     *ABS*:00001190 RI_VC4_OTAREF
       chip_para.asm:52     *ABS*:0000ea0e RI_VD1_OTAREF
       chip_para.asm:53     *ABS*:0000fe0e RI_VD2_OTAREF
       chip_para.asm:54     *ABS*:00000000 RI_GATE_S_MITE
       chip_para.asm:55     *ABS*:00001b2f RI_VC1_MITE
       chip_para.asm:56     *ABS*:00001a76 RI_VC2_MITE
       chip_para.asm:57     *ABS*:0000180c RI_VC3_MITE
       chip_para.asm:58     *ABS*:00001540 RI_VC4_MITE
       chip_para.asm:59     *ABS*:0000ea0e RI_VD1_MITE
       chip_para.asm:60     *ABS*:0000fe0e RI_VD2_MITE
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 19


       chip_para.asm:61     *ABS*:00000000 RI_GATE_S_DIRSWC
       chip_para.asm:63     *ABS*:00001752 RI_VC1_DIRSWC
       chip_para.asm:64     *ABS*:000016be RI_VC2_DIRSWC
       chip_para.asm:65     *ABS*:000012ab RI_VC3_DIRSWC
       chip_para.asm:67     *ABS*:0000118d RI_VC4_DIRSWC
       chip_para.asm:68     *ABS*:0000be0e RI_VD1_DIRSWC
       chip_para.asm:70     *ABS*:0000d00e RI_VD2_DIRSWC
       chip_para.asm:73     *ABS*:00000040 RIL_GATE_S_SWC
       chip_para.asm:74     *ABS*:00001190 RIL_VC1_SWC
       chip_para.asm:75     *ABS*:000010d0 RIL_VC2_SWC
       chip_para.asm:76     *ABS*:0000ea0e RIL_VD1_SWC
       chip_para.asm:77     *ABS*:00000000 RIL_GATE_S_OTA
       chip_para.asm:78     *ABS*:00001190 RIL_VC1_OTA
       chip_para.asm:79     *ABS*:00001100 RIL_VC2_OTA
       chip_para.asm:80     *ABS*:0000ea0e RIL_VD1_OTA
       chip_para.asm:81     *ABS*:00000040 RIL_GATE_S_OTAREF
       chip_para.asm:82     *ABS*:00001190 RIL_VC1_OTAREF
       chip_para.asm:83     *ABS*:00001100 RIL_VC2_OTAREF
       chip_para.asm:84     *ABS*:0000ea0e RIL_VD1_OTAREF
       chip_para.asm:85     *ABS*:00000000 RIL_GATE_S_MITE
       chip_para.asm:86     *ABS*:00001190 RIL_VC1_MITE
       chip_para.asm:87     *ABS*:00001100 RIL_VC2_MITE
       chip_para.asm:88     *ABS*:0000ea0e RIL_VD1_MITE
       chip_para.asm:89     *ABS*:00000040 RIL_GATE_S_DIRSWC
       chip_para.asm:90     *ABS*:0000118d RIL_VC1_DIRSWC
       chip_para.asm:91     *ABS*:0000111f RIL_VC2_DIRSWC
       chip_para.asm:92     *ABS*:0000ea0e RIL_VD1_DIRSWC
       chip_para.asm:95     *ABS*:00005000 FCP_GATE_S_SWC
       chip_para.asm:96     *ABS*:00000001 FCP_INJ_T_SWC
       chip_para.asm:97     *ABS*:00004a00 FCP_GATE_S_OTA
       chip_para.asm:98     *ABS*:00000002 FCP_INJ_T_OTA
       chip_para.asm:99     *ABS*:00004a00 FCP_GATE_S_OTAREF
       chip_para.asm:100    *ABS*:00000007 FCP_INJ_T_OTAREF
       chip_para.asm:101    *ABS*:00004200 FCP_GATE_S_MITE
       chip_para.asm:102    *ABS*:00000002 FCP_INJ_T_MITE
       chip_para.asm:103    *ABS*:00006200 FCP_GATE_S_DIRSWC
       chip_para.asm:104    *ABS*:00000001 FCP_INJ_T_DIRSWC
       chip_para.asm:106    *ABS*:00004000 FCPL_GATE_S_SWC
       chip_para.asm:107    *ABS*:00000001 FCPL_INJ_T_SWC
       chip_para.asm:108    *ABS*:00003200 FCPL_GATE_S_OTA
       chip_para.asm:109    *ABS*:00000002 FCPL_INJ_T_OTA
       chip_para.asm:110    *ABS*:00003200 FCPL_GATE_S_OTAREF
       chip_para.asm:111    *ABS*:00000007 FCPL_INJ_T_OTAREF
       chip_para.asm:112    *ABS*:00000900 FCPL_GATE_S_MITE
       chip_para.asm:113    *ABS*:00000001 FCPL_INJ_T_MITE
       chip_para.asm:114    *ABS*:00004000 FCPL_GATE_S_DIRSWC
       chip_para.asm:115    *ABS*:00000001 FCPL_INJ_T_DIRSWC
       chip_para.asm:118    *ABS*:00005000 MCP_GATE_S_SWC
       chip_para.asm:119    *ABS*:00000001 MCP_INJ_T_SWC
       chip_para.asm:120    *ABS*:00004a00 MCP_GATE_S_OTA
       chip_para.asm:121    *ABS*:00000002 MCP_INJ_T_OTA
       chip_para.asm:122    *ABS*:00004a00 MCP_GATE_S_OTAREF
       chip_para.asm:123    *ABS*:00000007 MCP_INJ_T_OTAREF
       chip_para.asm:124    *ABS*:00004200 MCP_GATE_S_MITE
       chip_para.asm:125    *ABS*:00000002 MCP_INJ_T_MITE
       chip_para.asm:126    *ABS*:00006200 MCP_GATE_S_DIRSWC
       chip_para.asm:127    *ABS*:00000001 MCP_INJ_T_DIRSWC
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 20


       chip_para.asm:129    *ABS*:00004000 MCPL_GATE_S_SWC
       chip_para.asm:130    *ABS*:00000001 MCPL_INJ_T_SWC
       chip_para.asm:131    *ABS*:00003200 MCPL_GATE_S_OTA
       chip_para.asm:132    *ABS*:00000002 MCPL_INJ_T_OTA
       chip_para.asm:133    *ABS*:00003200 MCPL_GATE_S_OTAREF
       chip_para.asm:134    *ABS*:00000007 MCPL_INJ_T_OTAREF
       chip_para.asm:135    *ABS*:00000900 MCPL_GATE_S_MITE
       chip_para.asm:136    *ABS*:00000002 MCPL_INJ_T_MITE
       chip_para.asm:137    *ABS*:00004000 MCPL_GATE_S_DIRSWC
       chip_para.asm:138    *ABS*:00000001 MCPL_INJ_T_DIRSWC
       chip_para.asm:141    *ABS*:00005000 FPS_GATE_S_SWC
       chip_para.asm:142    *ABS*:00000001 FPS_INJ_T_SWC
       chip_para.asm:143    *ABS*:0000002e FPS_VD_OS_SWC
       chip_para.asm:144    *ABS*:00004a00 FPS_GATE_S_OTA
       chip_para.asm:145    *ABS*:00000002 FPS_INJ_T_OTA
       chip_para.asm:146    *ABS*:0000002e FPS_VD_OS_OTA
       chip_para.asm:147    *ABS*:00004a00 FPS_GATE_S_OTAREF
       chip_para.asm:148    *ABS*:00000007 FPS_INJ_T_OTAREF
       chip_para.asm:149    *ABS*:0000002e FPS_VD_OS_OTAREF
       chip_para.asm:150    *ABS*:00004200 FPS_GATE_S_MITE
       chip_para.asm:151    *ABS*:00000002 FPS_INJ_T_MITE
       chip_para.asm:152    *ABS*:0000002e FPS_VD_OS_MITE
       chip_para.asm:153    *ABS*:00005c00 FPS_GATE_S_DIRSWC
       chip_para.asm:154    *ABS*:00000001 FPS_INJ_T_DIRSWC
       chip_para.asm:155    *ABS*:0000002e FPS_VD_OS_DIRSWC
       chip_para.asm:157    *ABS*:00005000 FPA_GATE_S_SWC
       chip_para.asm:158    *ABS*:00000001 FPA_INJ_T_SWC
       chip_para.asm:159    *ABS*:00000015 FPA_VD_OS_SWC
       chip_para.asm:160    *ABS*:00004a00 FPA_GATE_S_OTA
       chip_para.asm:161    *ABS*:00000002 FPA_INJ_T_OTA
       chip_para.asm:162    *ABS*:00000015 FPA_VD_OS_OTA
       chip_para.asm:163    *ABS*:00004a00 FPA_GATE_S_OTAREF
       chip_para.asm:164    *ABS*:00000007 FPA_INJ_T_OTAREF
       chip_para.asm:165    *ABS*:00000015 FPA_VD_OS_OTAREF
       chip_para.asm:166    *ABS*:00004200 FPA_GATE_S_MITE
       chip_para.asm:167    *ABS*:00000002 FPA_INJ_T_MITE
       chip_para.asm:168    *ABS*:00000015 FPA_VD_OS_MITE
       chip_para.asm:169    *ABS*:00007000 FPA_GATE_S_DIRSWC
       chip_para.asm:170    *ABS*:00000001 FPA_INJ_T_DIRSWC
       chip_para.asm:171    *ABS*:00000019 FPA_VD_OS_DIRSWC
       chip_para.asm:174    *ABS*:00004000 FPL_GATE_S_SWC
       chip_para.asm:175    *ABS*:00000001 FPL_INJ_T_SWC
       chip_para.asm:176    *ABS*:0000002e FPL_VD_OS_SWC
       chip_para.asm:177    *ABS*:00003200 FPL_GATE_S_OTA
       chip_para.asm:178    *ABS*:00000002 FPL_INJ_T_OTA
       chip_para.asm:179    *ABS*:0000002e FPL_VD_OS_OTA
       chip_para.asm:180    *ABS*:00003200 FPL_GATE_S_OTAREF
       chip_para.asm:181    *ABS*:00000007 FPL_INJ_T_OTAREF
       chip_para.asm:182    *ABS*:0000002e FPL_VD_OS_OTAREF
       chip_para.asm:183    *ABS*:00000a00 FPL_GATE_S_MITE
       chip_para.asm:184    *ABS*:00000002 FPL_INJ_T_MITE
       chip_para.asm:185    *ABS*:0000002e FPL_VD_OS_MITE
       chip_para.asm:186    *ABS*:00004600 FPL_GATE_S_DIRSWC
       chip_para.asm:187    *ABS*:00000001 FPL_INJ_T_DIRSWC
       chip_para.asm:188    *ABS*:0000002e FPL_VD_OS_DIRSWC
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:6      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:11     .text:0000000e init_wait
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43 			page 21


/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:190    .text:000001e4 block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:35     .text:0000005c coarse_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:127    .text:0000013e measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:64     .text:0000008e coarse_inject
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:50     .text:0000006e coarse_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:251    .text:00000294 end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:71     .text:000000aa coarse_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:109    .text:0000010a coarse_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:229    .text:00000270 wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:96     .text:000000f6 injection_pulse
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:240    .text:00000282 wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:113    .text:00000110 coarse_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:134    .text:0000015a measure_verify_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:181    .text:000001d0 measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:166    .text:000001c4 status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:185    .text:000001d6 measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:197    .text:00000200 block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:224    .text:00000262 block_measure_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:232    .text:00000276 wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/recover_inject_lowsubVt_CAB_ota.s43:243    .text:00000288 wait_10us_loop

NO UNDEFINED SYMBOLS

recover_inject_lowsubVt_CAB_ota.o:     file format elf32-msp430
recover_inject_lowsubVt_CAB_ota.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000029c  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  000002d0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  000002d0  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  000002d0  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
00000003 l       *ABS*	00000000 TUN_TIME_SP
00000002 l       *ABS*	00000000 R_TUN_TIME_SP
00001f40 l       *ABS*	00000000 INJ_TIME_SP_1
000001f4 l       *ABS*	00000000 INJ_TIME_SP_2
000000c8 l       *ABS*	00000000 INJ_TIME_SP_3
000000c8 l       *ABS*	00000000 INJ_TIME_SP_4
000000c8 l       *ABS*	00000000 INJ_TIME_SP_5
0000003d l       *ABS*	00000000 INJ_TIME_SP_SUM
00000001 l       *ABS*	00000000 INJ_TIME_SP_RUN
00001190 l       *ABS*	00000000 ADC_1nA
00000028 l       *ABS*	00000000 TUN_TIME_TP_CAB
00000028 l       *ABS*	00000000 R_TUN_TIME_TP_CAB
00000040 l       *ABS*	00000000 RI_GATE_S_SWC
0000177f l       *ABS*	00000000 RI_VC1_SWC
000016c6 l       *ABS*	00000000 RI_VC2_SWC
0000145c l       *ABS*	00000000 RI_VC3_SWC
00001190 l       *ABS*	00000000 RI_VC4_SWC
0000ea0e l       *ABS*	00000000 RI_VD1_SWC
0000fe0e l       *ABS*	00000000 RI_VD2_SWC
00000000 l       *ABS*	00000000 RI_GATE_S_OTA
00001a2f l       *ABS*	00000000 RI_VC1_OTA
00001976 l       *ABS*	00000000 RI_VC2_OTA
0000170c l       *ABS*	00000000 RI_VC3_OTA
00001440 l       *ABS*	00000000 RI_VC4_OTA
0000ea0e l       *ABS*	00000000 RI_VD1_OTA
0000fe0e l       *ABS*	00000000 RI_VD2_OTA
00000040 l       *ABS*	00000000 RI_GATE_S_OTAREF
0000177f l       *ABS*	00000000 RI_VC1_OTAREF
000016c6 l       *ABS*	00000000 RI_VC2_OTAREF
0000145c l       *ABS*	00000000 RI_VC3_OTAREF
00001190 l       *ABS*	00000000 RI_VC4_OTAREF
0000ea0e l       *ABS*	00000000 RI_VD1_OTAREF
0000fe0e l       *ABS*	00000000 RI_VD2_OTAREF
00000000 l       *ABS*	00000000 RI_GATE_S_MITE
00001b2f l       *ABS*	00000000 RI_VC1_MITE
00001a76 l       *ABS*	00000000 RI_VC2_MITE
0000180c l       *ABS*	00000000 RI_VC3_MITE
00001540 l       *ABS*	00000000 RI_VC4_MITE
0000ea0e l       *ABS*	00000000 RI_VD1_MITE
0000fe0e l       *ABS*	00000000 RI_VD2_MITE
00000000 l       *ABS*	00000000 RI_GATE_S_DIRSWC
00001752 l       *ABS*	00000000 RI_VC1_DIRSWC
000016be l       *ABS*	00000000 RI_VC2_DIRSWC
000012ab l       *ABS*	00000000 RI_VC3_DIRSWC
0000118d l       *ABS*	00000000 RI_VC4_DIRSWC
0000be0e l       *ABS*	00000000 RI_VD1_DIRSWC
0000d00e l       *ABS*	00000000 RI_VD2_DIRSWC
00000040 l       *ABS*	00000000 RIL_GATE_S_SWC
00001190 l       *ABS*	00000000 RIL_VC1_SWC
000010d0 l       *ABS*	00000000 RIL_VC2_SWC
0000ea0e l       *ABS*	00000000 RIL_VD1_SWC
00000000 l       *ABS*	00000000 RIL_GATE_S_OTA
00001190 l       *ABS*	00000000 RIL_VC1_OTA
00001100 l       *ABS*	00000000 RIL_VC2_OTA
0000ea0e l       *ABS*	00000000 RIL_VD1_OTA
00000040 l       *ABS*	00000000 RIL_GATE_S_OTAREF
00001190 l       *ABS*	00000000 RIL_VC1_OTAREF
00001100 l       *ABS*	00000000 RIL_VC2_OTAREF
0000ea0e l       *ABS*	00000000 RIL_VD1_OTAREF
00000000 l       *ABS*	00000000 RIL_GATE_S_MITE
00001190 l       *ABS*	00000000 RIL_VC1_MITE
00001100 l       *ABS*	00000000 RIL_VC2_MITE
0000ea0e l       *ABS*	00000000 RIL_VD1_MITE
00000040 l       *ABS*	00000000 RIL_GATE_S_DIRSWC
0000118d l       *ABS*	00000000 RIL_VC1_DIRSWC
0000111f l       *ABS*	00000000 RIL_VC2_DIRSWC
0000ea0e l       *ABS*	00000000 RIL_VD1_DIRSWC
00005000 l       *ABS*	00000000 FCP_GATE_S_SWC
00000001 l       *ABS*	00000000 FCP_INJ_T_SWC
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTA
00000002 l       *ABS*	00000000 FCP_INJ_T_OTA
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FCP_INJ_T_OTAREF
00004200 l       *ABS*	00000000 FCP_GATE_S_MITE
00000002 l       *ABS*	00000000 FCP_INJ_T_MITE
00006200 l       *ABS*	00000000 FCP_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FCP_INJ_T_DIRSWC
00004000 l       *ABS*	00000000 FCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 FCPL_GATE_S_OTA
00000002 l       *ABS*	00000000 FCPL_INJ_T_OTA
00003200 l       *ABS*	00000000 FCPL_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FCPL_INJ_T_OTAREF
00000900 l       *ABS*	00000000 FCPL_GATE_S_MITE
00000001 l       *ABS*	00000000 FCPL_INJ_T_MITE
00004000 l       *ABS*	00000000 FCPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FCPL_INJ_T_DIRSWC
00005000 l       *ABS*	00000000 MCP_GATE_S_SWC
00000001 l       *ABS*	00000000 MCP_INJ_T_SWC
00004a00 l       *ABS*	00000000 MCP_GATE_S_OTA
00000002 l       *ABS*	00000000 MCP_INJ_T_OTA
00004a00 l       *ABS*	00000000 MCP_GATE_S_OTAREF
00000007 l       *ABS*	00000000 MCP_INJ_T_OTAREF
00004200 l       *ABS*	00000000 MCP_GATE_S_MITE
00000002 l       *ABS*	00000000 MCP_INJ_T_MITE
00006200 l       *ABS*	00000000 MCP_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 MCP_INJ_T_DIRSWC
00004000 l       *ABS*	00000000 MCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 MCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 MCPL_GATE_S_OTA
00000002 l       *ABS*	00000000 MCPL_INJ_T_OTA
00003200 l       *ABS*	00000000 MCPL_GATE_S_OTAREF
00000007 l       *ABS*	00000000 MCPL_INJ_T_OTAREF
00000900 l       *ABS*	00000000 MCPL_GATE_S_MITE
00000002 l       *ABS*	00000000 MCPL_INJ_T_MITE
00004000 l       *ABS*	00000000 MCPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 MCPL_INJ_T_DIRSWC
00005000 l       *ABS*	00000000 FPS_GATE_S_SWC
00000001 l       *ABS*	00000000 FPS_INJ_T_SWC
0000002e l       *ABS*	00000000 FPS_VD_OS_SWC
00004a00 l       *ABS*	00000000 FPS_GATE_S_OTA
00000002 l       *ABS*	00000000 FPS_INJ_T_OTA
0000002e l       *ABS*	00000000 FPS_VD_OS_OTA
00004a00 l       *ABS*	00000000 FPS_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FPS_INJ_T_OTAREF
0000002e l       *ABS*	00000000 FPS_VD_OS_OTAREF
00004200 l       *ABS*	00000000 FPS_GATE_S_MITE
00000002 l       *ABS*	00000000 FPS_INJ_T_MITE
0000002e l       *ABS*	00000000 FPS_VD_OS_MITE
00005c00 l       *ABS*	00000000 FPS_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPS_INJ_T_DIRSWC
0000002e l       *ABS*	00000000 FPS_VD_OS_DIRSWC
00005000 l       *ABS*	00000000 FPA_GATE_S_SWC
00000001 l       *ABS*	00000000 FPA_INJ_T_SWC
00000015 l       *ABS*	00000000 FPA_VD_OS_SWC
00004a00 l       *ABS*	00000000 FPA_GATE_S_OTA
00000002 l       *ABS*	00000000 FPA_INJ_T_OTA
00000015 l       *ABS*	00000000 FPA_VD_OS_OTA
00004a00 l       *ABS*	00000000 FPA_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FPA_INJ_T_OTAREF
00000015 l       *ABS*	00000000 FPA_VD_OS_OTAREF
00004200 l       *ABS*	00000000 FPA_GATE_S_MITE
00000002 l       *ABS*	00000000 FPA_INJ_T_MITE
00000015 l       *ABS*	00000000 FPA_VD_OS_MITE
00007000 l       *ABS*	00000000 FPA_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPA_INJ_T_DIRSWC
00000019 l       *ABS*	00000000 FPA_VD_OS_DIRSWC
00004000 l       *ABS*	00000000 FPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FPL_INJ_T_SWC
0000002e l       *ABS*	00000000 FPL_VD_OS_SWC
00003200 l       *ABS*	00000000 FPL_GATE_S_OTA
00000002 l       *ABS*	00000000 FPL_INJ_T_OTA
0000002e l       *ABS*	00000000 FPL_VD_OS_OTA
00003200 l       *ABS*	00000000 FPL_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FPL_INJ_T_OTAREF
0000002e l       *ABS*	00000000 FPL_VD_OS_OTAREF
00000a00 l       *ABS*	00000000 FPL_GATE_S_MITE
00000002 l       *ABS*	00000000 FPL_INJ_T_MITE
0000002e l       *ABS*	00000000 FPL_VD_OS_MITE
00004600 l       *ABS*	00000000 FPL_GATE_S_DIRSWC
00000001 l       *ABS*	00000000 FPL_INJ_T_DIRSWC
0000002e l       *ABS*	00000000 FPL_VD_OS_DIRSWC
0000000e l       .text	00000000 init_wait
000001e4 l       .text	00000000 block_measure
0000005c l       .text	00000000 coarse_loop_s
0000013e l       .text	00000000 measure_verify
0000008e l       .text	00000000 coarse_inject
0000006e l       .text	00000000 coarse_loop_e
00000294 l       .text	00000000 end_of_test
000000aa l       .text	00000000 coarse_inject_set_s
0000010a l       .text	00000000 coarse_inject_skip
00000270 l       .text	00000000 wait_ms
000000f6 l       .text	00000000 injection_pulse
00000282 l       .text	00000000 wait_10us
00000110 l       .text	00000000 coarse_inject_e
0000015a l       .text	00000000 measure_verify_s
000001d0 l       .text	00000000 measure_verify_skip
000001c4 l       .text	00000000 status_1
000001d6 l       .text	00000000 measure_verify_e
00000200 l       .text	00000000 block_measure_s
00000262 l       .text	00000000 block_measure_e
00000276 l       .text	00000000 wait_ms_loop
00000288 l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 3d404000 b0120000 3f402c01 3d404000  =@@.....?@,.=@@.
 0060 b0120000 b0120000 1f830124 f73fb740  ...........$.?.@
 0070 33330000 2753874a 00002753 3d404000  33..'S.J..'S=@@.
 0080 b0120000 b7430000 82435800 033d3b40  .....C...CX..=;@
 0090 00702c4b b2400080 0c0bb240 04be6401  .p,K.@.....@..d.
 00a0 b2402400 6001b243 0e0b2b53 a24b080b  .@$.`..C..+S.K..
 00b0 2b53a24b 0a0b2b53 2b532b53 284b0893  +S.K..+S+S+S(K..
 00c0 24248243 020bb240 6000100b b2406000  $$.C...@`....@`.
 00d0 120bb240 6600000b b2401400 60012543  ...@f....@..`.%C
 00e0 b0120000 b2400eea 000b3890 cccc0324  .....@....8....$
 00f0 b2402600 000b1543 b0120000 1a53b240  .@&....C.....S.@
 0100 6600000b 1543b012 00001c83 0124cd3f  f....C.......$.?
 0110 a2426001 2543b012 0000b240 24006001  .B`.%C.....@$.`.
 0120 1543b012 0000a243 0e0bb240 4000100b  .C.....C...@@...
 0130 b2404000 120b1543 b0120000 30413b40  .@@....C....0A;@
 0140 00702c4b b2400080 0c0bb240 04be6401  .p,K.@.....@..d.
 0150 b2402400 6001a243 0e0b2b53 a24b080b  .@$.`..C..+S.K..
 0160 2b53a24b 0a0b2b53 2b532b53 294b0993  +S.K..+S+S+S)K..
 0170 2f24824d 020bb240 4000100b b2404000  /$.M...@@....@@.
 0180 120bb240 6600000b 2543b012 0000b240  ...@f...%C.....@
 0190 a400000b 35400a00 b0120000 b24000b0  ....5@.......@..
 01a0 0c0b3540 0500b012 00008243 040b1942  ..5@.......C...B
 01b0 040bb240 00800c0b 39909011 03308b43  ...@....9....0.C
 01c0 0000063c 39900011 0330bb40 cccc0000  ...<9....0.@....
 01d0 1c830124 c23fb240 6600000b b2402400  ...$.?.@f....@$.
 01e0 60013041 3b400070 2c4bb240 00800c0b  `.0A;@.p,K.@....
 01f0 b24004be 6401b240 24006001 a2430e0b  .@..d..@$.`..C..
 0200 2b53a24b 080b2b53 a24b0a0b 2b532b53  +S.K..+S.K..+S+S
 0210 2b53824d 020bb240 4000100b b2404000  +S.M...@@....@@.
 0220 120bb240 6600000b 2543b012 0000b240  ...@f...%C.....@
 0230 a400000b 35400a00 b0120000 b24000b0  ....5@.......@..
 0240 0c0b3540 0500b012 00008243 040b9742  ..5@.......C...B
 0250 040b0000 2753b240 00800c0b 1c830124  ....'S.@.......$
 0260 cf3fb240 6600000b b2402400 60013041  .?.@f....@$.`.0A
 0270 3440fc0c 06441683 fe230644 1583fb23  4@...D...#.D...#
 0280 30413440 22000644 1683fe23 06441583  0A4@"..D...#.D..
 0290 fb233041 82435800 03433043           .#0A.CX..C0C    
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	3d 40 40 00 	mov	#64,	r13	;#0x0040
  54:	b0 12 00 00 	call	#0x0000	
			56: R_MSP430_16_BYTE	.text+0x1e4
  58:	3f 40 2c 01 	mov	#300,	r15	;#0x012c

0000005c <coarse_loop_s>:
  5c:	3d 40 40 00 	mov	#64,	r13	;#0x0040
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x13e
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0x8e
  68:	1f 83       	dec	r15		
  6a:	01 24       	jz	$+4      	;abs 0x6e
  6c:	f7 3f       	jmp	$-16     	;abs 0x5c

0000006e <coarse_loop_e>:
  6e:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  72:	00 00 
  74:	27 53       	incd	r7		
  76:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  7a:	27 53       	incd	r7		
  7c:	3d 40 40 00 	mov	#64,	r13	;#0x0040
  80:	b0 12 00 00 	call	#0x0000	
			82: R_MSP430_16_BYTE	.text+0x1e4
  84:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  88:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  8c:	03 3d       	jmp	$+520    	;abs 0x294

0000008e <coarse_inject>:
  8e:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  92:	2c 4b       	mov	@r11,	r12	
  94:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  98:	0c 0b 
  9a:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  9e:	64 01 
  a0:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  a4:	60 01 
  a6:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000aa <coarse_inject_set_s>:
  aa:	2b 53       	incd	r11		
  ac:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  b0:	2b 53       	incd	r11		
  b2:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  b6:	2b 53       	incd	r11		
  b8:	2b 53       	incd	r11		
  ba:	2b 53       	incd	r11		
  bc:	28 4b       	mov	@r11,	r8	
  be:	08 93       	tst	r8		
  c0:	24 24       	jz	$+74     	;abs 0x10a
  c2:	82 43 02 0b 	mov	#0,	&0x0b02	;r3 As==00
  c6:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  ca:	10 0b 
  cc:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  d0:	12 0b 
  d2:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  d6:	00 0b 
  d8:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  dc:	60 01 
  de:	25 43       	mov	#2,	r5	;r3 As==10
  e0:	b0 12 00 00 	call	#0x0000	
			e2: R_MSP430_16_BYTE	.text+0x270
  e4:	b2 40 0e ea 	mov	#-5618,	&0x0b00	;#0xea0e
  e8:	00 0b 
  ea:	38 90 cc cc 	cmp	#-13108,r8	;#0xcccc
  ee:	03 24       	jz	$+8      	;abs 0xf6
  f0:	b2 40 26 00 	mov	#38,	&0x0b00	;#0x0026
  f4:	00 0b 

000000f6 <injection_pulse>:
  f6:	15 43       	mov	#1,	r5	;r3 As==01
  f8:	b0 12 00 00 	call	#0x0000	
			fa: R_MSP430_16_BYTE	.text+0x282
  fc:	1a 53       	inc	r10		
  fe:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 102:	00 0b 
 104:	15 43       	mov	#1,	r5	;r3 As==01
 106:	b0 12 00 00 	call	#0x0000	
			108: R_MSP430_16_BYTE	.text+0x270

0000010a <coarse_inject_skip>:
 10a:	1c 83       	dec	r12		
 10c:	01 24       	jz	$+4      	;abs 0x110
 10e:	cd 3f       	jmp	$-100    	;abs 0xaa

00000110 <coarse_inject_e>:
 110:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 114:	25 43       	mov	#2,	r5	;r3 As==10
 116:	b0 12 00 00 	call	#0x0000	
			118: R_MSP430_16_BYTE	.text+0x270
 11a:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 11e:	60 01 
 120:	15 43       	mov	#1,	r5	;r3 As==01
 122:	b0 12 00 00 	call	#0x0000	
			124: R_MSP430_16_BYTE	.text+0x270
 126:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 12a:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 12e:	10 0b 
 130:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 134:	12 0b 
 136:	15 43       	mov	#1,	r5	;r3 As==01
 138:	b0 12 00 00 	call	#0x0000	
			13a: R_MSP430_16_BYTE	.text+0x270
 13c:	30 41       	ret			

0000013e <measure_verify>:
 13e:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 142:	2c 4b       	mov	@r11,	r12	
 144:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 148:	0c 0b 
 14a:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 14e:	64 01 
 150:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 154:	60 01 
 156:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000015a <measure_verify_s>:
 15a:	2b 53       	incd	r11		
 15c:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 160:	2b 53       	incd	r11		
 162:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 166:	2b 53       	incd	r11		
 168:	2b 53       	incd	r11		
 16a:	2b 53       	incd	r11		
 16c:	29 4b       	mov	@r11,	r9	
 16e:	09 93       	tst	r9		
 170:	2f 24       	jz	$+96     	;abs 0x1d0
 172:	82 4d 02 0b 	mov	r13,	&0x0b02	
 176:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 17a:	10 0b 
 17c:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 180:	12 0b 
 182:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 186:	00 0b 
 188:	25 43       	mov	#2,	r5	;r3 As==10
 18a:	b0 12 00 00 	call	#0x0000	
			18c: R_MSP430_16_BYTE	.text+0x270
 18e:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 192:	00 0b 
 194:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 198:	b0 12 00 00 	call	#0x0000	
			19a: R_MSP430_16_BYTE	.text+0x270
 19c:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 1a0:	0c 0b 
 1a2:	35 40 05 00 	mov	#5,	r5	;#0x0005
 1a6:	b0 12 00 00 	call	#0x0000	
			1a8: R_MSP430_16_BYTE	.text+0x270
 1aa:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1ae:	19 42 04 0b 	mov	&0x0b04,r9	
 1b2:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1b6:	0c 0b 
 1b8:	39 90 90 11 	cmp	#4496,	r9	;#0x1190
 1bc:	03 30       	jn	$+8      	;abs 0x1c4
 1be:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1c2:	06 3c       	jmp	$+14     	;abs 0x1d0

000001c4 <status_1>:
 1c4:	39 90 00 11 	cmp	#4352,	r9	;#0x1100
 1c8:	03 30       	jn	$+8      	;abs 0x1d0
 1ca:	bb 40 cc cc 	mov	#-13108,0(r11)	;#0xcccc, 0x0000(r11)
 1ce:	00 00 

000001d0 <measure_verify_skip>:
 1d0:	1c 83       	dec	r12		
 1d2:	01 24       	jz	$+4      	;abs 0x1d6
 1d4:	c2 3f       	jmp	$-122    	;abs 0x15a

000001d6 <measure_verify_e>:
 1d6:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1da:	00 0b 
 1dc:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 1e0:	60 01 
 1e2:	30 41       	ret			

000001e4 <block_measure>:
 1e4:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 1e8:	2c 4b       	mov	@r11,	r12	
 1ea:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1ee:	0c 0b 
 1f0:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 1f4:	64 01 
 1f6:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 1fa:	60 01 
 1fc:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

00000200 <block_measure_s>:
 200:	2b 53       	incd	r11		
 202:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 206:	2b 53       	incd	r11		
 208:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 20c:	2b 53       	incd	r11		
 20e:	2b 53       	incd	r11		
 210:	2b 53       	incd	r11		
 212:	82 4d 02 0b 	mov	r13,	&0x0b02	
 216:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 21a:	10 0b 
 21c:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 220:	12 0b 
 222:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 226:	00 0b 
 228:	25 43       	mov	#2,	r5	;r3 As==10
 22a:	b0 12 00 00 	call	#0x0000	
			22c: R_MSP430_16_BYTE	.text+0x270
 22e:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 232:	00 0b 
 234:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 238:	b0 12 00 00 	call	#0x0000	
			23a: R_MSP430_16_BYTE	.text+0x270
 23c:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 240:	0c 0b 
 242:	35 40 05 00 	mov	#5,	r5	;#0x0005
 246:	b0 12 00 00 	call	#0x0000	
			248: R_MSP430_16_BYTE	.text+0x270
 24a:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 24e:	97 42 04 0b 	mov	&0x0b04,0(r7)	;0x0000(r7)
 252:	00 00 
 254:	27 53       	incd	r7		
 256:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 25a:	0c 0b 
 25c:	1c 83       	dec	r12		
 25e:	01 24       	jz	$+4      	;abs 0x262
 260:	cf 3f       	jmp	$-96     	;abs 0x200

00000262 <block_measure_e>:
 262:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 266:	00 0b 
 268:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 26c:	60 01 
 26e:	30 41       	ret			

00000270 <wait_ms>:
 270:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 274:	06 44       	mov	r4,	r6	

00000276 <wait_ms_loop>:
 276:	16 83       	dec	r6		
 278:	fe 23       	jnz	$-2      	;abs 0x276
 27a:	06 44       	mov	r4,	r6	
 27c:	15 83       	dec	r5		
 27e:	fb 23       	jnz	$-8      	;abs 0x276
 280:	30 41       	ret			

00000282 <wait_10us>:
 282:	34 40 22 00 	mov	#34,	r4	;#0x0022
 286:	06 44       	mov	r4,	r6	

00000288 <wait_10us_loop>:
 288:	16 83       	dec	r6		
 28a:	fe 23       	jnz	$-2      	;abs 0x288
 28c:	06 44       	mov	r4,	r6	
 28e:	15 83       	dec	r5		
 290:	fb 23       	jnz	$-8      	;abs 0x288
 292:	30 41       	ret			

00000294 <end_of_test>:
 294:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 298:	03 43       	nop			
 29a:	30 43       	br	#-1		;r3 As==11
