GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	
   3               	.global main
   4               	
   5               	main:
   6 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
   7 0004 3740 0050 		mov	#0x5000, r7
   8 0008 0A43      		mov	#0, r10			; Initialize time
   9 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  10               	init_wait:
  11 000e 1583      	        dec.w   r5 
  12 0010 FE23      	        jnz     init_wait
  13 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  13      5800 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 6


  14 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  14      2001 
  15 001e 32C2      		dint
  16 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  17 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  17      6401 
  18 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  18      000B 
  19 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  19      6001 
  20 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  20      0C0B 
  21 003c 8243 080B 		mov     #0,    &ROW_SEL
  22 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  23 0044 874A 0000 		mov	r10, @r7
  24 0048 2753      		incd	r7
  25 004a 874A 0000 		mov	r10, @r7
  26 004e 2753      		incd	r7
  27 0050 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  28 0052 B012 0000 		call	#block_measure
  29               	
  30               		;mov	#1, r15
  31               		;mov	#10, r15
  32               		;mov	#30, r15
  33               		;mov	#40, r15
  34 0056 3F40 3200 		mov	#50, r15
  35               		;mov	#100, r15
  36               	fine_loop_s:
  37 005a 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  38 005c B012 0000 		call	#measure_verify
  39 0060 B012 0000 		call	#Vd_calculate
  40 0064 B012 0000 		call	#fine_inject
  41 0068 B740 3333 		mov     #0x3333, @r7	        ; Record Injection 0x3333 
  41      0000 
  42 006e 2753      		incd	r7
  43 0070 874A 0000 		mov     r10, @r7	        ; Record time 
  44 0074 2753      		incd	r7
  45 0076 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  46 0078 B012 0000 		call	#block_measure
  47 007c 1F83      	        dec.w   r15
  48 007e 0124      	        jz      fine_loop_e
  49 0080 EC3F      		jmp	fine_loop_s
  50               	fine_loop_e:
  51               	
  52               	;	mov	#31, r15
  53               	;last_measure_loop_s:
  54               	;	mov     #0x3333, @r7	        ; Record Injection 0x3333 
  55               	;	incd	r7
  56               	;	mov     r10, @r7	        ; Record time 
  57               	;	incd	r7
  58               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  59               	;	call	#block_measure
  60               	;        dec.w   r15
  61               	;        jz      last_measure_loop_e
  62               	;	jmp	last_measure_loop_s
  63               	;last_measure_loop_e:
  64               	
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 7


  65 0082 B743 0000 		mov	#0xFFFF, @r7		; Data End
  66 0086 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
  67 008a 533D      		jmp     end_of_test
  68               	
  69               	fine_inject:
  70 008c 3B40 0070 		mov	#0x7000, r11
  71 0090 2C4B      		mov	@r11, r12		; No. of FGs 
  72 0092 B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  72      0C0B 
  73 0098 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  73      6401 
  74 009e B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  74      6001 
  75 00a4 B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  76               	fine_inject_set_s:
  77 00a8 2B53      		incd	r11
  78 00aa A24B 080B 		mov     @r11,    &ROW_SEL
  79 00ae 2B53      		incd	r11
  80 00b0 A24B 0A0B 	        mov     @r11,    &COL_SEL
  81 00b4 2B53      		incd	r11
  82 00b6 2B53      		incd	r11
  83 00b8 2B53      		incd	r11
  84 00ba 284B      	        mov     @r11,    r8		; Read Vd
  85 00bc 0893      		cmp	#0x0000, r8
  86 00be 1F24      		jeq	fine_inject_skip
  87               		;mov	#0x0040, &GATE_S	; gate_s = 0V	
  88               		;mov	#0x0000, &GATE_S	; gate_s = 2.5V @ IVDD 6.0V	
  89               		;mov	#0x0800, &GATE_S	; gate_s = 2.6V @ IVDD 6.0V	
  90               		;mov	#0x1000, &GATE_S	; gate_s = 2.7V @ IVDD 6.0V	
  91               		;mov	#0x1800, &GATE_S	; gate_s = 2.8V @ IVDD 6.0V	
  92               		;mov	#0x2200, &GATE_S	; gate_s = 2.9V @ IVDD 6.0V	
  93               		;mov	#0x2a00, &GATE_S	; gate_s = 3.0V @ IVDD 6.0V	
  94               		;mov	#0x3200, &GATE_S	; gate_s = 3.1V @ IVDD 6.0V	
  95               		;mov	#0x3600, &GATE_S	; gate_s = 3.15V @ IVDD 6.0V	
  96               		;mov	#0x3a00, &GATE_S	; gate_s = 3.2V @ IVDD 6.0V	
  97               		;mov	#0x4000, &GATE_S	; gate_s = 3.26V @ IVDD 6.0V	
  98               		;mov	#0x4200, &GATE_S	; gate_s = 3.3V @ IVDD 6.0V	
  99 00c0 B240 004A 		mov	#0x4a00, &GATE_S	; gate_s = 3.4V @ IVDD 6.0V	
  99      020B 
 100               		;mov	#0x4c00, &GATE_S
 101               		;mov	#0x4e00, &GATE_S
 102               		;mov	#0x5000, &GATE_S	; gate_s = 3.5V @ IVDD 6.0V	
 103               		;mov	#0x5200, &GATE_S
 104               		;mov	#0x5a00, &GATE_S	; gate_s = 3.6V @ IVDD 6.0V	
 105               		;mov	#0x6200, &GATE_S	; gate_s = 3.7V @ IVDD 6.0V	
 106               		;mov	#0x6a00, &GATE_S	; gate_s = 3.8V @ IVDD 6.0V	
 107 00c6 B240 6000 		mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
 107      100B 
 108 00cc B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
 108      120B 
 109 00d2 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 109      000B 
 110 00d8 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
 110      6001 
 111 00de 2543      		mov     #2, r5             	; Number of ms
 112 00e0 B012 0000 		call    #wait_ms                ; Call the waiting function
 113               		;mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e:
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 8


 114 00e4 8248 000B 		mov 	r8, &DRAIN_CTRL	
 115               	        ;mov     #1, r5         		; Number of 10us to inject
 116 00e8 3540 0700 	        mov     #7, r5         		; Number of 10us to inject
 117 00ec B012 0000 		call    #wait_10us             	; Call the waiting function
 118 00f0 1A53      		add     #1, r10	        	; Calculate time
 119 00f2 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 119      000B 
 120 00f8 1543      		mov     #1, r5             	; Number of ms
 121 00fa B012 0000 		call    #wait_ms                ; Call the waiting function
 122               	fine_inject_skip:
 123 00fe 1C83      	       	dec.w   r12
 124 0100 0124      	        jz      fine_inject_e
 125 0102 D23F      	 	jmp	fine_inject_set_s
 126               	fine_inject_e:
 127 0104 A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
 128 0108 2543      		mov     #2, r5             	; Number of ms
 129 010a B012 0000 		call    #wait_ms                ; Call the waiting function
 130 010e B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 130      6001 
 131 0114 1543      		mov     #1, r5             	; Number of ms
 132 0116 B012 0000 		call    #wait_ms                ; Call the waiting function
 133 011a A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 134 011e B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 134      100B 
 135 0124 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 135      120B 
 136 012a 1543      		mov     #1, r5             	; Number of ms
 137 012c B012 0000 		call    #wait_ms                ; Call the waiting function
 138 0130 3041      		ret
 139               	
 140               	measure_verify:
 141 0132 3B40 0070 		mov	#0x7000, r11
 142 0136 2C4B      		mov	@r11, r12		; No. of FGs 
 143 0138 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 143      0C0B 
 144 013e B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 144      6401 
 145 0144 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 145      6001 
 146 014a A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 147               	measure_verify_s:
 148 014e 2B53      		incd	r11
 149 0150 A24B 080B 		mov     @r11,    &ROW_SEL
 150 0154 2B53      		incd	r11
 151 0156 A24B 0A0B 	        mov     @r11,    &COL_SEL
 152 015a 2B53      		incd	r11
 153               	;	mov	@r11, r8
 154 015c 2B53      		incd	r11
 155 015e 2B53      		incd	r11
 156 0160 294B      		mov	@r11, r9		; Read Vd
 157 0162 0993      		cmp	#0x0000, r9
 158 0164 3F24      		jeq	measure_verify_skip
 159 0166 824D 020B 		mov 	r13, &GATE_S
 160 016a B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 160      100B 
 161 0170 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 161      120B 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 9


 162 0176 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 162      000B 
 163 017c 2543      	        mov     #2, r5             	; Number of ms
 164 017e B012 0000 		call    #wait_ms                ; Call the waiting function
 165 0182 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 165      000B 
 166 0188 3540 0A00 	        mov     #10, r5             	; Number of ms
 167 018c B012 0000 	        call    #wait_ms                ; Call the waiting function
 168               	
 169 0190 2E42      		mov	#4, r14			; # for current measure average 
 170 0192 0943      		mov	#0, r9
 171               	measure_v9_average_s:
 172 0194 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 172      0C0B 
 173 019a 3540 0500 	        mov     #5, r5             	; Number of ms
 174 019e B012 0000 		call    #wait_ms                ; Call the waiting function
 175 01a2 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 176               		;mov     &ADC, r9	        ; Get value in counter
 177 01a6 1952 040B 		add     &ADC, r9	        ; Get value in counter
 178 01aa B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 178      0C0B 
 179 01b0 3540 0A00 	        mov     #10, r5             	; Number of ms
 180 01b4 B012 0000 	        call    #wait_10us                ; Call the waiting function
 181 01b8 1E83      		dec.w   r14
 182 01ba 0124      	        jz      measure_v9_average_e
 183 01bc EB3F      		jmp	measure_v9_average_s
 184               	measure_v9_average_e:
 185 01be 0910      		rrc	r9
 186 01c0 0910      		rrc	r9
 187 01c2 39C0 00C0 		bic	#0xc000, r9
 188               	
 189 01c6 2B83      		decd	r11
 190 01c8 2B83      		decd	r11
 191 01ca 284B      		mov	@r11, r8
 192 01cc 2B53      		incd	r11
 193 01ce 2B53      		incd	r11
 194               	
 195 01d0 0998      		cmp	r8, r9
 196 01d2 0330      		jn	status_1
 197 01d4 8B43 0000 		mov	#0x0000, @r11		; Injection over
 198 01d8 053C      		jmp	measure_verify_skip	
 199               	status_1:
 200 01da 2B83      		decd	r11
 201 01dc 0889      		sub	r9, r8
 202 01de 8B48 0000 		mov	r8, @r11
 203 01e2 2B53      		incd	r11
 204               	measure_verify_skip:
 205 01e4 1C83      	        dec.w   r12
 206 01e6 0124      	        jz      measure_verify_e
 207 01e8 B23F      		jmp	measure_verify_s
 208               	measure_verify_e:
 209 01ea B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 209      000B 
 210 01f0 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 210      6001 
 211 01f6 3041      		ret
 212               	
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 10


 213               	Vd_calculate:
 214 01f8 3B40 0070 		mov	#0x7000, r11
 215 01fc 2C4B      		mov	@r11, r12		; No. of FGs 
 216               	Vd_cal_s:
 217 01fe 2B53      		incd	r11			; @ Row_Sel
 218 0200 2B53      		incd	r11			; @ Col_Sel
 219 0202 2B53      		incd	r11	
 220 0204 284B      		mov	@r11, r8		; @ Target
 221 0206 2B53      		incd	r11	
 222 0208 294B      		mov	@r11, r9		; @ diff_for_Vd2
 223 020a 2B53      		incd	r11		
 224 020c 2E4B      		mov	@r11, r14		; @ Vd 
 225 020e 0E93      		cmp	#0x0000, r14
 226 0210 2624      		jeq	No_calculation
 227 0212 0889      		sub	r9, r8			; r8 = r8(target)-r9(diff) = Istart
 228 0214 3880 9011 		sub	#0x1190, r8		; r8 = r8(Istart)-0x1190(1nA) = diff_for_Vd1
 229 0218 0893      		cmp	#0, r8		        ; If r8(Vd1) < 0,
 230 021a 0134      		jge	Jump_r8_0
 231 021c 0843      		mov	#0, r8  		; r8 = 0
 232               	Jump_r8_0:
 233 021e 0810      		rrc	r8
 234 0220 0810      		rrc	r8
 235 0222 0810      		rrc	r8
 236 0224 0810      		rrc	r8
 237 0226 0810      		rrc	r8
 238 0228 0810      		rrc	r8
 239 022a 0810      		rrc	r8
 240 022c 0810      		rrc	r8
 241 022e 38C0 C0FF 		bic	#0xffc0, r8
 242 0232 0910      		rrc	r9
 243 0234 0910      		rrc	r9
 244 0236 0910      		rrc	r9
 245 0238 39C0 00FF 		bic	#0xff00, r9
 246               		;add	#45, r9                 ; Vd table offset
 247 023c 3950 1500 		add	#21, r9                 ; Vd table offset
 248               	        ;sub     r8, r9
 249 0240 0958      	        add     r8, r9
 250 0242 0993      	        cmp	#0, r9		        ; If r8(Vd1) < 0,
 251 0244 0134      		jge	Jump_r9_0
 252 0246 0943      		mov	#0, r9  		; r8 = 0
 253               	Jump_r9_0:
 254 0248 0969      	        rlc	r9
 255 024a 19C3      		bic	#0x0001, r9
 256 024c 3950 0068 		add	#0x6800, r9
 257               	
 258 0250 2B83      		decd	r11
 259 0252 8B49 0000 		mov	r9, @r11
 260               	;	decd	r11
 261               	;	mov	r8, @r11
 262               	;	incd	r11
 263 0256 2B53      		incd	r11
 264               	
 265 0258 2E49      	 	mov	@r9, r14
 266 025a 8B4E 0000 		mov	r14, @r11
 267               	No_calculation:
 268 025e 1C83      	        dec.w   r12
 269 0260 0124      	        jz      Vd_cal_e
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 11


 270 0262 CD3F      		jmp	Vd_cal_s
 271               	Vd_cal_e:
 272 0264 3041      		ret
 273               	
 274               	block_measure:
 275 0266 3B40 0070 		mov	#0x7000, r11
 276 026a 2C4B      		mov	@r11, r12		; No. of FGs 
 277 026c B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 277      0C0B 
 278 0272 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 278      6401 
 279 0278 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 279      6001 
 280 027e A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 281               	block_measure_s:
 282 0282 2B53      		incd	r11
 283 0284 A24B 080B 		mov     @r11,    &ROW_SEL
 284 0288 2B53      		incd	r11
 285 028a A24B 0A0B 	        mov     @r11,    &COL_SEL
 286 028e 2B53      		incd	r11
 287 0290 2B53      		incd	r11
 288 0292 2B53      		incd	r11
 289 0294 824D 020B 		mov 	r13, &GATE_S
 290 0298 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 290      100B 
 291 029e B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 291      120B 
 292 02a4 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 292      000B 
 293 02aa 2543      	        mov     #2, r5             	; Number of ms
 294 02ac B012 0000 		call    #wait_ms                ; Call the waiting function
 295 02b0 B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 295      000B 
 296 02b6 3540 0A00 	        mov     #10, r5             	; Number of ms
 297 02ba B012 0000 	        call    #wait_ms                ; Call the waiting function
 298               	
 299 02be 2E42      		mov	#4, r14			; # for current measure average 
 300 02c0 0943      		mov	#0, r9
 301               	measure_9_average_s:
 302 02c2 B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 302      0C0B 
 303 02c8 3540 0500 	        mov     #5, r5             	; Number of ms
 304 02cc B012 0000 		call    #wait_ms                ; Call the waiting function
 305 02d0 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 306               		;mov     &ADC, r9	        ; Get value in counter
 307 02d4 1952 040B 		add     &ADC, r9	        ; Get value in counter
 308 02d8 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 308      0C0B 
 309 02de 3540 0A00 	        mov     #10, r5             	; Number of ms
 310 02e2 B012 0000 	        call    #wait_10us                ; Call the waiting function
 311 02e6 1E83      		dec.w   r14
 312 02e8 0124      	        jz      measure_9_average_e
 313 02ea EB3F      		jmp	measure_9_average_s
 314               	measure_9_average_e:
 315 02ec 0910      		rrc	r9
 316 02ee 0910      		rrc	r9
 317 02f0 39C0 00C0 		bic	#0xc000, r9
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 12


 318               	
 319 02f4 8749 0000 		mov     r9, @r7			; Get value in counter
 320 02f8 2753      		incd	r7
 321 02fa 1C83      	        dec.w   r12
 322 02fc 0124      	        jz      block_measure_e
 323 02fe C13F      		jmp	block_measure_s
 324               	block_measure_e:
 325 0300 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 325      000B 
 326 0306 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 326      6001 
 327 030c 3041      		ret
 328               	
 329               	wait_ms:
 330 030e 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 331 0312 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 332               	wait_ms_loop:
 333 0314 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 334 0316 FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 335 0318 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 336 031a 1583      	        dec.w   r5                      ; Decrement number of ms total
 337 031c FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
 338 031e 3041      	        ret    
 339               	 
 340               	wait_10us:
 341 0320 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
 342 0324 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 343               	wait_10us_loop:
 344 0326 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 345 0328 FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 346 032a 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 347 032c 1583      	        dec.w   r5                      ; Decrement number of ms total
 348 032e FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 349 0330 3041      	        ret   
 350               	
 351               	end_of_test:
 352 0332 8243 5800 		mov	#0x0000, &BCSCTL2
 353 0336 0343      		nop
 354 0338 3043      		br #0xffff
 355               	
 356               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 357               	.section .vectors, "a"
 358 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 359 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 360 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 361 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 362 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 363 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 364 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 365 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 366 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
 367 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 368 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 369 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 370 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 371 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
 372 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 13


 373 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 14


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 15


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 16


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43 			page 17


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:5      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:10     .text:0000000e init_wait
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:274    .text:00000266 block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:36     .text:0000005a fine_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:140    .text:00000132 measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:213    .text:000001f8 Vd_calculate
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:69     .text:0000008c fine_inject
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:50     .text:00000082 fine_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:351    .text:00000332 end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:76     .text:000000a8 fine_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:122    .text:000000fe fine_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:329    .text:0000030e wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:340    .text:00000320 wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:126    .text:00000104 fine_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:147    .text:0000014e measure_verify_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:204    .text:000001e4 measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:171    .text:00000194 measure_v9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:184    .text:000001be measure_v9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:199    .text:000001da status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:208    .text:000001ea measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:216    .text:000001fe Vd_cal_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:267    .text:0000025e No_calculation
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:232    .text:0000021e Jump_r8_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:253    .text:00000248 Jump_r9_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:271    .text:00000264 Vd_cal_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:281    .text:00000282 block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:301    .text:000002c2 measure_9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:314    .text:000002ec measure_9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:324    .text:00000300 block_measure_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:332    .text:00000314 wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota_ref.s43:343    .text:00000326 wait_10us_loop

NO UNDEFINED SYMBOLS

prog_5.o:     file format elf32-msp430
prog_5.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000033a  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  0000036e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  0000036e  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  0000036e  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
0000000e l       .text	00000000 init_wait
00000266 l       .text	00000000 block_measure
0000005a l       .text	00000000 fine_loop_s
00000132 l       .text	00000000 measure_verify
000001f8 l       .text	00000000 Vd_calculate
0000008c l       .text	00000000 fine_inject
00000082 l       .text	00000000 fine_loop_e
00000332 l       .text	00000000 end_of_test
000000a8 l       .text	00000000 fine_inject_set_s
000000fe l       .text	00000000 fine_inject_skip
0000030e l       .text	00000000 wait_ms
00000320 l       .text	00000000 wait_10us
00000104 l       .text	00000000 fine_inject_e
0000014e l       .text	00000000 measure_verify_s
000001e4 l       .text	00000000 measure_verify_skip
00000194 l       .text	00000000 measure_v9_average_s
000001be l       .text	00000000 measure_v9_average_e
000001da l       .text	00000000 status_1
000001ea l       .text	00000000 measure_verify_e
000001fe l       .text	00000000 Vd_cal_s
0000025e l       .text	00000000 No_calculation
0000021e l       .text	00000000 Jump_r8_0
00000248 l       .text	00000000 Jump_r9_0
00000264 l       .text	00000000 Vd_cal_e
00000282 l       .text	00000000 block_measure_s
000002c2 l       .text	00000000 measure_9_average_s
000002ec l       .text	00000000 measure_9_average_e
00000300 l       .text	00000000 block_measure_e
00000314 l       .text	00000000 wait_ms_loop
00000326 l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 0d43b012 00003f40 32000d43 b0120000  .C....?@2..C....
 0060 b0120000 b0120000 b7403333 00002753  .........@33..'S
 0070 874a0000 27530d43 b0120000 1f830124  .J..'S.C.......$
 0080 ec3fb743 00008243 5800533d 3b400070  .?.C...CX.S=;@.p
 0090 2c4bb240 00800c0b b24004be 6401b240  ,K.@.....@..d..@
 00a0 24006001 b2430e0b 2b53a24b 080b2b53  $.`..C..+S.K..+S
 00b0 a24b0a0b 2b532b53 2b53284b 08931f24  .K..+S+S+S(K...$
 00c0 b240004a 020bb240 6000100b b2406000  .@.J...@`....@`.
 00d0 120bb240 6600000b b2401400 60012543  ...@f....@..`.%C
 00e0 b0120000 8248000b 35400700 b0120000  .....H..5@......
 00f0 1a53b240 6600000b 1543b012 00001c83  .S.@f....C......
 0100 0124d23f a2426001 2543b012 0000b240  .$.?.B`.%C.....@
 0110 24006001 1543b012 0000a243 0e0bb240  $.`..C.....C...@
 0120 4000100b b2404000 120b1543 b0120000  @....@@....C....
 0130 30413b40 00702c4b b2400080 0c0bb240  0A;@.p,K.@.....@
 0140 04be6401 b2402400 6001a243 0e0b2b53  ..d..@$.`..C..+S
 0150 a24b080b 2b53a24b 0a0b2b53 2b532b53  .K..+S.K..+S+S+S
 0160 294b0993 3f24824d 020bb240 4000100b  )K..?$.M...@@...
 0170 b2404000 120bb240 6600000b 2543b012  .@@....@f...%C..
 0180 0000b240 a400000b 35400a00 b0120000  ...@....5@......
 0190 2e420943 b24000b0 0c0b3540 0500b012  .B.C.@....5@....
 01a0 00008243 040b1952 040bb240 00800c0b  ...C...R...@....
 01b0 35400a00 b0120000 1e830124 eb3f0910  5@.........$.?..
 01c0 091039c0 00c02b83 2b83284b 2b532b53  ..9...+.+.(K+S+S
 01d0 09980330 8b430000 053c2b83 08898b48  ...0.C...<+....H
 01e0 00002b53 1c830124 b23fb240 6600000b  ..+S...$.?.@f...
 01f0 b2402400 60013041 3b400070 2c4b2b53  .@$.`.0A;@.p,K+S
 0200 2b532b53 284b2b53 294b2b53 2e4b0e93  +S+S(K+S)K+S.K..
 0210 26240889 38809011 08930134 08430810  &$..8......4.C..
 0220 08100810 08100810 08100810 081038c0  ..............8.
 0230 c0ff0910 09100910 39c000ff 39501500  ........9...9P..
 0240 09580993 01340943 096919c3 39500068  .X...4.C.i..9P.h
 0250 2b838b49 00002b53 2e498b4e 00001c83  +..I..+S.I.N....
 0260 0124cd3f 30413b40 00702c4b b2400080  .$.?0A;@.p,K.@..
 0270 0c0bb240 04be6401 b2402400 6001a243  ...@..d..@$.`..C
 0280 0e0b2b53 a24b080b 2b53a24b 0a0b2b53  ..+S.K..+S.K..+S
 0290 2b532b53 824d020b b2404000 100bb240  +S+S.M...@@....@
 02a0 4000120b b2406600 000b2543 b0120000  @....@f...%C....
 02b0 b240a400 000b3540 0a00b012 00002e42  .@....5@.......B
 02c0 0943b240 00b00c0b 35400500 b0120000  .C.@....5@......
 02d0 8243040b 1952040b b2400080 0c0b3540  .C...R...@....5@
 02e0 0a00b012 00001e83 0124eb3f 09100910  .........$.?....
 02f0 39c000c0 87490000 27531c83 0124c13f  9....I..'S...$.?
 0300 b2406600 000bb240 24006001 30413440  .@f....@$.`.0A4@
 0310 fc0c0644 1683fe23 06441583 fb233041  ...D...#.D...#0A
 0320 34402200 06441683 fe230644 1583fb23  4@"..D...#.D...#
 0330 30418243 58000343 3043               0A.CX..C0C      
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	0d 43       	clr	r13		
  52:	b0 12 00 00 	call	#0x0000	
			54: R_MSP430_16_BYTE	.text+0x266
  56:	3f 40 32 00 	mov	#50,	r15	;#0x0032

0000005a <fine_loop_s>:
  5a:	0d 43       	clr	r13		
  5c:	b0 12 00 00 	call	#0x0000	
			5e: R_MSP430_16_BYTE	.text+0x132
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x1f8
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0x8c
  68:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  6c:	00 00 
  6e:	27 53       	incd	r7		
  70:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  74:	27 53       	incd	r7		
  76:	0d 43       	clr	r13		
  78:	b0 12 00 00 	call	#0x0000	
			7a: R_MSP430_16_BYTE	.text+0x266
  7c:	1f 83       	dec	r15		
  7e:	01 24       	jz	$+4      	;abs 0x82
  80:	ec 3f       	jmp	$-38     	;abs 0x5a

00000082 <fine_loop_e>:
  82:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  86:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  8a:	53 3d       	jmp	$+680    	;abs 0x332

0000008c <fine_inject>:
  8c:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  90:	2c 4b       	mov	@r11,	r12	
  92:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  96:	0c 0b 
  98:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  9c:	64 01 
  9e:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  a2:	60 01 
  a4:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000a8 <fine_inject_set_s>:
  a8:	2b 53       	incd	r11		
  aa:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  ae:	2b 53       	incd	r11		
  b0:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  b4:	2b 53       	incd	r11		
  b6:	2b 53       	incd	r11		
  b8:	2b 53       	incd	r11		
  ba:	28 4b       	mov	@r11,	r8	
  bc:	08 93       	tst	r8		
  be:	1f 24       	jz	$+64     	;abs 0xfe
  c0:	b2 40 00 4a 	mov	#18944,	&0x0b02	;#0x4a00
  c4:	02 0b 
  c6:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  ca:	10 0b 
  cc:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  d0:	12 0b 
  d2:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  d6:	00 0b 
  d8:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  dc:	60 01 
  de:	25 43       	mov	#2,	r5	;r3 As==10
  e0:	b0 12 00 00 	call	#0x0000	
			e2: R_MSP430_16_BYTE	.text+0x30e
  e4:	82 48 00 0b 	mov	r8,	&0x0b00	
  e8:	35 40 07 00 	mov	#7,	r5	;#0x0007
  ec:	b0 12 00 00 	call	#0x0000	
			ee: R_MSP430_16_BYTE	.text+0x320
  f0:	1a 53       	inc	r10		
  f2:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  f6:	00 0b 
  f8:	15 43       	mov	#1,	r5	;r3 As==01
  fa:	b0 12 00 00 	call	#0x0000	
			fc: R_MSP430_16_BYTE	.text+0x30e

000000fe <fine_inject_skip>:
  fe:	1c 83       	dec	r12		
 100:	01 24       	jz	$+4      	;abs 0x104
 102:	d2 3f       	jmp	$-90     	;abs 0xa8

00000104 <fine_inject_e>:
 104:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 108:	25 43       	mov	#2,	r5	;r3 As==10
 10a:	b0 12 00 00 	call	#0x0000	
			10c: R_MSP430_16_BYTE	.text+0x30e
 10e:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 112:	60 01 
 114:	15 43       	mov	#1,	r5	;r3 As==01
 116:	b0 12 00 00 	call	#0x0000	
			118: R_MSP430_16_BYTE	.text+0x30e
 11a:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 11e:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 122:	10 0b 
 124:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 128:	12 0b 
 12a:	15 43       	mov	#1,	r5	;r3 As==01
 12c:	b0 12 00 00 	call	#0x0000	
			12e: R_MSP430_16_BYTE	.text+0x30e
 130:	30 41       	ret			

00000132 <measure_verify>:
 132:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 136:	2c 4b       	mov	@r11,	r12	
 138:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 13c:	0c 0b 
 13e:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 142:	64 01 
 144:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 148:	60 01 
 14a:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000014e <measure_verify_s>:
 14e:	2b 53       	incd	r11		
 150:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 154:	2b 53       	incd	r11		
 156:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 15a:	2b 53       	incd	r11		
 15c:	2b 53       	incd	r11		
 15e:	2b 53       	incd	r11		
 160:	29 4b       	mov	@r11,	r9	
 162:	09 93       	tst	r9		
 164:	3f 24       	jz	$+128    	;abs 0x1e4
 166:	82 4d 02 0b 	mov	r13,	&0x0b02	
 16a:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 16e:	10 0b 
 170:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 174:	12 0b 
 176:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 17a:	00 0b 
 17c:	25 43       	mov	#2,	r5	;r3 As==10
 17e:	b0 12 00 00 	call	#0x0000	
			180: R_MSP430_16_BYTE	.text+0x30e
 182:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 186:	00 0b 
 188:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 18c:	b0 12 00 00 	call	#0x0000	
			18e: R_MSP430_16_BYTE	.text+0x30e
 190:	2e 42       	mov	#4,	r14	;r2 As==10
 192:	09 43       	clr	r9		

00000194 <measure_v9_average_s>:
 194:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 198:	0c 0b 
 19a:	35 40 05 00 	mov	#5,	r5	;#0x0005
 19e:	b0 12 00 00 	call	#0x0000	
			1a0: R_MSP430_16_BYTE	.text+0x30e
 1a2:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1a6:	19 52 04 0b 	add	&0x0b04,r9	
 1aa:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1ae:	0c 0b 
 1b0:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1b4:	b0 12 00 00 	call	#0x0000	
			1b6: R_MSP430_16_BYTE	.text+0x320
 1b8:	1e 83       	dec	r14		
 1ba:	01 24       	jz	$+4      	;abs 0x1be
 1bc:	eb 3f       	jmp	$-40     	;abs 0x194

000001be <measure_v9_average_e>:
 1be:	09 10       	rrc	r9		
 1c0:	09 10       	rrc	r9		
 1c2:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 1c6:	2b 83       	decd	r11		
 1c8:	2b 83       	decd	r11		
 1ca:	28 4b       	mov	@r11,	r8	
 1cc:	2b 53       	incd	r11		
 1ce:	2b 53       	incd	r11		
 1d0:	09 98       	cmp	r8,	r9	
 1d2:	03 30       	jn	$+8      	;abs 0x1da
 1d4:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1d8:	05 3c       	jmp	$+12     	;abs 0x1e4

000001da <status_1>:
 1da:	2b 83       	decd	r11		
 1dc:	08 89       	sub	r9,	r8	
 1de:	8b 48 00 00 	mov	r8,	0(r11)	;0x0000(r11)
 1e2:	2b 53       	incd	r11		

000001e4 <measure_verify_skip>:
 1e4:	1c 83       	dec	r12		
 1e6:	01 24       	jz	$+4      	;abs 0x1ea
 1e8:	b2 3f       	jmp	$-154    	;abs 0x14e

000001ea <measure_verify_e>:
 1ea:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1ee:	00 0b 
 1f0:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 1f4:	60 01 
 1f6:	30 41       	ret			

000001f8 <Vd_calculate>:
 1f8:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 1fc:	2c 4b       	mov	@r11,	r12	

000001fe <Vd_cal_s>:
 1fe:	2b 53       	incd	r11		
 200:	2b 53       	incd	r11		
 202:	2b 53       	incd	r11		
 204:	28 4b       	mov	@r11,	r8	
 206:	2b 53       	incd	r11		
 208:	29 4b       	mov	@r11,	r9	
 20a:	2b 53       	incd	r11		
 20c:	2e 4b       	mov	@r11,	r14	
 20e:	0e 93       	tst	r14		
 210:	26 24       	jz	$+78     	;abs 0x25e
 212:	08 89       	sub	r9,	r8	
 214:	38 80 90 11 	sub	#4496,	r8	;#0x1190
 218:	08 93       	tst	r8		
 21a:	01 34       	jge	$+4      	;abs 0x21e
 21c:	08 43       	clr	r8		

0000021e <Jump_r8_0>:
 21e:	08 10       	rrc	r8		
 220:	08 10       	rrc	r8		
 222:	08 10       	rrc	r8		
 224:	08 10       	rrc	r8		
 226:	08 10       	rrc	r8		
 228:	08 10       	rrc	r8		
 22a:	08 10       	rrc	r8		
 22c:	08 10       	rrc	r8		
 22e:	38 c0 c0 ff 	bic	#-64,	r8	;#0xffc0
 232:	09 10       	rrc	r9		
 234:	09 10       	rrc	r9		
 236:	09 10       	rrc	r9		
 238:	39 c0 00 ff 	bic	#-256,	r9	;#0xff00
 23c:	39 50 15 00 	add	#21,	r9	;#0x0015
 240:	09 58       	add	r8,	r9	
 242:	09 93       	tst	r9		
 244:	01 34       	jge	$+4      	;abs 0x248
 246:	09 43       	clr	r9		

00000248 <Jump_r9_0>:
 248:	09 69       	rlc	r9		
 24a:	19 c3       	bic	#1,	r9	;r3 As==01
 24c:	39 50 00 68 	add	#26624,	r9	;#0x6800
 250:	2b 83       	decd	r11		
 252:	8b 49 00 00 	mov	r9,	0(r11)	;0x0000(r11)
 256:	2b 53       	incd	r11		
 258:	2e 49       	mov	@r9,	r14	
 25a:	8b 4e 00 00 	mov	r14,	0(r11)	;0x0000(r11)

0000025e <No_calculation>:
 25e:	1c 83       	dec	r12		
 260:	01 24       	jz	$+4      	;abs 0x264
 262:	cd 3f       	jmp	$-100    	;abs 0x1fe

00000264 <Vd_cal_e>:
 264:	30 41       	ret			

00000266 <block_measure>:
 266:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 26a:	2c 4b       	mov	@r11,	r12	
 26c:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 270:	0c 0b 
 272:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 276:	64 01 
 278:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 27c:	60 01 
 27e:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

00000282 <block_measure_s>:
 282:	2b 53       	incd	r11		
 284:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 288:	2b 53       	incd	r11		
 28a:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 28e:	2b 53       	incd	r11		
 290:	2b 53       	incd	r11		
 292:	2b 53       	incd	r11		
 294:	82 4d 02 0b 	mov	r13,	&0x0b02	
 298:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 29c:	10 0b 
 29e:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 2a2:	12 0b 
 2a4:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 2a8:	00 0b 
 2aa:	25 43       	mov	#2,	r5	;r3 As==10
 2ac:	b0 12 00 00 	call	#0x0000	
			2ae: R_MSP430_16_BYTE	.text+0x30e
 2b0:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 2b4:	00 0b 
 2b6:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2ba:	b0 12 00 00 	call	#0x0000	
			2bc: R_MSP430_16_BYTE	.text+0x30e
 2be:	2e 42       	mov	#4,	r14	;r2 As==10
 2c0:	09 43       	clr	r9		

000002c2 <measure_9_average_s>:
 2c2:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 2c6:	0c 0b 
 2c8:	35 40 05 00 	mov	#5,	r5	;#0x0005
 2cc:	b0 12 00 00 	call	#0x0000	
			2ce: R_MSP430_16_BYTE	.text+0x30e
 2d0:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 2d4:	19 52 04 0b 	add	&0x0b04,r9	
 2d8:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 2dc:	0c 0b 
 2de:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2e2:	b0 12 00 00 	call	#0x0000	
			2e4: R_MSP430_16_BYTE	.text+0x320
 2e6:	1e 83       	dec	r14		
 2e8:	01 24       	jz	$+4      	;abs 0x2ec
 2ea:	eb 3f       	jmp	$-40     	;abs 0x2c2

000002ec <measure_9_average_e>:
 2ec:	09 10       	rrc	r9		
 2ee:	09 10       	rrc	r9		
 2f0:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 2f4:	87 49 00 00 	mov	r9,	0(r7)	;0x0000(r7)
 2f8:	27 53       	incd	r7		
 2fa:	1c 83       	dec	r12		
 2fc:	01 24       	jz	$+4      	;abs 0x300
 2fe:	c1 3f       	jmp	$-124    	;abs 0x282

00000300 <block_measure_e>:
 300:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 304:	00 0b 
 306:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 30a:	60 01 
 30c:	30 41       	ret			

0000030e <wait_ms>:
 30e:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 312:	06 44       	mov	r4,	r6	

00000314 <wait_ms_loop>:
 314:	16 83       	dec	r6		
 316:	fe 23       	jnz	$-2      	;abs 0x314
 318:	06 44       	mov	r4,	r6	
 31a:	15 83       	dec	r5		
 31c:	fb 23       	jnz	$-8      	;abs 0x314
 31e:	30 41       	ret			

00000320 <wait_10us>:
 320:	34 40 22 00 	mov	#34,	r4	;#0x0022
 324:	06 44       	mov	r4,	r6	

00000326 <wait_10us_loop>:
 326:	16 83       	dec	r6		
 328:	fe 23       	jnz	$-2      	;abs 0x326
 32a:	06 44       	mov	r4,	r6	
 32c:	15 83       	dec	r5		
 32e:	fb 23       	jnz	$-8      	;abs 0x326
 330:	30 41       	ret			

00000332 <end_of_test>:
 332:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 336:	03 43       	nop			
 338:	30 43       	br	#-1		;r3 As==11
