GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 1


   1               	.include "pmem_defs.asm"
   1               	/*===========================================================================*/
   2               	/* Copyright (C) 2001 Authors                                                */
   3               	/*                                                                           */
   4               	/* This source file may be used and distributed without restriction provided */
   5               	/* that this copyright statement is not removed from the file and that any   */
   6               	/* derivative work contains the original copyright notice and the associated */
   7               	/* disclaimer.                                                               */
   8               	/*                                                                           */
   9               	/* This source file is free software; you can redistribute it and/or modify  */
  10               	/* it under the terms of the GNU Lesser General Public License as published  */
  11               	/* by the Free Software Foundation; either version 2.1 of the License, or    */
  12               	/* (at your option) any later version.                                       */
  13               	/*                                                                           */
  14               	/* This source is distributed in the hope that it will be useful, but WITHOUT*/
  15               	/* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or     */
  16               	/* FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public       */
  17               	/* License for more details.                                                 */
  18               	/*                                                                           */
  19               	/* You should have received a copy of the GNU Lesser General Public License  */
  20               	/* along with this source; if not, write to the Free Software Foundation,    */
  21               	/* Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA        */
  22               	/*                                                                           */
  23               	/*===========================================================================*/
  24               	/*                          MEMORY DEFINITION FILE                           */
  25               	/*---------------------------------------------------------------------------*/
  26               	/*                                                                           */
  27               	/* Author(s):                                                                */
  28               	/*             - Olivier Girard,    olgirard@gmail.com                       */
  29               	/*                                                                           */
  30               	/*---------------------------------------------------------------------------*/
  31               	/* $Rev: 19 $                                                                */
  32               	/* $LastChangedBy: olivier.girard $                                          */
  33               	/* $LastChangedDate: 2009-08-04 23:47:15 +0200 (Tue, 04 Aug 2009) $          */
  34               	/*===========================================================================*/
  35               	
  36               	/*---------------------------------------------------------------------------*/
  37               	/*                                   SFR                                     */
  38               	/*---------------------------------------------------------------------------*/
  39               	.set    IE1,       0x0000
  40               	.set    IE1_HI,    0x0001
  41               	.set    IFG1,      0x0002
  42               	.set    IFG1_HI,   0x0003
  43               	.set    CPU_ID_LO, 0x0004
  44               	.set    CPU_ID_HI, 0x0006
  45               	.set    CPU_NR,    0x0008
  46               	
  47               	/*---------------------------------------------------------------------------*/
  48               	/*                                    GPIOs                                  */
  49               	/*---------------------------------------------------------------------------*/
  50               	.set    P1IN,      0x0020
  51               	.set    P1OUT,     0x0021
  52               	.set    P1DIR,     0x0022
  53               	.set    P1IFG,     0x0023
  54               	.set    P1IES,     0x0024
  55               	.set    P1IE,      0x0025
  56               	.set    P1SEL,     0x0026
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 2


  57               	
  58               	.set    P2IN,      0x0028
  59               	.set    P2OUT,     0x0029
  60               	.set    P2DIR,     0x002A
  61               	.set    P2IFG,     0x002B
  62               	.set    P2IES,     0x002C
  63               	.set    P2IE,      0x002D
  64               	.set    P2SEL,     0x002E
  65               	
  66               	.set    P3IN,      0x0018
  67               	.set    P3OUT,     0x0019
  68               	.set    P3DIR,     0x001A
  69               	.set    P3SEL,     0x001B
  70               	
  71               	.set    P4IN,      0x001C
  72               	.set    P4OUT,     0x001D
  73               	.set    P4DIR,     0x001E
  74               	.set    P4SEL,     0x001F
  75               		
  76               	.set    P5IN,      0x0030
  77               	.set    P5OUT,     0x0031
  78               	.set    P5DIR,     0x0032
  79               	.set    P5SEL,     0x0033
  80               	
  81               	.set    P6IN,      0x0034
  82               	.set    P6OUT,     0x0035
  83               	.set    P6DIR,     0x0036
  84               	.set    P6SEL,     0x0037
  85               	
  86               	/*---------------------------------------------------------------------------*/
  87               	/*                           BASIC CLOCK MODULE                              */
  88               	/*---------------------------------------------------------------------------*/
  89               	.set    BCSCTL1,   0x0057
  90               	.set    BCSCTL2,   0x0058
  91               	
  92               	/*---------------------------------------------------------------------------*/
  93               	/*                             WATCHDOG TIMER                                */
  94               	/*---------------------------------------------------------------------------*/
  95               	.set    WDTCTL,    0x0120
  96               	
  97               	/*---------------------------------------------------------------------------*/
  98               	/*                           HARDWARE MULTIPLIER                             */
  99               	/*---------------------------------------------------------------------------*/
 100               	.set    MPY,       0x0130
 101               	.set    MPYS,      0x0132
 102               	.set    MAC,       0x0134
 103               	.set    MACS,      0x0136
 104               	.set    OP2,       0x0138
 105               	.set    RESLO,     0x013A
 106               	.set    RESHI,     0x013C
 107               	.set    SUMEXT,    0x013E
 108               	
 109               	/*---------------------------------------------------------------------------*/
 110               	/*                                 TIMER A                                   */
 111               	/*---------------------------------------------------------------------------*/
 112               	.set    TACTL,     0x0160
 113               	.set    TAR,       0x0170
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 3


 114               	.set    TACCTL0,   0x0162
 115               	.set    TACCR0,    0x0172
 116               	.set    TACCTL1,   0x0164
 117               	.set    TACCR1,    0x0174
 118               	.set    TACCTL2,   0x0166
 119               	.set    TACCR2,    0x0176
 120               	.set    TAIV,      0x012E
 121               	
 122               	/*---------------------------------------------------------------------------*/
 123               	/*                          DATA MEMORY MAPPING                              */
 124               	/*---------------------------------------------------------------------------*/
 125               	.set    DMEM_BASE, 16384
 126               	
 127               	.set    DMEM_200,  (DMEM_BASE+0x00)
 128               	.set    DMEM_201,  (DMEM_BASE+0x01)
 129               	.set    DMEM_202,  (DMEM_BASE+0x02)
 130               	.set    DMEM_203,  (DMEM_BASE+0x03)
 131               	.set    DMEM_204,  (DMEM_BASE+0x04)
 132               	.set    DMEM_205,  (DMEM_BASE+0x05)
 133               	.set    DMEM_206,  (DMEM_BASE+0x06)
 134               	.set    DMEM_207,  (DMEM_BASE+0x07)
 135               	.set    DMEM_208,  (DMEM_BASE+0x08)
 136               	.set    DMEM_209,  (DMEM_BASE+0x09)
 137               	.set    DMEM_20A,  (DMEM_BASE+0x0A)
 138               	.set    DMEM_20B,  (DMEM_BASE+0x0B)
 139               	.set    DMEM_20C,  (DMEM_BASE+0x0C)
 140               	.set    DMEM_20D,  (DMEM_BASE+0x0D)
 141               	.set    DMEM_20E,  (DMEM_BASE+0x0E)
 142               	.set    DMEM_20F,  (DMEM_BASE+0x0F)
 143               	
 144               	.set    DMEM_210,  (DMEM_BASE+0x10)
 145               	.set    DMEM_211,  (DMEM_BASE+0x11)
 146               	.set    DMEM_212,  (DMEM_BASE+0x12)
 147               	.set    DMEM_213,  (DMEM_BASE+0x13)
 148               	.set    DMEM_214,  (DMEM_BASE+0x14)
 149               	.set    DMEM_215,  (DMEM_BASE+0x15)
 150               	.set    DMEM_216,  (DMEM_BASE+0x16)
 151               	.set    DMEM_217,  (DMEM_BASE+0x17)
 152               	.set    DMEM_218,  (DMEM_BASE+0x18)
 153               	.set    DMEM_219,  (DMEM_BASE+0x19)
 154               	.set    DMEM_21A,  (DMEM_BASE+0x1A)
 155               	.set    DMEM_21B,  (DMEM_BASE+0x1B)
 156               	.set    DMEM_21C,  (DMEM_BASE+0x1C)
 157               	.set    DMEM_21D,  (DMEM_BASE+0x1D)
 158               	.set    DMEM_21E,  (DMEM_BASE+0x1E)
 159               	.set    DMEM_21F,  (DMEM_BASE+0x1F)
 160               	
 161               	.set    DMEM_220,  (DMEM_BASE+0x20)
 162               	.set    DMEM_221,  (DMEM_BASE+0x21)
 163               	.set    DMEM_222,  (DMEM_BASE+0x22)
 164               	.set    DMEM_223,  (DMEM_BASE+0x23)
 165               	.set    DMEM_224,  (DMEM_BASE+0x24)
 166               	.set    DMEM_225,  (DMEM_BASE+0x25)
 167               	.set    DMEM_226,  (DMEM_BASE+0x26)
 168               	.set    DMEM_227,  (DMEM_BASE+0x27)
 169               	.set    DMEM_228,  (DMEM_BASE+0x28)
 170               	.set    DMEM_229,  (DMEM_BASE+0x29)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 4


 171               	.set    DMEM_22A,  (DMEM_BASE+0x2A)
 172               	.set    DMEM_22B,  (DMEM_BASE+0x2B)
 173               	.set    DMEM_22C,  (DMEM_BASE+0x2C)
 174               	.set    DMEM_22D,  (DMEM_BASE+0x2D)
 175               	.set    DMEM_22E,  (DMEM_BASE+0x2E)
 176               	.set    DMEM_22F,  (DMEM_BASE+0x2F)
 177               	
 178               	.set    DMEM_230,  (DMEM_BASE+0x30)
 179               	.set    DMEM_231,  (DMEM_BASE+0x31)
 180               	.set    DMEM_232,  (DMEM_BASE+0x32)
 181               	.set    DMEM_233,  (DMEM_BASE+0x33)
 182               	.set    DMEM_234,  (DMEM_BASE+0x34)
 183               	.set    DMEM_235,  (DMEM_BASE+0x35)
 184               	.set    DMEM_236,  (DMEM_BASE+0x36)
 185               	.set    DMEM_237,  (DMEM_BASE+0x37)
 186               	.set    DMEM_238,  (DMEM_BASE+0x38)
 187               	.set    DMEM_239,  (DMEM_BASE+0x39)
 188               	.set    DMEM_23A,  (DMEM_BASE+0x3A)
 189               	.set    DMEM_23B,  (DMEM_BASE+0x3B)
 190               	.set    DMEM_23C,  (DMEM_BASE+0x3C)
 191               	.set    DMEM_23D,  (DMEM_BASE+0x3D)
 192               	.set    DMEM_23E,  (DMEM_BASE+0x3E)
 193               	.set    DMEM_23F,  (DMEM_BASE+0x3F)
 194               	
 195               	.set    DMEM_240,  (DMEM_BASE+0x40)
 196               	.set    DMEM_241,  (DMEM_BASE+0x41)
 197               	.set    DMEM_242,  (DMEM_BASE+0x42)
 198               	.set    DMEM_243,  (DMEM_BASE+0x43)
 199               	.set    DMEM_244,  (DMEM_BASE+0x44)
 200               	.set    DMEM_245,  (DMEM_BASE+0x45)
 201               	.set    DMEM_246,  (DMEM_BASE+0x46)
 202               	.set    DMEM_247,  (DMEM_BASE+0x47)
 203               	.set    DMEM_248,  (DMEM_BASE+0x48)
 204               	.set    DMEM_249,  (DMEM_BASE+0x49)
 205               	.set    DMEM_24A,  (DMEM_BASE+0x4A)
 206               	.set    DMEM_24B,  (DMEM_BASE+0x4B)
 207               	.set    DMEM_24C,  (DMEM_BASE+0x4C)
 208               	.set    DMEM_24D,  (DMEM_BASE+0x4D)
 209               	.set    DMEM_24E,  (DMEM_BASE+0x4E)
 210               	.set    DMEM_24F,  (DMEM_BASE+0x4F)
 211               	
 212               	.set    DMEM_250,  (DMEM_BASE+0x50)
 213               	.set    DMEM_251,  (DMEM_BASE+0x51)
 214               	.set    DMEM_252,  (DMEM_BASE+0x52)
 215               	.set    DMEM_253,  (DMEM_BASE+0x53)
 216               	.set    DMEM_254,  (DMEM_BASE+0x54)
 217               	.set    DMEM_255,  (DMEM_BASE+0x55)
 218               	.set    DMEM_256,  (DMEM_BASE+0x56)
 219               	.set    DMEM_257,  (DMEM_BASE+0x57)
 220               	.set    DMEM_258,  (DMEM_BASE+0x58)
 221               	.set    DMEM_259,  (DMEM_BASE+0x59)
 222               	.set    DMEM_25A,  (DMEM_BASE+0x5A)
 223               	.set    DMEM_25B,  (DMEM_BASE+0x5B)
 224               	.set    DMEM_25C,  (DMEM_BASE+0x5C)
 225               	.set    DMEM_25D,  (DMEM_BASE+0x5D)
 226               	.set    DMEM_25E,  (DMEM_BASE+0x5E)
 227               	.set    DMEM_25F,  (DMEM_BASE+0x5F)
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 5


 228               	
 229               	.set    DMEM_260,  (DMEM_BASE+0x60)
 230               	.set    DMEM_261,  (DMEM_BASE+0x61)
 231               	.set    DMEM_262,  (DMEM_BASE+0x62)
 232               	.set    DMEM_263,  (DMEM_BASE+0x63)
 233               	.set    DMEM_264,  (DMEM_BASE+0x64)
 234               	.set    DMEM_265,  (DMEM_BASE+0x65)
 235               	.set    DMEM_266,  (DMEM_BASE+0x66)
 236               	.set    DMEM_267,  (DMEM_BASE+0x67)
 237               	.set    DMEM_268,  (DMEM_BASE+0x68)
 238               	.set    DMEM_269,  (DMEM_BASE+0x69)
 239               	.set    DMEM_26A,  (DMEM_BASE+0x6A)
 240               	.set    DMEM_26B,  (DMEM_BASE+0x6B)
 241               	.set    DMEM_26C,  (DMEM_BASE+0x6C)
 242               	.set    DMEM_26D,  (DMEM_BASE+0x6D)
 243               	.set    DMEM_26E,  (DMEM_BASE+0x6E)
 244               	.set    DMEM_26F,  (DMEM_BASE+0x6F)
 245               	
 246               	.set    DMEM_300,  (DMEM_BASE+0x100)
 247               	
 248               	/*---------------------------------------------------------------------------*/
 249               	/*                        PROGRAM MEMORY MAPPING                             */
 250               	/*---------------------------------------------------------------------------*/
 251               	.set    PMEM_LENGTH, 16384
 252               	
 253               	/*---------------------------------------------------------------------------*/
 254               	/*                        Programming register addresses                     */
 255               	/*---------------------------------------------------------------------------*/
 256               	.set    DRAIN_CTRL,     0x0B00
 257               	.set    GATE_S,         0x0B02
 258               	.set    ADC,            0x0B04
 259               	.set    PULSE_CTRL,     0x0B06
 260               	.set    ROW_SEL,        0x0B08
 261               	.set    COL_SEL,        0x0B0A
 262               	.set    PROG_BITS,      0x0B0C
 263               	.set    TUN_MUX,        0x0B0E
 264               	.set    GATE_US_P,      0x0B10
 265               	.set    GATE_US_N,      0x0B12
 266               	.set    BIAS_DACS,      0x0B14
 267               	.set    GP_PER_1,       0x0160
 268               	.set    GP_PER_2,       0x0162
 269               	.set    GP_PER_3,       0x0164
 270               	.set    GP_PER_4,       0x0166
 271               	
   2               	.include "chip_para.asm"
   1               	/*---------------------------------------------------------------------------*/
   2               	/*                       chip parameters for chip 10                         */ 
   3               	/*---------------------------------------------------------------------------*/
   4               	/*----------------*/
   5               	/* Switch program */
   6               	/*----------------*/
   7               	.set    TUN_TIME_SP,     3          /* tunneling time for switch programming (ms) */
   8               	.set    R_TUN_TIME_SP,     2          /* reverse tunneling time for switch programming (ms) */
   9               	.set    INJ_TIME_SP_1,     500          /* injection time for switch programming (ms) (1st pulse)*/
  10               	
  11               	/*----------------*/
  12               	/* Target program */
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 6


  13               	/*----------------*/
  14               	.set    ADC_1nA,    4496          /* 1nA ADC value */
  15               	
  16               	/* Tunnel and Reverse Tunnel */
  17               	.set    TUN_TIME_TP_CAB,     40          /* tunneling time for target programming (ms) - CAB */
  18               	.set    R_TUN_TIME_TP_CAB,   40          /* Reverse tunneling time for target programming (ms) - CA
  19               	
  20               	/* Recover Inject (RI) */
  21               	.set    RI_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC recover injection = gnd */
  22               	.set    RI_VC1_SWC,     5931          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V -
  23               	.set    RI_VC2_SWC,     5788          /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V *
  24               	.set    RI_VC3_SWC,     5357           /* Verify Current 1 for SWC recover injection = nA @ Vgm=0V 
  25               	.set    RI_VC4_SWC,     4496           /* Verify Current 1 for SWC recover injection = 1nA @ Vgm=0V
  26               	.set    RI_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA recover injection = 2.5V @ IVDD
  27               	.set    RI_VC1_OTA,     6732           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0V 
  28               	.set    RI_VC2_OTA,     6508          /* Verify Current 1 for OTA recover injection =  nA @ Vgm=0V 
  29               	.set    RI_VC3_OTA,     5837           /* Verify Current 1 for OTA recover injection = nA @ Vgm=0V 
  30               	.set    RI_VC4_OTA,     4496           /* Verify Current 1 for OTA recover injection = 5nA @ Vgm=0V
  31               	.set    RI_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF recover injection = gnd *
  32               	.set    RI_VC1_OTAREF,  6135              /* Verify Current 1 for OTAREF recover injection = nA @ V
  33               	.set    RI_VC2_OTAREF,  5972             /* Verify Current 1 for OTAREF recover injection = nA @ Vg
  34               	.set    RI_VC3_OTAREF,  5480              /* Verify Current 1 for OTAREF recover injection = nA @ V
  35               	.set    RI_VC4_OTAREF,  4496              /* Verify Current 1 for OTAREF recover injection = 1nA @ 
  36               	.set    RI_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE recover injection = 2.5V @ IV
  37               	.set    RI_VC1_MITE,    7035           /* Verify Current 1 for MITE recover injection = nA @ Vgm=0V
  38               	.set    RI_VC2_MITE,    6781           /* Verify Current 1 for MITE recover injection =  nA @ Vgm=0
  39               	.set    RI_VC3_MITE,    6020            /* Verify Current 1 for MITE recover injection = nA @ Vgm=0
  40               	.set    RI_VC4_MITE,    4496            /* Verify Current 1 for MITE recover injection = 1nA @ Vgm=
  41               	
  42               	.set    RIL_GATE_S_SWC,     0x0040          /* Gate_S voltage for SWC low sub Vth recover injection
  43               	.set    RIL_VC1_SWC,     4496          /* Verify Current 1 for SWC low sub Vth recover injection = 
  44               	.set    RIL_VC2_SWC,     4163          /* Verify Current 1 for SWC low sub Vth recover injection = 
  45               	.set    RIL_GATE_S_OTA,    0x0000          /* Gate_S voltage for OTA low sub Vth recover injection 
  46               	;.set    RIL_GATE_S_OTA,    0x2b00          /* Gate_S voltage for OTA low sub Vth recover injection
  47               	.set    RIL_VC1_OTA,     4496           /* Verify Current 1 for OTA low sub Vth recover injection =
  48               	.set    RIL_VC2_OTA,     4171          /* Verify Current 1 for OTA low sub Vth recover injection = 
  49               	.set    RIL_GATE_S_OTAREF,    0x0040          /* Gate_S voltage for OTAREF low sub Vth recover inje
  50               	.set    RIL_VC1_OTAREF,  4496              /* Verify Current 1 for OTAREF low sub Vth recover injec
  51               	.set    RIL_VC2_OTAREF,  4174             /* Verify Current 1 for OTAREF low sub Vth recover inject
  52               	.set    RIL_GATE_S_MITE,    0x0000          /* Gate_S voltage for MITE low sub Vth recover injectio
  53               	.set    RIL_VC1_MITE,    4496           /* Verify Current 1 for MITE low sub Vth recover injection 
  54               	.set    RIL_VC2_MITE,    4185           /* Verify Current 1 for MITE rlow sub Vth ecover injection 
  55               	
  56               	/* First_Coarse_Program (FCP) */
  57               	.set    FCP_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC first coarese program = V @ IV
  58               	.set    FCP_INJ_T_SWC,    1          /* Injection time for SWC first coarese program = *10us */
  59               	.set    FCP_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA first coarese program = V @ IV
  60               	.set    FCP_INJ_T_OTA,    3          /* Injection time for OTA first coarese program = *10us */
  61               	.set    FCP_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF first coarese program = 
  62               	.set    FCP_INJ_T_OTAREF,    6          /* Injection time for OTAREF first coarese program = *10us 
  63               	.set    FCP_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE first coarese program = V @ 
  64               	.set    FCP_INJ_T_MITE,    3          /* Injection time for MITE first coarese program = *10us */
  65               	
  66               	.set    FCPL_GATE_S_SWC,    0x4400          /* Gate_S voltage for SWC low sub Vth first coarese pro
  67               	.set    FCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth first coarese program =
  68               	.set    FCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth first coarese pro
  69               	.set    FCPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth first coarese program =
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 7


  70               	.set    FCPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth measured co
  71               	.set    FCPL_INJ_T_OTAREF,    6          /* Injection time for OTAREF low sub Vth measured coarse p
  72               	.set    FCPL_GATE_S_MITE,    0x3200          /* Gate_S voltage for MITE low sub Vth first coarese p
  73               	.set    FCPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth first coarese program
  74               	
  75               	/* Measured_Coarse_Program (MCP) */
  76               	.set    MCPS_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC sub Vth measured coarse progr
  77               	.set    MCPS_INJ_T_SWC,    1          /* Injection time for SWC sub Vth measured coarse program = *
  78               	.set    MCPS_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA sub Vth measured coarse progr
  79               	.set    MCPS_INJ_T_OTA,    3          /* Injection time for OTA sub Vth measured coarse program = *
  80               	.set    MCPS_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF sub Vth measured coarse
  81               	.set    MCPS_INJ_T_OTAREF,    6          /* Injection time for OTAREF sub Vth measured coarse progr
  82               	.set    MCPS_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE sub Vth measured coarse pro
  83               	.set    MCPS_INJ_T_MITE,    3          /* Injection time for MITE sub Vth measured coarse program =
  84               	
  85               	.set    MCPA_GATE_S_SWC,    0x5800          /* Gate_S voltage for SWC above Vth measured coarse pro
  86               	.set    MCPA_INJ_T_SWC,    1          /* Injection time for SWC above Vth measured coarse program =
  87               	.set    MCPA_GATE_S_OTA,    0x4a00          /* Gate_S voltage for OTA above Vth measured coarse pro
  88               	.set    MCPA_INJ_T_OTA,   3           /* Injection time for OTA above Vth measured coarse program =
  89               	.set    MCPA_GATE_S_OTAREF,    0x4a00          /* Gate_S voltage for OTAREF above Vth measured coar
  90               	.set    MCPA_INJ_T_OTAREF,    6          /* Injection time for OTAREF above Vth measured coarse pro
  91               	.set    MCPA_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE above Vth measured coarse p
  92               	.set    MCPA_INJ_T_MITE,    3          /* Injection time for MITE above Vth measured coarse program
  93               	
  94               	.set    MCPL_GATE_S_SWC,    0x4400          /* Gate_S voltage for SWC low sub Vth measured coarse p
  95               	.set    MCPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth measured coarse program
  96               	.set    MCPL_GATE_S_OTA,    0x3200          /* Gate_S voltage for OTA low sub Vth measured coarse p
  97               	.set    MCPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth measured coarse program
  98               	.set    MCPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth measured co
  99               	.set    MCPL_INJ_T_OTAREF,    6          /* Injection time for OTAREF low sub Vth measured coarse p
 100               	.set    MCPL_GATE_S_MITE,    0x3200          /* Gate_S voltage for MITE low sub Vth measured coarse
 101               	.set    MCPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth measured coarse progr
 102               	
 103               	/* Fine_Program (FP) */
 104               	.set    FPS_GATE_S_SWC,    0x4600          /* Gate_S voltage for SWC sub Vth fine program = V @ IVD
 105               	.set    FPS_INJ_T_SWC,    1          /* Injection time for SWC sub Vth fine program = *10us */
 106               	.set    FPS_GATE_S_OTA,    0x4600          /* Gate_S voltage for OTA sub Vth fine program = V @ IVD
 107               	.set    FPS_INJ_T_OTA,    3          /* Injection time for OTA sub Vth fine program = *10us */
 108               	.set    FPS_GATE_S_OTAREF,    0x4400          /* Gate_S voltage for OTAREF sub Vth fine program = V
 109               	.set    FPS_INJ_T_OTAREF,    6          /* Injection time for OTAREF sub Vth fine program = *10us *
 110               	.set    FPS_GATE_S_MITE,    0x4600          /* Gate_S voltage for MITE sub Vth fine program = V @ I
 111               	.set    FPS_INJ_T_MITE,    3          /* Injection time for MITE sub Vth fine program = *10us */
 112               	
 113               	.set    FPA_GATE_S_SWC,    0x4800          /* Gate_S voltage for SWC above Vth fine program = V @ I
 114               	.set    FPA_INJ_T_SWC,    1          /* Injection time for SWC above Vth fine program = *10us */
 115               	.set    FPA_GATE_S_OTA,    0x4000          /* Gate_S voltage for OTA above Vth fine program = V @ I
 116               	.set    FPA_INJ_T_OTA,    3          /* Injection time for OTA above Vth fine program = *10us */
 117               	.set    FPA_GATE_S_OTAREF,    0x3e00          /* Gate_S voltage for OTAREF above Vth fine program =
 118               	.set    FPA_INJ_T_OTAREF,    6          /* Injection time for OTAREF above Vth fine program = *10us
 119               	.set    FPA_GATE_S_MITE,    0x4a00          /* Gate_S voltage for MITE above Vth fine program = V @
 120               	.set    FPA_INJ_T_MITE,    3          /* Injection time for MITE above Vth fine program = *10us */
 121               	
 122               	.set    FPL_GATE_S_SWC,    0x3c00          /* Gate_S voltage for SWC low sub Vth fine program = V @
 123               	.set    FPL_INJ_T_SWC,    1          /* Injection time for SWC low sub Vth fine program = *10us */
 124               	.set    FPL_GATE_S_OTA,    0x2c00          /* Gate_S voltage for OTA low sub Vth fine program = V @
 125               	.set    FPL_INJ_T_OTA,    3          /* Injection time for OTA low sub Vth fine program = *10us */
 126               	.set    FPL_GATE_S_OTAREF,    0x3400          /* Gate_S voltage for OTAREF low sub Vth fine program
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 8


 127               	.set    FPL_INJ_T_OTAREF,    7          /* Injection time for OTAREF low sub Vth fine program = *10
 128               	.set    FPL_GATE_S_MITE,    0x2e00          /* Gate_S voltage for MITE low sub Vth fine program = V
 129               	.set    FPL_INJ_T_MITE,    3          /* Injection time for MITE low sub Vth fine program = *10us *
 130               	
   3               	
   4               	.global main
   5               	
   6               	main:
   7 0000 3140 5040 	        mov     #DMEM_250, r1           ; Initialize stack pointer
   8 0004 3740 0050 		mov	#0x5000, r7
   9 0008 0A43      		mov	#0, r10			; Initialize time
  10 000a 3540 401F 		mov     #8000, r5             	; Number of ms
  11               	init_wait:
  12 000e 1583      	        dec.w   r5 
  13 0010 FE23      	        jnz     init_wait
  14 0012 B240 1000 		mov	#0x0010, &BCSCTL2	; Divide clock 20MHz
  14      5800 
  15 0018 B240 805A 		mov	#0x5A80, &WDTCTL	; Watchdog controller 
  15      2001 
  16 001e 32C2      		dint
  17 0020 A243 0E0B 		mov	#0x0002, &TUN_MUX
  18 0024 B240 04BE 	        mov     #0xBE04, &GP_PER_3      ; Vtun_ext = 5V, enable 6V, esd=6v
  18      6401 
  19 002a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  19      000B 
  20 0030 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  20      6001 
  21 0036 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  21      0C0B 
  22 003c 8243 080B 		mov     #0,    &ROW_SEL
  23 0040 8243 0A0B 	        mov     #0,    &COL_SEL
  24 0044 874A 0000 		mov	r10, @r7
  25 0048 2753      		incd	r7
  26 004a 874A 0000 		mov	r10, @r7
  27 004e 2753      		incd	r7
  28 0050 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  29 0052 B012 0000 		call	#block_measure
  30               	
  31               		;mov	#1, r15
  32               		;mov	#10, r15
  33               		;mov	#30, r15
  34               		;mov	#40, r15
  35 0056 3F40 3200 		mov	#50, r15
  36               		;mov	#100, r15
  37               	fine_loop_s:
  38 005a 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  39 005c B012 0000 		call	#measure_verify
  40 0060 B012 0000 		call	#Vd_calculate
  41 0064 B012 0000 		call	#fine_inject
  42               	;	mov     #0x3333, @r7	        ; Record Injection 0x3333 
  43               	;	incd	r7
  44               	;	mov     r10, @r7	        ; Record time 
  45               	;	incd	r7
  46               	;	mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  47               	;	call	#block_measure
  48 0068 1F83      	        dec.w   r15
  49 006a 0124      	        jz      fine_loop_e
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 9


  50 006c F63F      		jmp	fine_loop_s
  51               	fine_loop_e:
  52               	
  53               	;	mov	#31, r15
  54 006e 1F43      		mov	#1, r15
  55               	last_measure_loop_s:
  56 0070 B740 3333 		mov     #0x3333, @r7	        ; Record Injection 0x3333 
  56      0000 
  57 0076 2753      		incd	r7
  58 0078 874A 0000 		mov     r10, @r7	        ; Record time 
  59 007c 2753      		incd	r7
  60 007e 0D43      		mov	#0x0000, r13		;gate_s = 0.6V @ IVDD 2.5V
  61 0080 B012 0000 		call	#block_measure
  62 0084 1F83      	        dec.w   r15
  63 0086 0124      	        jz      last_measure_loop_e
  64 0088 F33F      		jmp	last_measure_loop_s
  65               	last_measure_loop_e:
  66               	
  67 008a B743 0000 		mov	#0xFFFF, @r7		; Data End
  68 008e 8243 5800 		mov	#0x0000, &BCSCTL2	; Divide clock 20MHz
  69 0092 543D      		jmp     end_of_test
  70               	
  71               	fine_inject:
  72 0094 3B40 0070 		mov	#0x7000, r11
  73 0098 2C4B      		mov	@r11, r12		; No. of FGs 
  74 009a B240 0080 	        mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
  74      0C0B 
  75 00a0 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
  75      6401 
  76 00a6 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
  76      6001 
  77 00ac B243 0E0B 	    	mov     #0xFFFF, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
  78               	fine_inject_set_s:
  79 00b0 2B53      		incd	r11
  80 00b2 A24B 080B 		mov     @r11,    &ROW_SEL
  81 00b6 2B53      		incd	r11
  82 00b8 A24B 0A0B 	        mov     @r11,    &COL_SEL
  83 00bc 2B53      		incd	r11
  84 00be 2B53      		incd	r11
  85 00c0 2B53      		incd	r11
  86 00c2 284B      	        mov     @r11,    r8		; Read Vd
  87 00c4 0893      		cmp	#0x0000, r8
  88 00c6 2024      		jeq	fine_inject_skip
  89 00c8 B240 0040 		mov	#FPA_GATE_S_OTA, &GATE_S	; gate_s 
  89      020B 
  90 00ce B240 6000 		mov	#0x0060, &GATE_US_P	; gate_us_p = ivdd
  90      100B 
  91 00d4 B240 6000 		mov	#0x0060, &GATE_US_N	; gate_us_n = ivdd
  91      120B 
  92 00da B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
  92      000B 
  93 00e0 B240 1400 	        mov     #0x0014, &GP_PER_1      ; IVDD to 6.0V, Set vtun_ext = On
  93      6001 
  94 00e6 2543      		mov     #2, r5             	; Number of ms
  95 00e8 B012 0000 		call    #wait_ms                ; Call the waiting function
  96               		;mov 	#0x0026, &DRAIN_CTRL	; gnd, 0xfe0e: 0.415V, 0xde0e: 0.98V, 0xc40e: 1.5V, 0x900e: 2V, 0x000e:
  97 00ec 8248 000B 		mov 	r8, &DRAIN_CTRL	
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 10


  98 00f0 3540 0300 	        mov     #FPA_INJ_T_OTA, r5    	; Number of 10us to inject
  99 00f4 B012 0000 		call    #wait_10us             	; Call the waiting function
 100 00f8 3A50 0300 		add     #FPA_INJ_T_OTA, r10    	; Calculate time
 101 00fc B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 101      000B 
 102 0102 1543      		mov     #1, r5             	; Number of ms
 103 0104 B012 0000 		call    #wait_ms                ; Call the waiting function
 104               	fine_inject_skip:
 105 0108 1C83      	       	dec.w   r12
 106 010a 0124      	        jz      fine_inject_e
 107 010c D13F      	 	jmp	fine_inject_set_s
 108               	fine_inject_e:
 109 010e A242 6001 		mov     #0x0004, &GP_PER_1      ; IVDD to 0V, Set vtun_ext = On
 110 0112 2543      		mov     #2, r5             	; Number of ms
 111 0114 B012 0000 		call    #wait_ms                ; Call the waiting function
 112 0118 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 112      6001 
 113 011e 1543      		mov     #1, r5             	; Number of ms
 114 0120 B012 0000 		call    #wait_ms                ; Call the waiting function
 115 0124 A243 0E0B 		mov     #0x0002, &TUN_MUX       ; Set tunnel mux, <3>:switch <4>:cab <5>:ble
 116 0128 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 116      100B 
 117 012e B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 117      120B 
 118 0134 1543      		mov     #1, r5             	; Number of ms
 119 0136 B012 0000 		call    #wait_ms                ; Call the waiting function
 120 013a 3041      		ret
 121               	
 122               	measure_verify:
 123 013c 3B40 0070 		mov	#0x7000, r11
 124 0140 2C4B      		mov	@r11, r12		; No. of FGs 
 125 0142 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 125      0C0B 
 126 0148 B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 126      6401 
 127 014e B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 127      6001 
 128 0154 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 129               	measure_verify_s:
 130 0158 2B53      		incd	r11
 131 015a A24B 080B 		mov     @r11,    &ROW_SEL
 132 015e 2B53      		incd	r11
 133 0160 A24B 0A0B 	        mov     @r11,    &COL_SEL
 134 0164 2B53      		incd	r11
 135               	;	mov	@r11, r8
 136 0166 2B53      		incd	r11
 137 0168 2B53      		incd	r11
 138 016a 294B      		mov	@r11, r9		; Read Vd
 139 016c 0993      		cmp	#0x0000, r9
 140 016e 3F24      		jeq	measure_verify_skip
 141 0170 824D 020B 		mov 	r13, &GATE_S
 142 0174 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 142      100B 
 143 017a B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 143      120B 
 144 0180 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 144      000B 
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 11


 145 0186 2543      	        mov     #2, r5             	; Number of ms
 146 0188 B012 0000 		call    #wait_ms                ; Call the waiting function
 147 018c B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 147      000B 
 148 0192 3540 0A00 	        mov     #10, r5             	; Number of ms
 149 0196 B012 0000 	        call    #wait_ms                ; Call the waiting function
 150               	
 151 019a 2E42      		mov	#4, r14			; # for current measure average 
 152 019c 0943      		mov	#0, r9
 153               	measure_v9_average_s:
 154 019e B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 154      0C0B 
 155 01a4 3540 0500 	        mov     #5, r5             	; Number of ms
 156 01a8 B012 0000 		call    #wait_ms                ; Call the waiting function
 157 01ac 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 158               		;mov     &ADC, r9	        ; Get value in counter
 159 01b0 1952 040B 		add     &ADC, r9	        ; Get value in counter
 160 01b4 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 160      0C0B 
 161 01ba 3540 0A00 	        mov     #10, r5             	; Number of ms
 162 01be B012 0000 	        call    #wait_10us                ; Call the waiting function
 163 01c2 1E83      		dec.w   r14
 164 01c4 0124      	        jz      measure_v9_average_e
 165 01c6 EB3F      		jmp	measure_v9_average_s
 166               	measure_v9_average_e:
 167 01c8 0910      		rrc	r9
 168 01ca 0910      		rrc	r9
 169 01cc 39C0 00C0 		bic	#0xc000, r9
 170               	
 171 01d0 2B83      		decd	r11
 172 01d2 2B83      		decd	r11
 173 01d4 284B      		mov	@r11, r8
 174 01d6 2B53      		incd	r11
 175 01d8 2B53      		incd	r11
 176               	
 177 01da 0998      		cmp	r8, r9
 178 01dc 0330      		jn	status_1
 179 01de 8B43 0000 		mov	#0x0000, @r11		; Injection over
 180 01e2 053C      		jmp	measure_verify_skip	
 181               	status_1:
 182 01e4 2B83      		decd	r11
 183 01e6 0889      		sub	r9, r8
 184 01e8 8B48 0000 		mov	r8, @r11
 185 01ec 2B53      		incd	r11
 186               	measure_verify_skip:
 187 01ee 1C83      	        dec.w   r12
 188 01f0 0124      	        jz      measure_verify_e
 189 01f2 B23F      		jmp	measure_verify_s
 190               	measure_verify_e:
 191 01f4 B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 191      000B 
 192 01fa B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 192      6001 
 193 0200 3041      		ret
 194               	
 195               	Vd_calculate:
 196 0202 3B40 0070 		mov	#0x7000, r11
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 12


 197 0206 2C4B      		mov	@r11, r12		; No. of FGs 
 198               	Vd_cal_s:
 199 0208 2B53      		incd	r11			; @ Row_Sel
 200 020a 2B53      		incd	r11			; @ Col_Sel
 201 020c 2B53      		incd	r11	
 202 020e 284B      		mov	@r11, r8		; @ Target
 203 0210 2B53      		incd	r11	
 204 0212 294B      		mov	@r11, r9		; @ diff_for_Vd2
 205 0214 2B53      		incd	r11		
 206 0216 2E4B      		mov	@r11, r14		; @ Vd 
 207 0218 0E93      		cmp	#0x0000, r14
 208 021a 2624      		jeq	No_calculation
 209 021c 0889      		sub	r9, r8			; r8 = r8(target)-r9(diff) = Istart
 210 021e 3880 9011 		sub	#ADC_1nA, r8		; r8 = r8(Istart)-ADC_1nA(1nA) = diff_for_Vd1
 211 0222 0893      		cmp	#0, r8		        ; If r8(Vd1) < 0,
 212 0224 0134      		jge	Jump_r8_0
 213 0226 0843      		mov	#0, r8  		; r8 = 0
 214               	Jump_r8_0:
 215 0228 0810      		rrc	r8
 216 022a 0810      		rrc	r8
 217 022c 0810      		rrc	r8
 218 022e 0810      		rrc	r8
 219 0230 0810      		rrc	r8
 220 0232 0810      		rrc	r8
 221 0234 0810      		rrc	r8
 222 0236 0810      		rrc	r8
 223 0238 38C0 C0FF 		bic	#0xffc0, r8
 224 023c 0910      		rrc	r9
 225 023e 0910      		rrc	r9
 226 0240 0910      		rrc	r9
 227 0242 39C0 00FF 		bic	#0xff00, r9
 228               		;add	#45, r9                 ; Vd table offset
 229 0246 3950 1500 		add	#21, r9                 ; Vd table offset
 230               	        ;sub     r8, r9
 231 024a 0958      	        add     r8, r9
 232 024c 0993      	        cmp	#0, r9		        ; If r8(Vd1) < 0,
 233 024e 0134      		jge	Jump_r9_0
 234 0250 0943      		mov	#0, r9  		; r8 = 0
 235               	Jump_r9_0:
 236 0252 0969      	        rlc	r9
 237 0254 19C3      		bic	#0x0001, r9
 238 0256 3950 0068 		add	#0x6800, r9
 239               	
 240 025a 2B83      		decd	r11
 241 025c 8B49 0000 		mov	r9, @r11
 242               	;	decd	r11
 243               	;	mov	r8, @r11
 244               	;	incd	r11
 245 0260 2B53      		incd	r11
 246               	
 247 0262 2E49      	 	mov	@r9, r14
 248 0264 8B4E 0000 		mov	r14, @r11
 249               	No_calculation:
 250 0268 1C83      	        dec.w   r12
 251 026a 0124      	        jz      Vd_cal_e
 252 026c CD3F      		jmp	Vd_cal_s
 253               	Vd_cal_e:
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 13


 254 026e 3041      		ret
 255               	
 256               	block_measure:
 257 0270 3B40 0070 		mov	#0x7000, r11
 258 0274 2C4B      		mov	@r11, r12		; No. of FGs 
 259 0276 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 259      0C0B 
 260 027c B240 04BE 		mov     #0xBE04, &GP_PER_3    	; ########### VTUN_EXT TO 5V
 260      6401 
 261 0282 B240 2400 		mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 261      6001 
 262 0288 A243 0E0B 	    	mov     #0x0002, &TUN_MUX       ; Reset tunnel mux (gnd), <3>:switch <4>:cab <5>:ble
 263               	block_measure_s:
 264 028c 2B53      		incd	r11
 265 028e A24B 080B 		mov     @r11,    &ROW_SEL
 266 0292 2B53      		incd	r11
 267 0294 A24B 0A0B 	        mov     @r11,    &COL_SEL
 268 0298 2B53      		incd	r11
 269 029a 2B53      		incd	r11
 270 029c 2B53      		incd	r11
 271 029e 824D 020B 		mov 	r13, &GATE_S
 272 02a2 B240 4000 		mov	#0x0040, &GATE_US_P	; gate_us_p = gnd
 272      100B 
 273 02a8 B240 4000 		mov	#0x0040, &GATE_US_N	; gate_us_n = gnd
 273      120B 
 274 02ae B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 274      000B 
 275 02b4 2543      	        mov     #2, r5             	; Number of ms
 276 02b6 B012 0000 		call    #wait_ms                ; Call the waiting function
 277 02ba B240 A400 		mov	#0x00A4, &DRAIN_CTRL	; 101 cascode off, no use DAC, i2v mux control=fg_inn;
 277      000B 
 278 02c0 3540 0A00 	        mov     #10, r5             	; Number of ms
 279 02c4 B012 0000 	        call    #wait_ms                ; Call the waiting function
 280               	
 281 02c8 2E42      		mov	#4, r14			; # for current measure average 
 282 02ca 0943      		mov	#0, r9
 283               	measure_9_average_s:
 284 02cc B240 00B0 		mov     #0xB000, &PROG_BITS     ; Set measure_adc high, Toggle the adc counter's clear_n
 284      0C0B 
 285 02d2 3540 0500 	        mov     #5, r5             	; Number of ms
 286 02d6 B012 0000 		call    #wait_ms                ; Call the waiting function
 287 02da 8243 040B 	        mov     #0, &ADC                ; Write counter value into ADC via dummy write
 288               		;mov     &ADC, r9	        ; Get value in counter
 289 02de 1952 040B 		add     &ADC, r9	        ; Get value in counter
 290 02e2 B240 0080 		mov     #0x8000, &PROG_BITS     ; PROG = 1, OV_N = don't care, MEAS_ADC = 0, CLEAR_N = 0
 290      0C0B 
 291 02e8 3540 0A00 	        mov     #10, r5             	; Number of ms
 292 02ec B012 0000 	        call    #wait_10us                ; Call the waiting function
 293 02f0 1E83      		dec.w   r14
 294 02f2 0124      	        jz      measure_9_average_e
 295 02f4 EB3F      		jmp	measure_9_average_s
 296               	measure_9_average_e:
 297 02f6 0910      		rrc	r9
 298 02f8 0910      		rrc	r9
 299 02fa 39C0 00C0 		bic	#0xc000, r9
 300               	
 301 02fe 8749 0000 		mov     r9, @r7			; Get value in counter
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 14


 302 0302 2753      		incd	r7
 303 0304 1C83      	        dec.w   r12
 304 0306 0124      	        jz      block_measure_e
 305 0308 C13F      		jmp	block_measure_s
 306               	block_measure_e:
 307 030a B240 6600 		mov     #0x0066, &DRAIN_CTRL    ; drain = ivdd, no use DAC, i2v mux control = No connection  
 307      000B 
 308 0310 B240 2400 	        mov     #0x0024, &GP_PER_1      ; IVDD to 2.5V, Set vtun_ext = On
 308      6001 
 309 0316 3041      		ret
 310               	
 311               	wait_ms:
 312 0318 3440 FC0C 	        mov     #3324, r4               ; Number of clock cycles in a ms (chariterized by pulse mea
 313 031c 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 314               	wait_ms_loop:
 315 031e 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 316 0320 FE23      	        jnz     wait_ms_loop            ; Test for loop termination. Execution takes 2 clock cycles
 317 0322 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 318 0324 1583      	        dec.w   r5                      ; Decrement number of ms total
 319 0326 FB23      	        jnz     wait_ms_loop            ; Keep looping if necessary
 320 0328 3041      	        ret    
 321               	 
 322               	wait_10us:
 323 032a 3440 2200 	        mov     #34, r4                 ; Number of clock cycles in 100 us (3324 was divided by 100
 324 032e 0644      	        mov     r4, r6                  ; Get number of inner loop iterations
 325               	wait_10us_loop:
 326 0330 1683      	        dec.w   r6                      ; Subtract from number of clk cycles.Execution takes 2 cloc
 327 0332 FE23      	        jnz     wait_10us_loop          ; Test for loop termination. Execution takes 2 clock cycles
 328 0334 0644      	        mov     r4, r6                  ; Reset number of clock cycles
 329 0336 1583      	        dec.w   r5                      ; Decrement number of ms total
 330 0338 FB23      	        jnz     wait_10us_loop          ; Keep looping if necessary
 331 033a 3041      	        ret   
 332               	
 333               	end_of_test:
 334 033c 8243 5800 		mov	#0x0000, &BCSCTL2
 335 0340 0343      		nop
 336 0342 3043      		br #0xffff
 337               	
 338               	/* ----------------------         INTERRUPT VECTORS  --------------- */
 339               	.section .vectors, "a"
 340 0000 0000      	.word end_of_test  ; Interrupt  0 (lowest priority)    <unused>
 341 0002 0000      	.word end_of_test  ; Interrupt  1                      <unused>
 342 0004 0000      	.word end_of_test  ; Interrupt  2                      <unused>
 343 0006 0000      	.word end_of_test  ; Interrupt  3                      <unused>
 344 0008 0000      	.word end_of_test  ; Interrupt  4                      <unused>
 345 000a 0000      	.word end_of_test  ; Interrupt  5                      <unused>
 346 000c 0000      	.word end_of_test  ; Interrupt  6                      <unused>
 347 000e 0000      	.word end_of_test  ; Interrupt  7                      <unused>
 348 0010 0000      	.word end_of_test  ; Interrupt  8                      <unused>
 349 0012 0000      	.word end_of_test  ; Interrupt  9                      <unused>
 350 0014 0000      	.word end_of_test  ; Interrupt 10                      Watchdog timer
 351 0016 0000      	.word end_of_test  ; Interrupt 11                      <unused>
 352 0018 0000      	.word end_of_test  ; Interrupt 12                      <unused>
 353 001a 0000      	.word end_of_test  ; Interrupt 13                      <unused>
 354 001c 0000      	.word end_of_test  ; Interrupt 14                      NMI
 355 001e 0000      	.word main         ; Interrupt 15 (highest priority)   RESET
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 15


DEFINED SYMBOLS
       pmem_defs.asm:39     *ABS*:00000000 IE1
       pmem_defs.asm:40     *ABS*:00000001 IE1_HI
       pmem_defs.asm:41     *ABS*:00000002 IFG1
       pmem_defs.asm:42     *ABS*:00000003 IFG1_HI
       pmem_defs.asm:43     *ABS*:00000004 CPU_ID_LO
       pmem_defs.asm:44     *ABS*:00000006 CPU_ID_HI
       pmem_defs.asm:45     *ABS*:00000008 CPU_NR
       pmem_defs.asm:50     *ABS*:00000020 P1IN
       pmem_defs.asm:51     *ABS*:00000021 P1OUT
       pmem_defs.asm:52     *ABS*:00000022 P1DIR
       pmem_defs.asm:53     *ABS*:00000023 P1IFG
       pmem_defs.asm:54     *ABS*:00000024 P1IES
       pmem_defs.asm:55     *ABS*:00000025 P1IE
       pmem_defs.asm:56     *ABS*:00000026 P1SEL
       pmem_defs.asm:58     *ABS*:00000028 P2IN
       pmem_defs.asm:59     *ABS*:00000029 P2OUT
       pmem_defs.asm:60     *ABS*:0000002a P2DIR
       pmem_defs.asm:61     *ABS*:0000002b P2IFG
       pmem_defs.asm:62     *ABS*:0000002c P2IES
       pmem_defs.asm:63     *ABS*:0000002d P2IE
       pmem_defs.asm:64     *ABS*:0000002e P2SEL
       pmem_defs.asm:66     *ABS*:00000018 P3IN
       pmem_defs.asm:67     *ABS*:00000019 P3OUT
       pmem_defs.asm:68     *ABS*:0000001a P3DIR
       pmem_defs.asm:69     *ABS*:0000001b P3SEL
       pmem_defs.asm:71     *ABS*:0000001c P4IN
       pmem_defs.asm:72     *ABS*:0000001d P4OUT
       pmem_defs.asm:73     *ABS*:0000001e P4DIR
       pmem_defs.asm:74     *ABS*:0000001f P4SEL
       pmem_defs.asm:76     *ABS*:00000030 P5IN
       pmem_defs.asm:77     *ABS*:00000031 P5OUT
       pmem_defs.asm:78     *ABS*:00000032 P5DIR
       pmem_defs.asm:79     *ABS*:00000033 P5SEL
       pmem_defs.asm:81     *ABS*:00000034 P6IN
       pmem_defs.asm:82     *ABS*:00000035 P6OUT
       pmem_defs.asm:83     *ABS*:00000036 P6DIR
       pmem_defs.asm:84     *ABS*:00000037 P6SEL
       pmem_defs.asm:89     *ABS*:00000057 BCSCTL1
       pmem_defs.asm:90     *ABS*:00000058 BCSCTL2
       pmem_defs.asm:95     *ABS*:00000120 WDTCTL
       pmem_defs.asm:100    *ABS*:00000130 MPY
       pmem_defs.asm:101    *ABS*:00000132 MPYS
       pmem_defs.asm:102    *ABS*:00000134 MAC
       pmem_defs.asm:103    *ABS*:00000136 MACS
       pmem_defs.asm:104    *ABS*:00000138 OP2
       pmem_defs.asm:105    *ABS*:0000013a RESLO
       pmem_defs.asm:106    *ABS*:0000013c RESHI
       pmem_defs.asm:107    *ABS*:0000013e SUMEXT
       pmem_defs.asm:112    *ABS*:00000160 TACTL
       pmem_defs.asm:113    *ABS*:00000170 TAR
       pmem_defs.asm:114    *ABS*:00000162 TACCTL0
       pmem_defs.asm:115    *ABS*:00000172 TACCR0
       pmem_defs.asm:116    *ABS*:00000164 TACCTL1
       pmem_defs.asm:117    *ABS*:00000174 TACCR1
       pmem_defs.asm:118    *ABS*:00000166 TACCTL2
       pmem_defs.asm:119    *ABS*:00000176 TACCR2
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 16


       pmem_defs.asm:120    *ABS*:0000012e TAIV
       pmem_defs.asm:125    *ABS*:00004000 DMEM_BASE
       pmem_defs.asm:127    *ABS*:00004000 DMEM_200
       pmem_defs.asm:128    *ABS*:00004001 DMEM_201
       pmem_defs.asm:129    *ABS*:00004002 DMEM_202
       pmem_defs.asm:130    *ABS*:00004003 DMEM_203
       pmem_defs.asm:131    *ABS*:00004004 DMEM_204
       pmem_defs.asm:132    *ABS*:00004005 DMEM_205
       pmem_defs.asm:133    *ABS*:00004006 DMEM_206
       pmem_defs.asm:134    *ABS*:00004007 DMEM_207
       pmem_defs.asm:135    *ABS*:00004008 DMEM_208
       pmem_defs.asm:136    *ABS*:00004009 DMEM_209
       pmem_defs.asm:137    *ABS*:0000400a DMEM_20A
       pmem_defs.asm:138    *ABS*:0000400b DMEM_20B
       pmem_defs.asm:139    *ABS*:0000400c DMEM_20C
       pmem_defs.asm:140    *ABS*:0000400d DMEM_20D
       pmem_defs.asm:141    *ABS*:0000400e DMEM_20E
       pmem_defs.asm:142    *ABS*:0000400f DMEM_20F
       pmem_defs.asm:144    *ABS*:00004010 DMEM_210
       pmem_defs.asm:145    *ABS*:00004011 DMEM_211
       pmem_defs.asm:146    *ABS*:00004012 DMEM_212
       pmem_defs.asm:147    *ABS*:00004013 DMEM_213
       pmem_defs.asm:148    *ABS*:00004014 DMEM_214
       pmem_defs.asm:149    *ABS*:00004015 DMEM_215
       pmem_defs.asm:150    *ABS*:00004016 DMEM_216
       pmem_defs.asm:151    *ABS*:00004017 DMEM_217
       pmem_defs.asm:152    *ABS*:00004018 DMEM_218
       pmem_defs.asm:153    *ABS*:00004019 DMEM_219
       pmem_defs.asm:154    *ABS*:0000401a DMEM_21A
       pmem_defs.asm:155    *ABS*:0000401b DMEM_21B
       pmem_defs.asm:156    *ABS*:0000401c DMEM_21C
       pmem_defs.asm:157    *ABS*:0000401d DMEM_21D
       pmem_defs.asm:158    *ABS*:0000401e DMEM_21E
       pmem_defs.asm:159    *ABS*:0000401f DMEM_21F
       pmem_defs.asm:161    *ABS*:00004020 DMEM_220
       pmem_defs.asm:162    *ABS*:00004021 DMEM_221
       pmem_defs.asm:163    *ABS*:00004022 DMEM_222
       pmem_defs.asm:164    *ABS*:00004023 DMEM_223
       pmem_defs.asm:165    *ABS*:00004024 DMEM_224
       pmem_defs.asm:166    *ABS*:00004025 DMEM_225
       pmem_defs.asm:167    *ABS*:00004026 DMEM_226
       pmem_defs.asm:168    *ABS*:00004027 DMEM_227
       pmem_defs.asm:169    *ABS*:00004028 DMEM_228
       pmem_defs.asm:170    *ABS*:00004029 DMEM_229
       pmem_defs.asm:171    *ABS*:0000402a DMEM_22A
       pmem_defs.asm:172    *ABS*:0000402b DMEM_22B
       pmem_defs.asm:173    *ABS*:0000402c DMEM_22C
       pmem_defs.asm:174    *ABS*:0000402d DMEM_22D
       pmem_defs.asm:175    *ABS*:0000402e DMEM_22E
       pmem_defs.asm:176    *ABS*:0000402f DMEM_22F
       pmem_defs.asm:178    *ABS*:00004030 DMEM_230
       pmem_defs.asm:179    *ABS*:00004031 DMEM_231
       pmem_defs.asm:180    *ABS*:00004032 DMEM_232
       pmem_defs.asm:181    *ABS*:00004033 DMEM_233
       pmem_defs.asm:182    *ABS*:00004034 DMEM_234
       pmem_defs.asm:183    *ABS*:00004035 DMEM_235
       pmem_defs.asm:184    *ABS*:00004036 DMEM_236
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 17


       pmem_defs.asm:185    *ABS*:00004037 DMEM_237
       pmem_defs.asm:186    *ABS*:00004038 DMEM_238
       pmem_defs.asm:187    *ABS*:00004039 DMEM_239
       pmem_defs.asm:188    *ABS*:0000403a DMEM_23A
       pmem_defs.asm:189    *ABS*:0000403b DMEM_23B
       pmem_defs.asm:190    *ABS*:0000403c DMEM_23C
       pmem_defs.asm:191    *ABS*:0000403d DMEM_23D
       pmem_defs.asm:192    *ABS*:0000403e DMEM_23E
       pmem_defs.asm:193    *ABS*:0000403f DMEM_23F
       pmem_defs.asm:195    *ABS*:00004040 DMEM_240
       pmem_defs.asm:196    *ABS*:00004041 DMEM_241
       pmem_defs.asm:197    *ABS*:00004042 DMEM_242
       pmem_defs.asm:198    *ABS*:00004043 DMEM_243
       pmem_defs.asm:199    *ABS*:00004044 DMEM_244
       pmem_defs.asm:200    *ABS*:00004045 DMEM_245
       pmem_defs.asm:201    *ABS*:00004046 DMEM_246
       pmem_defs.asm:202    *ABS*:00004047 DMEM_247
       pmem_defs.asm:203    *ABS*:00004048 DMEM_248
       pmem_defs.asm:204    *ABS*:00004049 DMEM_249
       pmem_defs.asm:205    *ABS*:0000404a DMEM_24A
       pmem_defs.asm:206    *ABS*:0000404b DMEM_24B
       pmem_defs.asm:207    *ABS*:0000404c DMEM_24C
       pmem_defs.asm:208    *ABS*:0000404d DMEM_24D
       pmem_defs.asm:209    *ABS*:0000404e DMEM_24E
       pmem_defs.asm:210    *ABS*:0000404f DMEM_24F
       pmem_defs.asm:212    *ABS*:00004050 DMEM_250
       pmem_defs.asm:213    *ABS*:00004051 DMEM_251
       pmem_defs.asm:214    *ABS*:00004052 DMEM_252
       pmem_defs.asm:215    *ABS*:00004053 DMEM_253
       pmem_defs.asm:216    *ABS*:00004054 DMEM_254
       pmem_defs.asm:217    *ABS*:00004055 DMEM_255
       pmem_defs.asm:218    *ABS*:00004056 DMEM_256
       pmem_defs.asm:219    *ABS*:00004057 DMEM_257
       pmem_defs.asm:220    *ABS*:00004058 DMEM_258
       pmem_defs.asm:221    *ABS*:00004059 DMEM_259
       pmem_defs.asm:222    *ABS*:0000405a DMEM_25A
       pmem_defs.asm:223    *ABS*:0000405b DMEM_25B
       pmem_defs.asm:224    *ABS*:0000405c DMEM_25C
       pmem_defs.asm:225    *ABS*:0000405d DMEM_25D
       pmem_defs.asm:226    *ABS*:0000405e DMEM_25E
       pmem_defs.asm:227    *ABS*:0000405f DMEM_25F
       pmem_defs.asm:229    *ABS*:00004060 DMEM_260
       pmem_defs.asm:230    *ABS*:00004061 DMEM_261
       pmem_defs.asm:231    *ABS*:00004062 DMEM_262
       pmem_defs.asm:232    *ABS*:00004063 DMEM_263
       pmem_defs.asm:233    *ABS*:00004064 DMEM_264
       pmem_defs.asm:234    *ABS*:00004065 DMEM_265
       pmem_defs.asm:235    *ABS*:00004066 DMEM_266
       pmem_defs.asm:236    *ABS*:00004067 DMEM_267
       pmem_defs.asm:237    *ABS*:00004068 DMEM_268
       pmem_defs.asm:238    *ABS*:00004069 DMEM_269
       pmem_defs.asm:239    *ABS*:0000406a DMEM_26A
       pmem_defs.asm:240    *ABS*:0000406b DMEM_26B
       pmem_defs.asm:241    *ABS*:0000406c DMEM_26C
       pmem_defs.asm:242    *ABS*:0000406d DMEM_26D
       pmem_defs.asm:243    *ABS*:0000406e DMEM_26E
       pmem_defs.asm:244    *ABS*:0000406f DMEM_26F
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 18


       pmem_defs.asm:246    *ABS*:00004100 DMEM_300
       pmem_defs.asm:251    *ABS*:00004000 PMEM_LENGTH
       pmem_defs.asm:256    *ABS*:00000b00 DRAIN_CTRL
       pmem_defs.asm:257    *ABS*:00000b02 GATE_S
       pmem_defs.asm:258    *ABS*:00000b04 ADC
       pmem_defs.asm:259    *ABS*:00000b06 PULSE_CTRL
       pmem_defs.asm:260    *ABS*:00000b08 ROW_SEL
       pmem_defs.asm:261    *ABS*:00000b0a COL_SEL
       pmem_defs.asm:262    *ABS*:00000b0c PROG_BITS
       pmem_defs.asm:263    *ABS*:00000b0e TUN_MUX
       pmem_defs.asm:264    *ABS*:00000b10 GATE_US_P
       pmem_defs.asm:265    *ABS*:00000b12 GATE_US_N
       pmem_defs.asm:266    *ABS*:00000b14 BIAS_DACS
       pmem_defs.asm:267    *ABS*:00000160 GP_PER_1
       pmem_defs.asm:268    *ABS*:00000162 GP_PER_2
       pmem_defs.asm:269    *ABS*:00000164 GP_PER_3
       pmem_defs.asm:270    *ABS*:00000166 GP_PER_4
       chip_para.asm:7      *ABS*:00000003 TUN_TIME_SP
       chip_para.asm:8      *ABS*:00000002 R_TUN_TIME_SP
       chip_para.asm:9      *ABS*:000001f4 INJ_TIME_SP_1
       chip_para.asm:14     *ABS*:00001190 ADC_1nA
       chip_para.asm:17     *ABS*:00000028 TUN_TIME_TP_CAB
       chip_para.asm:18     *ABS*:00000028 R_TUN_TIME_TP_CAB
       chip_para.asm:21     *ABS*:00000040 RI_GATE_S_SWC
       chip_para.asm:22     *ABS*:0000172b RI_VC1_SWC
       chip_para.asm:23     *ABS*:0000169c RI_VC2_SWC
       chip_para.asm:24     *ABS*:000014ed RI_VC3_SWC
       chip_para.asm:25     *ABS*:00001190 RI_VC4_SWC
       chip_para.asm:26     *ABS*:00000000 RI_GATE_S_OTA
       chip_para.asm:27     *ABS*:00001a4c RI_VC1_OTA
       chip_para.asm:28     *ABS*:0000196c RI_VC2_OTA
       chip_para.asm:29     *ABS*:000016cd RI_VC3_OTA
       chip_para.asm:30     *ABS*:00001190 RI_VC4_OTA
       chip_para.asm:31     *ABS*:00000040 RI_GATE_S_OTAREF
       chip_para.asm:32     *ABS*:000017f7 RI_VC1_OTAREF
       chip_para.asm:33     *ABS*:00001754 RI_VC2_OTAREF
       chip_para.asm:34     *ABS*:00001568 RI_VC3_OTAREF
       chip_para.asm:35     *ABS*:00001190 RI_VC4_OTAREF
       chip_para.asm:36     *ABS*:00000000 RI_GATE_S_MITE
       chip_para.asm:37     *ABS*:00001b7b RI_VC1_MITE
       chip_para.asm:38     *ABS*:00001a7d RI_VC2_MITE
       chip_para.asm:39     *ABS*:00001784 RI_VC3_MITE
       chip_para.asm:40     *ABS*:00001190 RI_VC4_MITE
       chip_para.asm:42     *ABS*:00000040 RIL_GATE_S_SWC
       chip_para.asm:43     *ABS*:00001190 RIL_VC1_SWC
       chip_para.asm:44     *ABS*:00001043 RIL_VC2_SWC
       chip_para.asm:45     *ABS*:00000000 RIL_GATE_S_OTA
       chip_para.asm:47     *ABS*:00001190 RIL_VC1_OTA
       chip_para.asm:48     *ABS*:0000104b RIL_VC2_OTA
       chip_para.asm:49     *ABS*:00000040 RIL_GATE_S_OTAREF
       chip_para.asm:50     *ABS*:00001190 RIL_VC1_OTAREF
       chip_para.asm:51     *ABS*:0000104e RIL_VC2_OTAREF
       chip_para.asm:52     *ABS*:00000000 RIL_GATE_S_MITE
       chip_para.asm:53     *ABS*:00001190 RIL_VC1_MITE
       chip_para.asm:54     *ABS*:00001059 RIL_VC2_MITE
       chip_para.asm:57     *ABS*:00005800 FCP_GATE_S_SWC
       chip_para.asm:58     *ABS*:00000001 FCP_INJ_T_SWC
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 19


       chip_para.asm:59     *ABS*:00004a00 FCP_GATE_S_OTA
       chip_para.asm:60     *ABS*:00000003 FCP_INJ_T_OTA
       chip_para.asm:61     *ABS*:00004a00 FCP_GATE_S_OTAREF
       chip_para.asm:62     *ABS*:00000006 FCP_INJ_T_OTAREF
       chip_para.asm:63     *ABS*:00004a00 FCP_GATE_S_MITE
       chip_para.asm:64     *ABS*:00000003 FCP_INJ_T_MITE
       chip_para.asm:66     *ABS*:00004400 FCPL_GATE_S_SWC
       chip_para.asm:67     *ABS*:00000001 FCPL_INJ_T_SWC
       chip_para.asm:68     *ABS*:00003200 FCPL_GATE_S_OTA
       chip_para.asm:69     *ABS*:00000003 FCPL_INJ_T_OTA
       chip_para.asm:70     *ABS*:00003400 FCPL_GATE_S_OTAREF
       chip_para.asm:71     *ABS*:00000006 FCPL_INJ_T_OTAREF
       chip_para.asm:72     *ABS*:00003200 FCPL_GATE_S_MITE
       chip_para.asm:73     *ABS*:00000003 FCPL_INJ_T_MITE
       chip_para.asm:76     *ABS*:00005800 MCPS_GATE_S_SWC
       chip_para.asm:77     *ABS*:00000001 MCPS_INJ_T_SWC
       chip_para.asm:78     *ABS*:00004a00 MCPS_GATE_S_OTA
       chip_para.asm:79     *ABS*:00000003 MCPS_INJ_T_OTA
       chip_para.asm:80     *ABS*:00004a00 MCPS_GATE_S_OTAREF
       chip_para.asm:81     *ABS*:00000006 MCPS_INJ_T_OTAREF
       chip_para.asm:82     *ABS*:00004a00 MCPS_GATE_S_MITE
       chip_para.asm:83     *ABS*:00000003 MCPS_INJ_T_MITE
       chip_para.asm:85     *ABS*:00005800 MCPA_GATE_S_SWC
       chip_para.asm:86     *ABS*:00000001 MCPA_INJ_T_SWC
       chip_para.asm:87     *ABS*:00004a00 MCPA_GATE_S_OTA
       chip_para.asm:88     *ABS*:00000003 MCPA_INJ_T_OTA
       chip_para.asm:89     *ABS*:00004a00 MCPA_GATE_S_OTAREF
       chip_para.asm:90     *ABS*:00000006 MCPA_INJ_T_OTAREF
       chip_para.asm:91     *ABS*:00004a00 MCPA_GATE_S_MITE
       chip_para.asm:92     *ABS*:00000003 MCPA_INJ_T_MITE
       chip_para.asm:94     *ABS*:00004400 MCPL_GATE_S_SWC
       chip_para.asm:95     *ABS*:00000001 MCPL_INJ_T_SWC
       chip_para.asm:96     *ABS*:00003200 MCPL_GATE_S_OTA
       chip_para.asm:97     *ABS*:00000003 MCPL_INJ_T_OTA
       chip_para.asm:98     *ABS*:00003400 MCPL_GATE_S_OTAREF
       chip_para.asm:99     *ABS*:00000006 MCPL_INJ_T_OTAREF
       chip_para.asm:100    *ABS*:00003200 MCPL_GATE_S_MITE
       chip_para.asm:101    *ABS*:00000003 MCPL_INJ_T_MITE
       chip_para.asm:104    *ABS*:00004600 FPS_GATE_S_SWC
       chip_para.asm:105    *ABS*:00000001 FPS_INJ_T_SWC
       chip_para.asm:106    *ABS*:00004600 FPS_GATE_S_OTA
       chip_para.asm:107    *ABS*:00000003 FPS_INJ_T_OTA
       chip_para.asm:108    *ABS*:00004400 FPS_GATE_S_OTAREF
       chip_para.asm:109    *ABS*:00000006 FPS_INJ_T_OTAREF
       chip_para.asm:110    *ABS*:00004600 FPS_GATE_S_MITE
       chip_para.asm:111    *ABS*:00000003 FPS_INJ_T_MITE
       chip_para.asm:113    *ABS*:00004800 FPA_GATE_S_SWC
       chip_para.asm:114    *ABS*:00000001 FPA_INJ_T_SWC
       chip_para.asm:115    *ABS*:00004000 FPA_GATE_S_OTA
       chip_para.asm:116    *ABS*:00000003 FPA_INJ_T_OTA
       chip_para.asm:117    *ABS*:00003e00 FPA_GATE_S_OTAREF
       chip_para.asm:118    *ABS*:00000006 FPA_INJ_T_OTAREF
       chip_para.asm:119    *ABS*:00004a00 FPA_GATE_S_MITE
       chip_para.asm:120    *ABS*:00000003 FPA_INJ_T_MITE
       chip_para.asm:122    *ABS*:00003c00 FPL_GATE_S_SWC
       chip_para.asm:123    *ABS*:00000001 FPL_INJ_T_SWC
       chip_para.asm:124    *ABS*:00002c00 FPL_GATE_S_OTA
GAS LISTING /home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43 			page 20


       chip_para.asm:125    *ABS*:00000003 FPL_INJ_T_OTA
       chip_para.asm:126    *ABS*:00003400 FPL_GATE_S_OTAREF
       chip_para.asm:127    *ABS*:00000007 FPL_INJ_T_OTAREF
       chip_para.asm:128    *ABS*:00002e00 FPL_GATE_S_MITE
       chip_para.asm:129    *ABS*:00000003 FPL_INJ_T_MITE
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:6      .text:00000000 main
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:11     .text:0000000e init_wait
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:256    .text:00000270 block_measure
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:37     .text:0000005a fine_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:122    .text:0000013c measure_verify
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:195    .text:00000202 Vd_calculate
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:71     .text:00000094 fine_inject
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:51     .text:0000006e fine_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:55     .text:00000070 last_measure_loop_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:65     .text:0000008a last_measure_loop_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:333    .text:0000033c end_of_test
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:78     .text:000000b0 fine_inject_set_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:104    .text:00000108 fine_inject_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:311    .text:00000318 wait_ms
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:322    .text:0000032a wait_10us
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:108    .text:0000010e fine_inject_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:129    .text:00000158 measure_verify_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:186    .text:000001ee measure_verify_skip
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:153    .text:0000019e measure_v9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:166    .text:000001c8 measure_v9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:181    .text:000001e4 status_1
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:190    .text:000001f4 measure_verify_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:198    .text:00000208 Vd_cal_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:249    .text:00000268 No_calculation
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:214    .text:00000228 Jump_r8_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:235    .text:00000252 Jump_r9_0
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:253    .text:0000026e Vd_cal_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:263    .text:0000028c block_measure_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:283    .text:000002cc measure_9_average_s
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:296    .text:000002f6 measure_9_average_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:306    .text:0000030a block_measure_e
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:314    .text:0000031e wait_ms_loop
/home/ubuntu/rasp30/prog_assembly/libs/asm_code/fine_program_aboveVt_m_ave_04_CAB_ota.s43:325    .text:00000330 wait_10us_loop

NO UNDEFINED SYMBOLS

fine_program_aboveVt_m_ave_04_CAB_ota.o:     file format elf32-msp430
fine_program_aboveVt_m_ave_04_CAB_ota.o
architecture: msp430:430, flags 0x00000011:
HAS_RELOC, HAS_SYMS
start address 0x00000000

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000344  00000000  00000000  00000034  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, CODE
  1 .data         00000000  00000000  00000000  00000378  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000000  00000000  00000000  00000378  2**0
                  ALLOC
  3 .vectors      00000020  00000000  00000000  00000378  2**0
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA
SYMBOL TABLE:
00000000 l    d  .text	00000000 .text
00000000 l    d  .data	00000000 .data
00000000 l    d  .bss	00000000 .bss
00000000 l       *ABS*	00000000 IE1
00000001 l       *ABS*	00000000 IE1_HI
00000002 l       *ABS*	00000000 IFG1
00000003 l       *ABS*	00000000 IFG1_HI
00000004 l       *ABS*	00000000 CPU_ID_LO
00000006 l       *ABS*	00000000 CPU_ID_HI
00000008 l       *ABS*	00000000 CPU_NR
00000020 l       *ABS*	00000000 P1IN
00000021 l       *ABS*	00000000 P1OUT
00000022 l       *ABS*	00000000 P1DIR
00000023 l       *ABS*	00000000 P1IFG
00000024 l       *ABS*	00000000 P1IES
00000025 l       *ABS*	00000000 P1IE
00000026 l       *ABS*	00000000 P1SEL
00000028 l       *ABS*	00000000 P2IN
00000029 l       *ABS*	00000000 P2OUT
0000002a l       *ABS*	00000000 P2DIR
0000002b l       *ABS*	00000000 P2IFG
0000002c l       *ABS*	00000000 P2IES
0000002d l       *ABS*	00000000 P2IE
0000002e l       *ABS*	00000000 P2SEL
00000018 l       *ABS*	00000000 P3IN
00000019 l       *ABS*	00000000 P3OUT
0000001a l       *ABS*	00000000 P3DIR
0000001b l       *ABS*	00000000 P3SEL
0000001c l       *ABS*	00000000 P4IN
0000001d l       *ABS*	00000000 P4OUT
0000001e l       *ABS*	00000000 P4DIR
0000001f l       *ABS*	00000000 P4SEL
00000030 l       *ABS*	00000000 P5IN
00000031 l       *ABS*	00000000 P5OUT
00000032 l       *ABS*	00000000 P5DIR
00000033 l       *ABS*	00000000 P5SEL
00000034 l       *ABS*	00000000 P6IN
00000035 l       *ABS*	00000000 P6OUT
00000036 l       *ABS*	00000000 P6DIR
00000037 l       *ABS*	00000000 P6SEL
00000057 l       *ABS*	00000000 BCSCTL1
00000058 l       *ABS*	00000000 BCSCTL2
00000120 l       *ABS*	00000000 WDTCTL
00000130 l       *ABS*	00000000 MPY
00000132 l       *ABS*	00000000 MPYS
00000134 l       *ABS*	00000000 MAC
00000136 l       *ABS*	00000000 MACS
00000138 l       *ABS*	00000000 OP2
0000013a l       *ABS*	00000000 RESLO
0000013c l       *ABS*	00000000 RESHI
0000013e l       *ABS*	00000000 SUMEXT
00000160 l       *ABS*	00000000 TACTL
00000170 l       *ABS*	00000000 TAR
00000162 l       *ABS*	00000000 TACCTL0
00000172 l       *ABS*	00000000 TACCR0
00000164 l       *ABS*	00000000 TACCTL1
00000174 l       *ABS*	00000000 TACCR1
00000166 l       *ABS*	00000000 TACCTL2
00000176 l       *ABS*	00000000 TACCR2
0000012e l       *ABS*	00000000 TAIV
00004000 l       *ABS*	00000000 DMEM_BASE
00004000 l       *ABS*	00000000 DMEM_200
00004001 l       *ABS*	00000000 DMEM_201
00004002 l       *ABS*	00000000 DMEM_202
00004003 l       *ABS*	00000000 DMEM_203
00004004 l       *ABS*	00000000 DMEM_204
00004005 l       *ABS*	00000000 DMEM_205
00004006 l       *ABS*	00000000 DMEM_206
00004007 l       *ABS*	00000000 DMEM_207
00004008 l       *ABS*	00000000 DMEM_208
00004009 l       *ABS*	00000000 DMEM_209
0000400a l       *ABS*	00000000 DMEM_20A
0000400b l       *ABS*	00000000 DMEM_20B
0000400c l       *ABS*	00000000 DMEM_20C
0000400d l       *ABS*	00000000 DMEM_20D
0000400e l       *ABS*	00000000 DMEM_20E
0000400f l       *ABS*	00000000 DMEM_20F
00004010 l       *ABS*	00000000 DMEM_210
00004011 l       *ABS*	00000000 DMEM_211
00004012 l       *ABS*	00000000 DMEM_212
00004013 l       *ABS*	00000000 DMEM_213
00004014 l       *ABS*	00000000 DMEM_214
00004015 l       *ABS*	00000000 DMEM_215
00004016 l       *ABS*	00000000 DMEM_216
00004017 l       *ABS*	00000000 DMEM_217
00004018 l       *ABS*	00000000 DMEM_218
00004019 l       *ABS*	00000000 DMEM_219
0000401a l       *ABS*	00000000 DMEM_21A
0000401b l       *ABS*	00000000 DMEM_21B
0000401c l       *ABS*	00000000 DMEM_21C
0000401d l       *ABS*	00000000 DMEM_21D
0000401e l       *ABS*	00000000 DMEM_21E
0000401f l       *ABS*	00000000 DMEM_21F
00004020 l       *ABS*	00000000 DMEM_220
00004021 l       *ABS*	00000000 DMEM_221
00004022 l       *ABS*	00000000 DMEM_222
00004023 l       *ABS*	00000000 DMEM_223
00004024 l       *ABS*	00000000 DMEM_224
00004025 l       *ABS*	00000000 DMEM_225
00004026 l       *ABS*	00000000 DMEM_226
00004027 l       *ABS*	00000000 DMEM_227
00004028 l       *ABS*	00000000 DMEM_228
00004029 l       *ABS*	00000000 DMEM_229
0000402a l       *ABS*	00000000 DMEM_22A
0000402b l       *ABS*	00000000 DMEM_22B
0000402c l       *ABS*	00000000 DMEM_22C
0000402d l       *ABS*	00000000 DMEM_22D
0000402e l       *ABS*	00000000 DMEM_22E
0000402f l       *ABS*	00000000 DMEM_22F
00004030 l       *ABS*	00000000 DMEM_230
00004031 l       *ABS*	00000000 DMEM_231
00004032 l       *ABS*	00000000 DMEM_232
00004033 l       *ABS*	00000000 DMEM_233
00004034 l       *ABS*	00000000 DMEM_234
00004035 l       *ABS*	00000000 DMEM_235
00004036 l       *ABS*	00000000 DMEM_236
00004037 l       *ABS*	00000000 DMEM_237
00004038 l       *ABS*	00000000 DMEM_238
00004039 l       *ABS*	00000000 DMEM_239
0000403a l       *ABS*	00000000 DMEM_23A
0000403b l       *ABS*	00000000 DMEM_23B
0000403c l       *ABS*	00000000 DMEM_23C
0000403d l       *ABS*	00000000 DMEM_23D
0000403e l       *ABS*	00000000 DMEM_23E
0000403f l       *ABS*	00000000 DMEM_23F
00004040 l       *ABS*	00000000 DMEM_240
00004041 l       *ABS*	00000000 DMEM_241
00004042 l       *ABS*	00000000 DMEM_242
00004043 l       *ABS*	00000000 DMEM_243
00004044 l       *ABS*	00000000 DMEM_244
00004045 l       *ABS*	00000000 DMEM_245
00004046 l       *ABS*	00000000 DMEM_246
00004047 l       *ABS*	00000000 DMEM_247
00004048 l       *ABS*	00000000 DMEM_248
00004049 l       *ABS*	00000000 DMEM_249
0000404a l       *ABS*	00000000 DMEM_24A
0000404b l       *ABS*	00000000 DMEM_24B
0000404c l       *ABS*	00000000 DMEM_24C
0000404d l       *ABS*	00000000 DMEM_24D
0000404e l       *ABS*	00000000 DMEM_24E
0000404f l       *ABS*	00000000 DMEM_24F
00004050 l       *ABS*	00000000 DMEM_250
00004051 l       *ABS*	00000000 DMEM_251
00004052 l       *ABS*	00000000 DMEM_252
00004053 l       *ABS*	00000000 DMEM_253
00004054 l       *ABS*	00000000 DMEM_254
00004055 l       *ABS*	00000000 DMEM_255
00004056 l       *ABS*	00000000 DMEM_256
00004057 l       *ABS*	00000000 DMEM_257
00004058 l       *ABS*	00000000 DMEM_258
00004059 l       *ABS*	00000000 DMEM_259
0000405a l       *ABS*	00000000 DMEM_25A
0000405b l       *ABS*	00000000 DMEM_25B
0000405c l       *ABS*	00000000 DMEM_25C
0000405d l       *ABS*	00000000 DMEM_25D
0000405e l       *ABS*	00000000 DMEM_25E
0000405f l       *ABS*	00000000 DMEM_25F
00004060 l       *ABS*	00000000 DMEM_260
00004061 l       *ABS*	00000000 DMEM_261
00004062 l       *ABS*	00000000 DMEM_262
00004063 l       *ABS*	00000000 DMEM_263
00004064 l       *ABS*	00000000 DMEM_264
00004065 l       *ABS*	00000000 DMEM_265
00004066 l       *ABS*	00000000 DMEM_266
00004067 l       *ABS*	00000000 DMEM_267
00004068 l       *ABS*	00000000 DMEM_268
00004069 l       *ABS*	00000000 DMEM_269
0000406a l       *ABS*	00000000 DMEM_26A
0000406b l       *ABS*	00000000 DMEM_26B
0000406c l       *ABS*	00000000 DMEM_26C
0000406d l       *ABS*	00000000 DMEM_26D
0000406e l       *ABS*	00000000 DMEM_26E
0000406f l       *ABS*	00000000 DMEM_26F
00004100 l       *ABS*	00000000 DMEM_300
00004000 l       *ABS*	00000000 PMEM_LENGTH
00000b00 l       *ABS*	00000000 DRAIN_CTRL
00000b02 l       *ABS*	00000000 GATE_S
00000b04 l       *ABS*	00000000 ADC
00000b06 l       *ABS*	00000000 PULSE_CTRL
00000b08 l       *ABS*	00000000 ROW_SEL
00000b0a l       *ABS*	00000000 COL_SEL
00000b0c l       *ABS*	00000000 PROG_BITS
00000b0e l       *ABS*	00000000 TUN_MUX
00000b10 l       *ABS*	00000000 GATE_US_P
00000b12 l       *ABS*	00000000 GATE_US_N
00000b14 l       *ABS*	00000000 BIAS_DACS
00000160 l       *ABS*	00000000 GP_PER_1
00000162 l       *ABS*	00000000 GP_PER_2
00000164 l       *ABS*	00000000 GP_PER_3
00000166 l       *ABS*	00000000 GP_PER_4
00000003 l       *ABS*	00000000 TUN_TIME_SP
00000002 l       *ABS*	00000000 R_TUN_TIME_SP
000001f4 l       *ABS*	00000000 INJ_TIME_SP_1
00001190 l       *ABS*	00000000 ADC_1nA
00000028 l       *ABS*	00000000 TUN_TIME_TP_CAB
00000028 l       *ABS*	00000000 R_TUN_TIME_TP_CAB
00000040 l       *ABS*	00000000 RI_GATE_S_SWC
0000172b l       *ABS*	00000000 RI_VC1_SWC
0000169c l       *ABS*	00000000 RI_VC2_SWC
000014ed l       *ABS*	00000000 RI_VC3_SWC
00001190 l       *ABS*	00000000 RI_VC4_SWC
00000000 l       *ABS*	00000000 RI_GATE_S_OTA
00001a4c l       *ABS*	00000000 RI_VC1_OTA
0000196c l       *ABS*	00000000 RI_VC2_OTA
000016cd l       *ABS*	00000000 RI_VC3_OTA
00001190 l       *ABS*	00000000 RI_VC4_OTA
00000040 l       *ABS*	00000000 RI_GATE_S_OTAREF
000017f7 l       *ABS*	00000000 RI_VC1_OTAREF
00001754 l       *ABS*	00000000 RI_VC2_OTAREF
00001568 l       *ABS*	00000000 RI_VC3_OTAREF
00001190 l       *ABS*	00000000 RI_VC4_OTAREF
00000000 l       *ABS*	00000000 RI_GATE_S_MITE
00001b7b l       *ABS*	00000000 RI_VC1_MITE
00001a7d l       *ABS*	00000000 RI_VC2_MITE
00001784 l       *ABS*	00000000 RI_VC3_MITE
00001190 l       *ABS*	00000000 RI_VC4_MITE
00000040 l       *ABS*	00000000 RIL_GATE_S_SWC
00001190 l       *ABS*	00000000 RIL_VC1_SWC
00001043 l       *ABS*	00000000 RIL_VC2_SWC
00000000 l       *ABS*	00000000 RIL_GATE_S_OTA
00001190 l       *ABS*	00000000 RIL_VC1_OTA
0000104b l       *ABS*	00000000 RIL_VC2_OTA
00000040 l       *ABS*	00000000 RIL_GATE_S_OTAREF
00001190 l       *ABS*	00000000 RIL_VC1_OTAREF
0000104e l       *ABS*	00000000 RIL_VC2_OTAREF
00000000 l       *ABS*	00000000 RIL_GATE_S_MITE
00001190 l       *ABS*	00000000 RIL_VC1_MITE
00001059 l       *ABS*	00000000 RIL_VC2_MITE
00005800 l       *ABS*	00000000 FCP_GATE_S_SWC
00000001 l       *ABS*	00000000 FCP_INJ_T_SWC
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTA
00000003 l       *ABS*	00000000 FCP_INJ_T_OTA
00004a00 l       *ABS*	00000000 FCP_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FCP_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 FCP_GATE_S_MITE
00000003 l       *ABS*	00000000 FCP_INJ_T_MITE
00004400 l       *ABS*	00000000 FCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 FCPL_GATE_S_OTA
00000003 l       *ABS*	00000000 FCPL_INJ_T_OTA
00003400 l       *ABS*	00000000 FCPL_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FCPL_INJ_T_OTAREF
00003200 l       *ABS*	00000000 FCPL_GATE_S_MITE
00000003 l       *ABS*	00000000 FCPL_INJ_T_MITE
00005800 l       *ABS*	00000000 MCPS_GATE_S_SWC
00000001 l       *ABS*	00000000 MCPS_INJ_T_SWC
00004a00 l       *ABS*	00000000 MCPS_GATE_S_OTA
00000003 l       *ABS*	00000000 MCPS_INJ_T_OTA
00004a00 l       *ABS*	00000000 MCPS_GATE_S_OTAREF
00000006 l       *ABS*	00000000 MCPS_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 MCPS_GATE_S_MITE
00000003 l       *ABS*	00000000 MCPS_INJ_T_MITE
00005800 l       *ABS*	00000000 MCPA_GATE_S_SWC
00000001 l       *ABS*	00000000 MCPA_INJ_T_SWC
00004a00 l       *ABS*	00000000 MCPA_GATE_S_OTA
00000003 l       *ABS*	00000000 MCPA_INJ_T_OTA
00004a00 l       *ABS*	00000000 MCPA_GATE_S_OTAREF
00000006 l       *ABS*	00000000 MCPA_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 MCPA_GATE_S_MITE
00000003 l       *ABS*	00000000 MCPA_INJ_T_MITE
00004400 l       *ABS*	00000000 MCPL_GATE_S_SWC
00000001 l       *ABS*	00000000 MCPL_INJ_T_SWC
00003200 l       *ABS*	00000000 MCPL_GATE_S_OTA
00000003 l       *ABS*	00000000 MCPL_INJ_T_OTA
00003400 l       *ABS*	00000000 MCPL_GATE_S_OTAREF
00000006 l       *ABS*	00000000 MCPL_INJ_T_OTAREF
00003200 l       *ABS*	00000000 MCPL_GATE_S_MITE
00000003 l       *ABS*	00000000 MCPL_INJ_T_MITE
00004600 l       *ABS*	00000000 FPS_GATE_S_SWC
00000001 l       *ABS*	00000000 FPS_INJ_T_SWC
00004600 l       *ABS*	00000000 FPS_GATE_S_OTA
00000003 l       *ABS*	00000000 FPS_INJ_T_OTA
00004400 l       *ABS*	00000000 FPS_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FPS_INJ_T_OTAREF
00004600 l       *ABS*	00000000 FPS_GATE_S_MITE
00000003 l       *ABS*	00000000 FPS_INJ_T_MITE
00004800 l       *ABS*	00000000 FPA_GATE_S_SWC
00000001 l       *ABS*	00000000 FPA_INJ_T_SWC
00004000 l       *ABS*	00000000 FPA_GATE_S_OTA
00000003 l       *ABS*	00000000 FPA_INJ_T_OTA
00003e00 l       *ABS*	00000000 FPA_GATE_S_OTAREF
00000006 l       *ABS*	00000000 FPA_INJ_T_OTAREF
00004a00 l       *ABS*	00000000 FPA_GATE_S_MITE
00000003 l       *ABS*	00000000 FPA_INJ_T_MITE
00003c00 l       *ABS*	00000000 FPL_GATE_S_SWC
00000001 l       *ABS*	00000000 FPL_INJ_T_SWC
00002c00 l       *ABS*	00000000 FPL_GATE_S_OTA
00000003 l       *ABS*	00000000 FPL_INJ_T_OTA
00003400 l       *ABS*	00000000 FPL_GATE_S_OTAREF
00000007 l       *ABS*	00000000 FPL_INJ_T_OTAREF
00002e00 l       *ABS*	00000000 FPL_GATE_S_MITE
00000003 l       *ABS*	00000000 FPL_INJ_T_MITE
0000000e l       .text	00000000 init_wait
00000270 l       .text	00000000 block_measure
0000005a l       .text	00000000 fine_loop_s
0000013c l       .text	00000000 measure_verify
00000202 l       .text	00000000 Vd_calculate
00000094 l       .text	00000000 fine_inject
0000006e l       .text	00000000 fine_loop_e
00000070 l       .text	00000000 last_measure_loop_s
0000008a l       .text	00000000 last_measure_loop_e
0000033c l       .text	00000000 end_of_test
000000b0 l       .text	00000000 fine_inject_set_s
00000108 l       .text	00000000 fine_inject_skip
00000318 l       .text	00000000 wait_ms
0000032a l       .text	00000000 wait_10us
0000010e l       .text	00000000 fine_inject_e
00000158 l       .text	00000000 measure_verify_s
000001ee l       .text	00000000 measure_verify_skip
0000019e l       .text	00000000 measure_v9_average_s
000001c8 l       .text	00000000 measure_v9_average_e
000001e4 l       .text	00000000 status_1
000001f4 l       .text	00000000 measure_verify_e
00000208 l       .text	00000000 Vd_cal_s
00000268 l       .text	00000000 No_calculation
00000228 l       .text	00000000 Jump_r8_0
00000252 l       .text	00000000 Jump_r9_0
0000026e l       .text	00000000 Vd_cal_e
0000028c l       .text	00000000 block_measure_s
000002cc l       .text	00000000 measure_9_average_s
000002f6 l       .text	00000000 measure_9_average_e
0000030a l       .text	00000000 block_measure_e
0000031e l       .text	00000000 wait_ms_loop
00000330 l       .text	00000000 wait_10us_loop
00000000 l    d  .vectors	00000000 .vectors
00000000 g       .text	00000000 main


Contents of section .text:
 0000 31405040 37400050 0a433540 401f1583  1@P@7@.P.C5@@...
 0010 fe23b240 10005800 b240805a 200132c2  .#.@..X..@.Z .2.
 0020 a2430e0b b24004be 6401b240 6600000b  .C...@..d..@f...
 0030 b2402400 6001b240 00800c0b 8243080b  .@$.`..@.....C..
 0040 82430a0b 874a0000 2753874a 00002753  .C...J..'S.J..'S
 0050 0d43b012 00003f40 32000d43 b0120000  .C....?@2..C....
 0060 b0120000 b0120000 1f830124 f63f1f43  ...........$.?.C
 0070 b7403333 00002753 874a0000 27530d43  .@33..'S.J..'S.C
 0080 b0120000 1f830124 f33fb743 00008243  .......$.?.C...C
 0090 5800543d 3b400070 2c4bb240 00800c0b  X.T=;@.p,K.@....
 00a0 b24004be 6401b240 24006001 b2430e0b  .@..d..@$.`..C..
 00b0 2b53a24b 080b2b53 a24b0a0b 2b532b53  +S.K..+S.K..+S+S
 00c0 2b53284b 08932024 b2400040 020bb240  +S(K.. $.@.@...@
 00d0 6000100b b2406000 120bb240 6600000b  `....@`....@f...
 00e0 b2401400 60012543 b0120000 8248000b  .@..`.%C.....H..
 00f0 35400300 b0120000 3a500300 b2406600  5@......:P...@f.
 0100 000b1543 b0120000 1c830124 d13fa242  ...C.......$.?.B
 0110 60012543 b0120000 b2402400 60011543  `.%C.....@$.`..C
 0120 b0120000 a2430e0b b2404000 100bb240  .....C...@@....@
 0130 4000120b 1543b012 00003041 3b400070  @....C....0A;@.p
 0140 2c4bb240 00800c0b b24004be 6401b240  ,K.@.....@..d..@
 0150 24006001 a2430e0b 2b53a24b 080b2b53  $.`..C..+S.K..+S
 0160 a24b0a0b 2b532b53 2b53294b 09933f24  .K..+S+S+S)K..?$
 0170 824d020b b2404000 100bb240 4000120b  .M...@@....@@...
 0180 b2406600 000b2543 b0120000 b240a400  .@f...%C.....@..
 0190 000b3540 0a00b012 00002e42 0943b240  ..5@.......B.C.@
 01a0 00b00c0b 35400500 b0120000 8243040b  ....5@.......C..
 01b0 1952040b b2400080 0c0b3540 0a00b012  .R...@....5@....
 01c0 00001e83 0124eb3f 09100910 39c000c0  .....$.?....9...
 01d0 2b832b83 284b2b53 2b530998 03308b43  +.+.(K+S+S...0.C
 01e0 0000053c 2b830889 8b480000 2b531c83  ...<+....H..+S..
 01f0 0124b23f b2406600 000bb240 24006001  .$.?.@f....@$.`.
 0200 30413b40 00702c4b 2b532b53 2b53284b  0A;@.p,K+S+S+S(K
 0210 2b53294b 2b532e4b 0e932624 08893880  +S)K+S.K..&$..8.
 0220 90110893 01340843 08100810 08100810  .....4.C........
 0230 08100810 08100810 38c0c0ff 09100910  ........8.......
 0240 091039c0 00ff3950 15000958 09930134  ..9...9P...X...4
 0250 09430969 19c33950 00682b83 8b490000  .C.i..9P.h+..I..
 0260 2b532e49 8b4e0000 1c830124 cd3f3041  +S.I.N.....$.?0A
 0270 3b400070 2c4bb240 00800c0b b24004be  ;@.p,K.@.....@..
 0280 6401b240 24006001 a2430e0b 2b53a24b  d..@$.`..C..+S.K
 0290 080b2b53 a24b0a0b 2b532b53 2b53824d  ..+S.K..+S+S+S.M
 02a0 020bb240 4000100b b2404000 120bb240  ...@@....@@....@
 02b0 6600000b 2543b012 0000b240 a400000b  f...%C.....@....
 02c0 35400a00 b0120000 2e420943 b24000b0  5@.......B.C.@..
 02d0 0c0b3540 0500b012 00008243 040b1952  ..5@.......C...R
 02e0 040bb240 00800c0b 35400a00 b0120000  ...@....5@......
 02f0 1e830124 eb3f0910 091039c0 00c08749  ...$.?....9....I
 0300 00002753 1c830124 c13fb240 6600000b  ..'S...$.?.@f...
 0310 b2402400 60013041 3440fc0c 06441683  .@$.`.0A4@...D..
 0320 fe230644 1583fb23 30413440 22000644  .#.D...#0A4@"..D
 0330 1683fe23 06441583 fb233041 82435800  ...#.D...#0A.CX.
 0340 03433043                             .C0C            
Contents of section .vectors:
 0000 00000000 00000000 00000000 00000000  ................
 0010 00000000 00000000 00000000 00000000  ................

Disassembly of section .text:

00000000 <main>:
   0:	31 40 50 40 	mov	#16464,	r1	;#0x4050
   4:	37 40 00 50 	mov	#20480,	r7	;#0x5000
   8:	0a 43       	clr	r10		
   a:	35 40 40 1f 	mov	#8000,	r5	;#0x1f40

0000000e <init_wait>:
   e:	15 83       	dec	r5		
  10:	fe 23       	jnz	$-2      	;abs 0xe
  12:	b2 40 10 00 	mov	#16,	&0x0058	;#0x0010
  16:	58 00 
  18:	b2 40 80 5a 	mov	#23168,	&0x0120	;#0x5a80
  1c:	20 01 
  1e:	32 c2       	dint			
  20:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
  24:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  28:	64 01 
  2a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  2e:	00 0b 
  30:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  34:	60 01 
  36:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  3a:	0c 0b 
  3c:	82 43 08 0b 	mov	#0,	&0x0b08	;r3 As==00
  40:	82 43 0a 0b 	mov	#0,	&0x0b0a	;r3 As==00
  44:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  48:	27 53       	incd	r7		
  4a:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  4e:	27 53       	incd	r7		
  50:	0d 43       	clr	r13		
  52:	b0 12 00 00 	call	#0x0000	
			54: R_MSP430_16_BYTE	.text+0x270
  56:	3f 40 32 00 	mov	#50,	r15	;#0x0032

0000005a <fine_loop_s>:
  5a:	0d 43       	clr	r13		
  5c:	b0 12 00 00 	call	#0x0000	
			5e: R_MSP430_16_BYTE	.text+0x13c
  60:	b0 12 00 00 	call	#0x0000	
			62: R_MSP430_16_BYTE	.text+0x202
  64:	b0 12 00 00 	call	#0x0000	
			66: R_MSP430_16_BYTE	.text+0x94
  68:	1f 83       	dec	r15		
  6a:	01 24       	jz	$+4      	;abs 0x6e
  6c:	f6 3f       	jmp	$-18     	;abs 0x5a

0000006e <fine_loop_e>:
  6e:	1f 43       	mov	#1,	r15	;r3 As==01

00000070 <last_measure_loop_s>:
  70:	b7 40 33 33 	mov	#13107,	0(r7)	;#0x3333, 0x0000(r7)
  74:	00 00 
  76:	27 53       	incd	r7		
  78:	87 4a 00 00 	mov	r10,	0(r7)	;0x0000(r7)
  7c:	27 53       	incd	r7		
  7e:	0d 43       	clr	r13		
  80:	b0 12 00 00 	call	#0x0000	
			82: R_MSP430_16_BYTE	.text+0x270
  84:	1f 83       	dec	r15		
  86:	01 24       	jz	$+4      	;abs 0x8a
  88:	f3 3f       	jmp	$-24     	;abs 0x70

0000008a <last_measure_loop_e>:
  8a:	b7 43 00 00 	mov	#-1,	0(r7)	;r3 As==11, 0x0000(r7)
  8e:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
  92:	54 3d       	jmp	$+682    	;abs 0x33c

00000094 <fine_inject>:
  94:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
  98:	2c 4b       	mov	@r11,	r12	
  9a:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
  9e:	0c 0b 
  a0:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
  a4:	64 01 
  a6:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
  aa:	60 01 
  ac:	b2 43 0e 0b 	mov	#-1,	&0x0b0e	;r3 As==11

000000b0 <fine_inject_set_s>:
  b0:	2b 53       	incd	r11		
  b2:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
  b6:	2b 53       	incd	r11		
  b8:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
  bc:	2b 53       	incd	r11		
  be:	2b 53       	incd	r11		
  c0:	2b 53       	incd	r11		
  c2:	28 4b       	mov	@r11,	r8	
  c4:	08 93       	tst	r8		
  c6:	20 24       	jz	$+66     	;abs 0x108
  c8:	b2 40 00 40 	mov	#16384,	&0x0b02	;#0x4000
  cc:	02 0b 
  ce:	b2 40 60 00 	mov	#96,	&0x0b10	;#0x0060
  d2:	10 0b 
  d4:	b2 40 60 00 	mov	#96,	&0x0b12	;#0x0060
  d8:	12 0b 
  da:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
  de:	00 0b 
  e0:	b2 40 14 00 	mov	#20,	&0x0160	;#0x0014
  e4:	60 01 
  e6:	25 43       	mov	#2,	r5	;r3 As==10
  e8:	b0 12 00 00 	call	#0x0000	
			ea: R_MSP430_16_BYTE	.text+0x318
  ec:	82 48 00 0b 	mov	r8,	&0x0b00	
  f0:	35 40 03 00 	mov	#3,	r5	;#0x0003
  f4:	b0 12 00 00 	call	#0x0000	
			f6: R_MSP430_16_BYTE	.text+0x32a
  f8:	3a 50 03 00 	add	#3,	r10	;#0x0003
  fc:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 100:	00 0b 
 102:	15 43       	mov	#1,	r5	;r3 As==01
 104:	b0 12 00 00 	call	#0x0000	
			106: R_MSP430_16_BYTE	.text+0x318

00000108 <fine_inject_skip>:
 108:	1c 83       	dec	r12		
 10a:	01 24       	jz	$+4      	;abs 0x10e
 10c:	d1 3f       	jmp	$-92     	;abs 0xb0

0000010e <fine_inject_e>:
 10e:	a2 42 60 01 	mov	#4,	&0x0160	;r2 As==10
 112:	25 43       	mov	#2,	r5	;r3 As==10
 114:	b0 12 00 00 	call	#0x0000	
			116: R_MSP430_16_BYTE	.text+0x318
 118:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 11c:	60 01 
 11e:	15 43       	mov	#1,	r5	;r3 As==01
 120:	b0 12 00 00 	call	#0x0000	
			122: R_MSP430_16_BYTE	.text+0x318
 124:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10
 128:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 12c:	10 0b 
 12e:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 132:	12 0b 
 134:	15 43       	mov	#1,	r5	;r3 As==01
 136:	b0 12 00 00 	call	#0x0000	
			138: R_MSP430_16_BYTE	.text+0x318
 13a:	30 41       	ret			

0000013c <measure_verify>:
 13c:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 140:	2c 4b       	mov	@r11,	r12	
 142:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 146:	0c 0b 
 148:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 14c:	64 01 
 14e:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 152:	60 01 
 154:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

00000158 <measure_verify_s>:
 158:	2b 53       	incd	r11		
 15a:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 15e:	2b 53       	incd	r11		
 160:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 164:	2b 53       	incd	r11		
 166:	2b 53       	incd	r11		
 168:	2b 53       	incd	r11		
 16a:	29 4b       	mov	@r11,	r9	
 16c:	09 93       	tst	r9		
 16e:	3f 24       	jz	$+128    	;abs 0x1ee
 170:	82 4d 02 0b 	mov	r13,	&0x0b02	
 174:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 178:	10 0b 
 17a:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 17e:	12 0b 
 180:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 184:	00 0b 
 186:	25 43       	mov	#2,	r5	;r3 As==10
 188:	b0 12 00 00 	call	#0x0000	
			18a: R_MSP430_16_BYTE	.text+0x318
 18c:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 190:	00 0b 
 192:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 196:	b0 12 00 00 	call	#0x0000	
			198: R_MSP430_16_BYTE	.text+0x318
 19a:	2e 42       	mov	#4,	r14	;r2 As==10
 19c:	09 43       	clr	r9		

0000019e <measure_v9_average_s>:
 19e:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 1a2:	0c 0b 
 1a4:	35 40 05 00 	mov	#5,	r5	;#0x0005
 1a8:	b0 12 00 00 	call	#0x0000	
			1aa: R_MSP430_16_BYTE	.text+0x318
 1ac:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 1b0:	19 52 04 0b 	add	&0x0b04,r9	
 1b4:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 1b8:	0c 0b 
 1ba:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 1be:	b0 12 00 00 	call	#0x0000	
			1c0: R_MSP430_16_BYTE	.text+0x32a
 1c2:	1e 83       	dec	r14		
 1c4:	01 24       	jz	$+4      	;abs 0x1c8
 1c6:	eb 3f       	jmp	$-40     	;abs 0x19e

000001c8 <measure_v9_average_e>:
 1c8:	09 10       	rrc	r9		
 1ca:	09 10       	rrc	r9		
 1cc:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 1d0:	2b 83       	decd	r11		
 1d2:	2b 83       	decd	r11		
 1d4:	28 4b       	mov	@r11,	r8	
 1d6:	2b 53       	incd	r11		
 1d8:	2b 53       	incd	r11		
 1da:	09 98       	cmp	r8,	r9	
 1dc:	03 30       	jn	$+8      	;abs 0x1e4
 1de:	8b 43 00 00 	mov	#0,	0(r11)	;r3 As==00, 0x0000(r11)
 1e2:	05 3c       	jmp	$+12     	;abs 0x1ee

000001e4 <status_1>:
 1e4:	2b 83       	decd	r11		
 1e6:	08 89       	sub	r9,	r8	
 1e8:	8b 48 00 00 	mov	r8,	0(r11)	;0x0000(r11)
 1ec:	2b 53       	incd	r11		

000001ee <measure_verify_skip>:
 1ee:	1c 83       	dec	r12		
 1f0:	01 24       	jz	$+4      	;abs 0x1f4
 1f2:	b2 3f       	jmp	$-154    	;abs 0x158

000001f4 <measure_verify_e>:
 1f4:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 1f8:	00 0b 
 1fa:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 1fe:	60 01 
 200:	30 41       	ret			

00000202 <Vd_calculate>:
 202:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 206:	2c 4b       	mov	@r11,	r12	

00000208 <Vd_cal_s>:
 208:	2b 53       	incd	r11		
 20a:	2b 53       	incd	r11		
 20c:	2b 53       	incd	r11		
 20e:	28 4b       	mov	@r11,	r8	
 210:	2b 53       	incd	r11		
 212:	29 4b       	mov	@r11,	r9	
 214:	2b 53       	incd	r11		
 216:	2e 4b       	mov	@r11,	r14	
 218:	0e 93       	tst	r14		
 21a:	26 24       	jz	$+78     	;abs 0x268
 21c:	08 89       	sub	r9,	r8	
 21e:	38 80 90 11 	sub	#4496,	r8	;#0x1190
 222:	08 93       	tst	r8		
 224:	01 34       	jge	$+4      	;abs 0x228
 226:	08 43       	clr	r8		

00000228 <Jump_r8_0>:
 228:	08 10       	rrc	r8		
 22a:	08 10       	rrc	r8		
 22c:	08 10       	rrc	r8		
 22e:	08 10       	rrc	r8		
 230:	08 10       	rrc	r8		
 232:	08 10       	rrc	r8		
 234:	08 10       	rrc	r8		
 236:	08 10       	rrc	r8		
 238:	38 c0 c0 ff 	bic	#-64,	r8	;#0xffc0
 23c:	09 10       	rrc	r9		
 23e:	09 10       	rrc	r9		
 240:	09 10       	rrc	r9		
 242:	39 c0 00 ff 	bic	#-256,	r9	;#0xff00
 246:	39 50 15 00 	add	#21,	r9	;#0x0015
 24a:	09 58       	add	r8,	r9	
 24c:	09 93       	tst	r9		
 24e:	01 34       	jge	$+4      	;abs 0x252
 250:	09 43       	clr	r9		

00000252 <Jump_r9_0>:
 252:	09 69       	rlc	r9		
 254:	19 c3       	bic	#1,	r9	;r3 As==01
 256:	39 50 00 68 	add	#26624,	r9	;#0x6800
 25a:	2b 83       	decd	r11		
 25c:	8b 49 00 00 	mov	r9,	0(r11)	;0x0000(r11)
 260:	2b 53       	incd	r11		
 262:	2e 49       	mov	@r9,	r14	
 264:	8b 4e 00 00 	mov	r14,	0(r11)	;0x0000(r11)

00000268 <No_calculation>:
 268:	1c 83       	dec	r12		
 26a:	01 24       	jz	$+4      	;abs 0x26e
 26c:	cd 3f       	jmp	$-100    	;abs 0x208

0000026e <Vd_cal_e>:
 26e:	30 41       	ret			

00000270 <block_measure>:
 270:	3b 40 00 70 	mov	#28672,	r11	;#0x7000
 274:	2c 4b       	mov	@r11,	r12	
 276:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 27a:	0c 0b 
 27c:	b2 40 04 be 	mov	#-16892,&0x0164	;#0xbe04
 280:	64 01 
 282:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 286:	60 01 
 288:	a2 43 0e 0b 	mov	#2,	&0x0b0e	;r3 As==10

0000028c <block_measure_s>:
 28c:	2b 53       	incd	r11		
 28e:	a2 4b 08 0b 	mov	@r11,	&0x0b08	
 292:	2b 53       	incd	r11		
 294:	a2 4b 0a 0b 	mov	@r11,	&0x0b0a	
 298:	2b 53       	incd	r11		
 29a:	2b 53       	incd	r11		
 29c:	2b 53       	incd	r11		
 29e:	82 4d 02 0b 	mov	r13,	&0x0b02	
 2a2:	b2 40 40 00 	mov	#64,	&0x0b10	;#0x0040
 2a6:	10 0b 
 2a8:	b2 40 40 00 	mov	#64,	&0x0b12	;#0x0040
 2ac:	12 0b 
 2ae:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 2b2:	00 0b 
 2b4:	25 43       	mov	#2,	r5	;r3 As==10
 2b6:	b0 12 00 00 	call	#0x0000	
			2b8: R_MSP430_16_BYTE	.text+0x318
 2ba:	b2 40 a4 00 	mov	#164,	&0x0b00	;#0x00a4
 2be:	00 0b 
 2c0:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2c4:	b0 12 00 00 	call	#0x0000	
			2c6: R_MSP430_16_BYTE	.text+0x318
 2c8:	2e 42       	mov	#4,	r14	;r2 As==10
 2ca:	09 43       	clr	r9		

000002cc <measure_9_average_s>:
 2cc:	b2 40 00 b0 	mov	#-20480,&0x0b0c	;#0xb000
 2d0:	0c 0b 
 2d2:	35 40 05 00 	mov	#5,	r5	;#0x0005
 2d6:	b0 12 00 00 	call	#0x0000	
			2d8: R_MSP430_16_BYTE	.text+0x318
 2da:	82 43 04 0b 	mov	#0,	&0x0b04	;r3 As==00
 2de:	19 52 04 0b 	add	&0x0b04,r9	
 2e2:	b2 40 00 80 	mov	#-32768,&0x0b0c	;#0x8000
 2e6:	0c 0b 
 2e8:	35 40 0a 00 	mov	#10,	r5	;#0x000a
 2ec:	b0 12 00 00 	call	#0x0000	
			2ee: R_MSP430_16_BYTE	.text+0x32a
 2f0:	1e 83       	dec	r14		
 2f2:	01 24       	jz	$+4      	;abs 0x2f6
 2f4:	eb 3f       	jmp	$-40     	;abs 0x2cc

000002f6 <measure_9_average_e>:
 2f6:	09 10       	rrc	r9		
 2f8:	09 10       	rrc	r9		
 2fa:	39 c0 00 c0 	bic	#-16384,r9	;#0xc000
 2fe:	87 49 00 00 	mov	r9,	0(r7)	;0x0000(r7)
 302:	27 53       	incd	r7		
 304:	1c 83       	dec	r12		
 306:	01 24       	jz	$+4      	;abs 0x30a
 308:	c1 3f       	jmp	$-124    	;abs 0x28c

0000030a <block_measure_e>:
 30a:	b2 40 66 00 	mov	#102,	&0x0b00	;#0x0066
 30e:	00 0b 
 310:	b2 40 24 00 	mov	#36,	&0x0160	;#0x0024
 314:	60 01 
 316:	30 41       	ret			

00000318 <wait_ms>:
 318:	34 40 fc 0c 	mov	#3324,	r4	;#0x0cfc
 31c:	06 44       	mov	r4,	r6	

0000031e <wait_ms_loop>:
 31e:	16 83       	dec	r6		
 320:	fe 23       	jnz	$-2      	;abs 0x31e
 322:	06 44       	mov	r4,	r6	
 324:	15 83       	dec	r5		
 326:	fb 23       	jnz	$-8      	;abs 0x31e
 328:	30 41       	ret			

0000032a <wait_10us>:
 32a:	34 40 22 00 	mov	#34,	r4	;#0x0022
 32e:	06 44       	mov	r4,	r6	

00000330 <wait_10us_loop>:
 330:	16 83       	dec	r6		
 332:	fe 23       	jnz	$-2      	;abs 0x330
 334:	06 44       	mov	r4,	r6	
 336:	15 83       	dec	r5		
 338:	fb 23       	jnz	$-8      	;abs 0x330
 33a:	30 41       	ret			

0000033c <end_of_test>:
 33c:	82 43 58 00 	mov	#0,	&0x0058	;r3 As==00
 340:	03 43       	nop			
 342:	30 43       	br	#-1		;r3 As==11
